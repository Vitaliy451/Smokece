{
  "entityType" : "TB_RESOURCE",
  "entity" : {
    "data" : "System.register(["@angular/core","@core/public-api","@angular/common","@shared/public-api","@home/components/public-api","@angular/forms","rxjs","@ngrx/store","@home/components/widget/widget-config.component","@angular/flex-layout","@ngx-translate/core"],(function(t){"use strict";var e,n,i,o,a,s,r,l,c,d,h,u,g,p,f,m,x,b,y,_,v,M,w,C,k,S,P,O,D,E,T,A,L,I,F,R,z,V,B,N,W,j,H,$,U,Y,K,q,X,G,Z,J;return{setters:[function(t){e=t,n=t.EventEmitter,i=t.PLATFORM_ID,o=t.booleanAttribute,a=t.Component,s=t.ChangeDetectionStrategy,r=t.ViewEncapsulation,l=t.Inject,c=t.Input,d=t.Output,h=t.NgModule,u=t.ɵNG_COMP_DEF},function(t){g=t.formatValue,p=t.isDefinedAndNotNull,f=t},function(t){m=t.isPlatformBrowser,x=t,b=t.CommonModule},function(t){y=t.PageComponent,_=t.EntityType,v=t.EntitySearchDirection,M=t.AttributeScope,w=t.RelationTypeGroup,C=t.constantColor,k=t.ColorProcessor,S=t.textStyle,P=t.iconStyle,O=t.WidgetSettingsComponent,D=t.DatasourceType,E=t.DataKeyType,T=t.AliasFilterType,A=t.EntityKeyType,L=t.BooleanOperation,I=t.FilterPredicateType,F=t.EntityKeyValueType,R=t.widgetType,z=t.SharedModule},function(t){V=t.BasicWidgetConfigComponent,B=t.HomeComponentsModule,N=t.BasicWidgetConfigModule,W=t.WidgetConfigComponentsModule},function(t){j=t.Validators,H=t},function(t){$=t.Subject,U=t.of,Y=t.forkJoin,K=t.mergeMap,q=t.takeUntil},function(t){X=t},function(t){G=t},function(t){Z=t.FlexLayoutModule},function(t){J=t}],execute:function(){function Q(t,n){if(1&t&&(e.ɵɵelementStart(0,"div",4)(1,"div",5),e.ɵɵtext(2),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",6),e.ɵɵtext(4),e.ɵɵelementEnd()()),2&t){const t=n.$implicit;e.ɵɵadvance(2),e.ɵɵtextInterpolate(t.key),e.ɵɵadvance(2),e.ɵɵtextInterpolate(t.value)}}var tt;!function(t){t.DECIMALS="decimals",t.UNITS="units"}(tt||(tt={}));class et{constructor(){this.tableValues={}}ngOnInit(){this.ctx.$scope.exampleTableComponent=this,this.entityName=this.ctx.datasources[0].entityName}onDataUpdated(){for(const t of this.ctx.data)if(t.data.length){const e=t.dataKey.label,n=g(t.data[0][1],this.getFormatInfo(t.dataKey,tt.DECIMALS),this.getFormatInfo(t.dataKey,tt.UNITS),!1);this.tableValues[e]=n}this.ctx.detectChanges()}getFormatInfo(t,e){let n=this.ctx[e];return p(t[e])&&(n=t[e]),n}static{this.ɵfac=function(t){return new(t||et)}}static{this.ɵcmp=e.ɵɵdefineComponent({type:et,selectors:[["tb-example-table"]],inputs:{ctx:"ctx"},decls:6,vars:4,consts:[[1,"table"],[1,"header"],[1,"content"],["class","content-column",4,"ngFor","ngForOf"],[1,"content-column"],[1,"content-key"],[1,"content-value"]],template:function(t,n){1&t&&(e.ɵɵelementStart(0,"div",0)(1,"div",1),e.ɵɵtext(2),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",2),e.ɵɵtemplate(4,Q,5,2,"div",3),e.ɵɵpipe(5,"keyvalue"),e.ɵɵelementEnd()()),2&t&&(e.ɵɵadvance(2),e.ɵɵtextInterpolate1(" ",n.entityName," "),e.ɵɵadvance(2),e.ɵɵproperty("ngForOf",e.ɵɵpipeBind1(5,2,n.tableValues)))},dependencies:e.ɵɵgetComponentDepsFactory(et),styles:["[_nghost-%COMP%]{display:block;height:100%}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;gap:10px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-weight:500;font-size:30px;line-height:36px;color:#757575}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.1176470588);border-radius:4px;overflow:auto}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;padding:0 15px;align-items:center;height:60px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]   .content-value[_ngcontent-%COMP%]{font-weight:500;font-size:30px;line-height:36px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]:not(:last-child){border-bottom:1px solid rgba(0,0,0,.1176470588)}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content-key[_ngcontent-%COMP%]{font-size:18px;line-height:24px;letter-spacing:.4px;color:#757575}"]})}}t("ExampleTableComponent",et);const nt="undefined"==typeof window?function(t){return t()}:window.requestAnimationFrame;function it(t,e,n){const i=n||(t=>Array.prototype.slice.call(t));let o=!1,a=[];return function(...n){a=i(n),o||(o=!0,nt.call(window,(()=>{o=!1,t.apply(e,a)})))}}const ot=t=>"start"===t?"left":"end"===t?"right":"center",at=(t,e,n)=>"start"===t?e:"end"===t?n:(e+n)/2;function st(){}const rt=function(){let t=0;return function(){return t++}}();function lt(t){return null==t}function ct(t){if(Array.isArray&&Array.isArray(t))return!0;const e=Object.prototype.toString.call(t);return"[object"===e.substr(0,7)&&"Array]"===e.substr(-6)}function dt(t){return null!==t&&"[object Object]"===Object.prototype.toString.call(t)}const ht=t=>("number"==typeof t||t instanceof Number)&&isFinite(+t);function ut(t,e){return ht(t)?t:e}function gt(t,e){return void 0===t?e:t}const pt=(t,e)=>"string"==typeof t&&t.endsWith("%")?parseFloat(t)/100*e:+t;function ft(t,e,n){if(t&&"function"==typeof t.call)return t.apply(n,e)}function mt(t,e,n,i){let o,a,s;if(ct(t))if(a=t.length,i)for(o=a-1;o>=0;o--)e.call(n,t[o],o);else for(o=0;o<a;o++)e.call(n,t[o],o);else if(dt(t))for(s=Object.keys(t),a=s.length,o=0;o<a;o++)e.call(n,t[s[o]],s[o])}function xt(t,e){let n,i,o,a;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(o=t[n],a=e[n],o.datasetIndex!==a.datasetIndex||o.index!==a.index)return!1;return!0}function bt(t){if(ct(t))return t.map(bt);if(dt(t)){const e=Object.create(null),n=Object.keys(t),i=n.length;let o=0;for(;o<i;++o)e[n[o]]=bt(t[n[o]]);return e}return t}function yt(t){return-1===["__proto__","prototype","constructor"].indexOf(t)}function _t(t,e,n,i){if(!yt(t))return;const o=e[t],a=n[t];dt(o)&&dt(a)?vt(o,a,i):e[t]=bt(a)}function vt(t,e,n){const i=ct(e)?e:[e],o=i.length;if(!dt(t))return t;const a=(n=n||{}).merger||_t;for(let s=0;s<o;++s){if(!dt(e=i[s]))continue;const o=Object.keys(e);for(let i=0,s=o.length;i<s;++i)a(o[i],t,e,n)}return t}function Mt(t,e){return vt(t,e,{merger:wt})}function wt(t,e,n){if(!yt(t))return;const i=e[t],o=n[t];dt(i)&&dt(o)?Mt(i,o):Object.prototype.hasOwnProperty.call(e,t)||(e[t]=bt(o))}function Ct(t,e){const n=t.indexOf(".",e);return-1===n?t.length:n}function kt(t,e){if(""===e)return t;let n=0,i=Ct(e,n);for(;t&&i>n;)t=t[e.substr(n,i-n)],n=i+1,i=Ct(e,n);return t}function St(t){return t.charAt(0).toUpperCase()+t.slice(1)}const Pt=t=>void 0!==t,Ot=t=>"function"==typeof t,Dt=Math.PI,Et=2*Dt,Tt=Et+Dt,At=Number.POSITIVE_INFINITY,Lt=Dt/180,It=Dt/2,Ft=Dt/4,Rt=2*Dt/3,zt=Math.log10,Vt=Math.sign;function Bt(t){const e=Math.pow(10,Math.floor(zt(t))),n=t/e;return(n<=1?1:n<=2?2:n<=5?5:10)*e}function Nt(t){return!isNaN(parseFloat(t))&&isFinite(t)}function Wt(t,e,n){return Math.abs(t-e)<n}function jt(t,e,n){let i,o,a;for(i=0,o=t.length;i<o;i++)a=t[i][n],isNaN(a)||(e.min=Math.min(e.min,a),e.max=Math.max(e.max,a))}function Ht(t){return t*(Dt/180)}function $t(t){return t*(180/Dt)}function Ut(t){if(!ht(t))return;let e=1,n=0;for(;Math.round(t*e)/e!==t;)e*=10,n++;return n}function Yt(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function Kt(t,e){return(t-e+Tt)%Et-Dt}function qt(t){return(t%Et+Et)%Et}function Xt(t,e,n,i){const o=qt(t),a=qt(e),s=qt(n),r=qt(a-o),l=qt(s-o),c=qt(o-a),d=qt(o-s);return o===a||o===s||i&&a===s||r>l&&c<d}function Gt(t,e,n){return Math.max(e,Math.min(n,t))}const Zt=t=>0===t||1===t,Jt=(t,e,n)=>-Math.pow(2,10*(t-=1))*Math.sin((t-e)*Et/n),Qt=(t,e,n)=>Math.pow(2,-10*t)*Math.sin((t-e)*Et/n)+1,te={linear:t=>t,easeInQuad:t=>t*t,easeOutQuad:t=>-t*(t-2),easeInOutQuad:t=>(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1),easeInCubic:t=>t*t*t,easeOutCubic:t=>(t-=1)*t*t+1,easeInOutCubic:t=>(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2),easeInQuart:t=>t*t*t*t,easeOutQuart:t=>-((t-=1)*t*t*t-1),easeInOutQuart:t=>(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2),easeInQuint:t=>t*t*t*t*t,easeOutQuint:t=>(t-=1)*t*t*t*t+1,easeInOutQuint:t=>(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2),easeInSine:t=>1-Math.cos(t*It),easeOutSine:t=>Math.sin(t*It),easeInOutSine:t=>-.5*(Math.cos(Dt*t)-1),easeInExpo:t=>0===t?0:Math.pow(2,10*(t-1)),easeOutExpo:t=>1===t?1:1-Math.pow(2,-10*t),easeInOutExpo:t=>Zt(t)?t:t<.5?.5*Math.pow(2,10*(2*t-1)):.5*(2-Math.pow(2,-10*(2*t-1))),easeInCirc:t=>t>=1?t:-(Math.sqrt(1-t*t)-1),easeOutCirc:t=>Math.sqrt(1-(t-=1)*t),easeInOutCirc:t=>(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1),easeInElastic:t=>Zt(t)?t:Jt(t,.075,.3),easeOutElastic:t=>Zt(t)?t:Qt(t,.075,.3),easeInOutElastic(t){const e=.1125;return Zt(t)?t:t<.5?.5*Jt(2*t,e,.45):.5+.5*Qt(2*t-1,e,.45)},easeInBack(t){const e=1.70158;return t*t*((e+1)*t-e)},easeOutBack(t){const e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},easeInOutBack(t){let e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},easeInBounce:t=>1-te.easeOutBounce(1-t),easeOutBounce(t){const e=7.5625,n=2.75;return t<1/n?e*t*t:t<2/n?e*(t-=1.5/n)*t+.75:t<2.5/n?e*(t-=2.25/n)*t+.9375:e*(t-=2.625/n)*t+.984375},easeInOutBounce:t=>t<.5?.5*te.easeInBounce(2*t):.5*te.easeOutBounce(2*t-1)+.5},ee={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},ne="0123456789ABCDEF",ie=t=>ne[15&t],oe=t=>ne[(240&t)>>4]+ne[15&t],ae=t=>(240&t)>>4==(15&t);function se(t){var e=function(t){return ae(t.r)&&ae(t.g)&&ae(t.b)&&ae(t.a)}(t)?ie:oe;return t?"#"+e(t.r)+e(t.g)+e(t.b)+(t.a<255?e(t.a):""):t}function re(t){return t+.5|0}const le=(t,e,n)=>Math.max(Math.min(t,n),e);function ce(t){return le(re(2.55*t),0,255)}function de(t){return le(re(255*t),0,255)}function he(t){return le(re(t/2.55)/100,0,1)}function ue(t){return le(re(100*t),0,100)}const ge=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;const pe=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function fe(t,e,n){const i=e*Math.min(n,1-n),o=(e,o=(e+t/30)%12)=>n-i*Math.max(Math.min(o-3,9-o,1),-1);return[o(0),o(8),o(4)]}function me(t,e,n){const i=(i,o=(i+t/60)%6)=>n-n*e*Math.max(Math.min(o,4-o,1),0);return[i(5),i(3),i(1)]}function xe(t,e,n){const i=fe(t,1,.5);let o;for(e+n>1&&(o=1/(e+n),e*=o,n*=o),o=0;o<3;o++)i[o]*=1-e-n,i[o]+=e;return i}function be(t){const e=t.r/255,n=t.g/255,i=t.b/255,o=Math.max(e,n,i),a=Math.min(e,n,i),s=(o+a)/2;let r,l,c;return o!==a&&(c=o-a,l=s>.5?c/(2-o-a):c/(o+a),r=o===e?(n-i)/c+(n<i?6:0):o===n?(i-e)/c+2:(e-n)/c+4,r=60*r+.5),[0|r,l||0,s]}function ye(t,e,n,i){return(Array.isArray(e)?t(e[0],e[1],e[2]):t(e,n,i)).map(de)}function _e(t,e,n){return ye(fe,t,e,n)}function ve(t){return(t%360+360)%360}function Me(t){const e=pe.exec(t);let n,i=255;if(!e)return;e[5]!==n&&(i=e[6]?ce(+e[5]):de(+e[5]));const o=ve(+e[2]),a=+e[3]/100,s=+e[4]/100;return n="hwb"===e[1]?function(t,e,n){return ye(xe,t,e,n)}(o,a,s):"hsv"===e[1]?function(t,e,n){return ye(me,t,e,n)}(o,a,s):_e(o,a,s),{r:n[0],g:n[1],b:n[2],a:i}}const we={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},Ce={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};let ke;function Se(t){ke||(ke=function(){const t={},e=Object.keys(Ce),n=Object.keys(we);let i,o,a,s,r;for(i=0;i<e.length;i++){for(s=r=e[i],o=0;o<n.length;o++)a=n[o],r=r.replace(a,we[a]);a=parseInt(Ce[s],16),t[r]=[a>>16&255,a>>8&255,255&a]}return t}(),ke.transparent=[0,0,0,0]);const e=ke[t.toLowerCase()];return e&&{r:e[0],g:e[1],b:e[2],a:4===e.length?e[3]:255}}function Pe(t,e,n){if(t){let i=be(t);i[e]=Math.max(0,Math.min(i[e]+i[e]*n,0===e?360:1)),i=_e(i),t.r=i[0],t.g=i[1],t.b=i[2]}}function Oe(t,e){return t?Object.assign(e||{},t):t}function De(t){var e={r:0,g:0,b:0,a:255};return Array.isArray(t)?t.length>=3&&(e={r:t[0],g:t[1],b:t[2],a:255},t.length>3&&(e.a=de(t[3]))):(e=Oe(t,{r:0,g:0,b:0,a:1})).a=de(e.a),e}function Ee(t){return"r"===t.charAt(0)?function(t){const e=ge.exec(t);let n,i,o,a=255;if(e){if(e[7]!==n){const t=+e[7];a=255&(e[8]?ce(t):255*t)}return n=+e[1],i=+e[3],o=+e[5],n=255&(e[2]?ce(n):n),i=255&(e[4]?ce(i):i),o=255&(e[6]?ce(o):o),{r:n,g:i,b:o,a:a}}}(t):Me(t)}class Te{constructor(t){if(t instanceof Te)return t;const e=typeof t;let n;var i,o,a;"object"===e?n=De(t):"string"===e&&(a=(i=t).length,"#"===i[0]&&(4===a||5===a?o={r:255&17*ee[i[1]],g:255&17*ee[i[2]],b:255&17*ee[i[3]],a:5===a?17*ee[i[4]]:255}:7!==a&&9!==a||(o={r:ee[i[1]]<<4|ee[i[2]],g:ee[i[3]]<<4|ee[i[4]],b:ee[i[5]]<<4|ee[i[6]],a:9===a?ee[i[7]]<<4|ee[i[8]]:255})),n=o||Se(t)||Ee(t)),this._rgb=n,this._valid=!!n}get valid(){return this._valid}get rgb(){var t=Oe(this._rgb);return t&&(t.a=he(t.a)),t}set rgb(t){this._rgb=De(t)}rgbString(){return this._valid?(t=this._rgb)&&(t.a<255?`rgba(${t.r}, ${t.g}, ${t.b}, ${he(t.a)})`:`rgb(${t.r}, ${t.g}, ${t.b})`):this._rgb;var t}hexString(){return this._valid?se(this._rgb):this._rgb}hslString(){return this._valid?function(t){if(!t)return;const e=be(t),n=e[0],i=ue(e[1]),o=ue(e[2]);return t.a<255?`hsla(${n}, ${i}%, ${o}%, ${he(t.a)})`:`hsl(${n}, ${i}%, ${o}%)`}(this._rgb):this._rgb}mix(t,e){const n=this;if(t){const i=n.rgb,o=t.rgb;let a;const s=e===a?.5:e,r=2*s-1,l=i.a-o.a,c=((r*l==-1?r:(r+l)/(1+r*l))+1)/2;a=1-c,i.r=255&c*i.r+a*o.r+.5,i.g=255&c*i.g+a*o.g+.5,i.b=255&c*i.b+a*o.b+.5,i.a=s*i.a+(1-s)*o.a,n.rgb=i}return n}clone(){return new Te(this.rgb)}alpha(t){return this._rgb.a=de(t),this}clearer(t){return this._rgb.a*=1-t,this}greyscale(){const t=this._rgb,e=re(.3*t.r+.59*t.g+.11*t.b);return t.r=t.g=t.b=e,this}opaquer(t){return this._rgb.a*=1+t,this}negate(){const t=this._rgb;return t.r=255-t.r,t.g=255-t.g,t.b=255-t.b,this}lighten(t){return Pe(this._rgb,2,t),this}darken(t){return Pe(this._rgb,2,-t),this}saturate(t){return Pe(this._rgb,1,t),this}desaturate(t){return Pe(this._rgb,1,-t),this}rotate(t){return function(t,e){var n=be(t);n[0]=ve(n[0]+e),n=_e(n),t.r=n[0],t.g=n[1],t.b=n[2]}(this._rgb,t),this}}function Ae(t){return new Te(t)}const Le=t=>t instanceof CanvasGradient||t instanceof CanvasPattern;function Ie(t){return Le(t)?t:Ae(t)}function Fe(t){return Le(t)?t:Ae(t).saturate(.5).darken(.1).hexString()}const Re=Object.create(null),ze=Object.create(null);function Ve(t,e){if(!e)return t;const n=e.split(".");for(let e=0,i=n.length;e<i;++e){const i=n[e];t=t[i]||(t[i]=Object.create(null))}return t}function Be(t,e,n){return"string"==typeof e?vt(Ve(t,e),n):vt(Ve(t,""),e)}var Ne=new class{constructor(t){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=t=>t.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(t,e)=>Fe(e.backgroundColor),this.hoverBorderColor=(t,e)=>Fe(e.borderColor),this.hoverColor=(t,e)=>Fe(e.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.describe(t)}set(t,e){return Be(this,t,e)}get(t){return Ve(this,t)}describe(t,e){return Be(ze,t,e)}override(t,e){return Be(Re,t,e)}route(t,e,n,i){const o=Ve(this,t),a=Ve(this,n),s="_"+e;Object.defineProperties(o,{[s]:{value:o[e],writable:!0},[e]:{enumerable:!0,get(){const t=this[s],e=a[i];return dt(t)?Object.assign({},e,t):gt(t,e)},set(t){this[s]=t}}})}}({_scriptable:t=>!t.startsWith("on"),_indexable:t=>"events"!==t,hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}});function We(t,e,n,i,o){let a=e[o];return a||(a=e[o]=t.measureText(o).width,n.push(o)),a>i&&(i=a),i}function je(t,e,n,i){let o=(i=i||{}).data=i.data||{},a=i.garbageCollect=i.garbageCollect||[];i.font!==e&&(o=i.data={},a=i.garbageCollect=[],i.font=e),t.save(),t.font=e;let s=0;const r=n.length;let l,c,d,h,u;for(l=0;l<r;l++)if(h=n[l],null!=h&&!0!==ct(h))s=We(t,o,a,s,h);else if(ct(h))for(c=0,d=h.length;c<d;c++)u=h[c],null==u||ct(u)||(s=We(t,o,a,s,u));t.restore();const g=a.length/2;if(g>n.length){for(l=0;l<g;l++)delete o[a[l]];a.splice(0,g)}return s}function He(t,e,n){const i=t.currentDevicePixelRatio,o=0!==n?Math.max(n/2,.5):0;return Math.round((e-o)*i)/i+o}function $e(t,e){(e=e||t.getContext("2d")).save(),e.resetTransform(),e.clearRect(0,0,t.width,t.height),e.restore()}function Ue(t,e,n,i){let o,a,s,r,l;const c=e.pointStyle,d=e.rotation,h=e.radius;let u=(d||0)*Lt;if(c&&"object"==typeof c&&(o=c.toString(),"[object HTMLImageElement]"===o||"[object HTMLCanvasElement]"===o))return t.save(),t.translate(n,i),t.rotate(u),t.drawImage(c,-c.width/2,-c.height/2,c.width,c.height),void t.restore();if(!(isNaN(h)||h<=0)){switch(t.beginPath(),c){default:t.arc(n,i,h,0,Et),t.closePath();break;case"triangle":t.moveTo(n+Math.sin(u)*h,i-Math.cos(u)*h),u+=Rt,t.lineTo(n+Math.sin(u)*h,i-Math.cos(u)*h),u+=Rt,t.lineTo(n+Math.sin(u)*h,i-Math.cos(u)*h),t.closePath();break;case"rectRounded":l=.516*h,r=h-l,a=Math.cos(u+Ft)*r,s=Math.sin(u+Ft)*r,t.arc(n-a,i-s,l,u-Dt,u-It),t.arc(n+s,i-a,l,u-It,u),t.arc(n+a,i+s,l,u,u+It),t.arc(n-s,i+a,l,u+It,u+Dt),t.closePath();break;case"rect":if(!d){r=Math.SQRT1_2*h,t.rect(n-r,i-r,2*r,2*r);break}u+=Ft;case"rectRot":a=Math.cos(u)*h,s=Math.sin(u)*h,t.moveTo(n-a,i-s),t.lineTo(n+s,i-a),t.lineTo(n+a,i+s),t.lineTo(n-s,i+a),t.closePath();break;case"crossRot":u+=Ft;case"cross":a=Math.cos(u)*h,s=Math.sin(u)*h,t.moveTo(n-a,i-s),t.lineTo(n+a,i+s),t.moveTo(n+s,i-a),t.lineTo(n-s,i+a);break;case"star":a=Math.cos(u)*h,s=Math.sin(u)*h,t.moveTo(n-a,i-s),t.lineTo(n+a,i+s),t.moveTo(n+s,i-a),t.lineTo(n-s,i+a),u+=Ft,a=Math.cos(u)*h,s=Math.sin(u)*h,t.moveTo(n-a,i-s),t.lineTo(n+a,i+s),t.moveTo(n+s,i-a),t.lineTo(n-s,i+a);break;case"line":a=Math.cos(u)*h,s=Math.sin(u)*h,t.moveTo(n-a,i-s),t.lineTo(n+a,i+s);break;case"dash":t.moveTo(n,i),t.lineTo(n+Math.cos(u)*h,i+Math.sin(u)*h)}t.fill(),e.borderWidth>0&&t.stroke()}}function Ye(t,e,n){return n=n||.5,t&&t.x>e.left-n&&t.x<e.right+n&&t.y>e.top-n&&t.y<e.bottom+n}function Ke(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()}function qe(t){t.restore()}function Xe(t,e,n,i,o){if(!e)return t.lineTo(n.x,n.y);if("middle"===o){const i=(e.x+n.x)/2;t.lineTo(i,e.y),t.lineTo(i,n.y)}else"after"===o!=!!i?t.lineTo(e.x,n.y):t.lineTo(n.x,e.y);t.lineTo(n.x,n.y)}function Ge(t,e,n,i){if(!e)return t.lineTo(n.x,n.y);t.bezierCurveTo(i?e.cp1x:e.cp2x,i?e.cp1y:e.cp2y,i?n.cp2x:n.cp1x,i?n.cp2y:n.cp1y,n.x,n.y)}function Ze(t,e,n,i,o,a={}){const s=ct(e)?e:[e],r=a.strokeWidth>0&&""!==a.strokeColor;let l,c;for(t.save(),a.translation&&t.translate(a.translation[0],a.translation[1]),lt(a.rotation)||t.rotate(a.rotation),t.font=o.string,a.color&&(t.fillStyle=a.color),a.textAlign&&(t.textAlign=a.textAlign),a.textBaseline&&(t.textBaseline=a.textBaseline),l=0;l<s.length;++l){if(c=s[l],r&&(a.strokeColor&&(t.strokeStyle=a.strokeColor),lt(a.strokeWidth)||(t.lineWidth=a.strokeWidth),t.strokeText(c,n,i,a.maxWidth)),t.fillText(c,n,i,a.maxWidth),a.strikethrough||a.underline){const e=t.measureText(c),o=n-e.actualBoundingBoxLeft,s=n+e.actualBoundingBoxRight,r=i-e.actualBoundingBoxAscent,l=i+e.actualBoundingBoxDescent,d=a.strikethrough?(r+l)/2:l;t.strokeStyle=t.fillStyle,t.beginPath(),t.lineWidth=a.decorationWidth||2,t.moveTo(o,d),t.lineTo(s,d),t.stroke()}i+=o.lineHeight}t.restore()}function Je(t,e){const{x:n,y:i,w:o,h:a,radius:s}=e;t.arc(n+s.topLeft,i+s.topLeft,s.topLeft,-It,Dt,!0),t.lineTo(n,i+a-s.bottomLeft),t.arc(n+s.bottomLeft,i+a-s.bottomLeft,s.bottomLeft,Dt,It,!0),t.lineTo(n+o-s.bottomRight,i+a),t.arc(n+o-s.bottomRight,i+a-s.bottomRight,s.bottomRight,It,0,!0),t.lineTo(n+o,i+s.topRight),t.arc(n+o-s.topRight,i+s.topRight,s.topRight,0,-It,!0),t.lineTo(n+s.topLeft,i)}const Qe=new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),tn=new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);function en(t,e){const n=(""+t).match(Qe);if(!n||"normal"===n[1])return 1.2*e;switch(t=+n[2],n[3]){case"px":return t;case"%":t/=100}return e*t}function nn(t,e){const n={},i=dt(e),o=i?Object.keys(e):e,a=dt(t)?i?n=>gt(t[n],t[e[n]]):e=>t[e]:()=>t;for(const t of o)n[t]=+a(t)||0;return n}function on(t){return nn(t,{top:"y",right:"x",bottom:"y",left:"x"})}function an(t){return nn(t,["topLeft","topRight","bottomLeft","bottomRight"])}function sn(t){const e=on(t);return e.width=e.left+e.right,e.height=e.top+e.bottom,e}function rn(t,e){t=t||{},e=e||Ne.font;let n=gt(t.size,e.size);"string"==typeof n&&(n=parseInt(n,10));let i=gt(t.style,e.style);i&&!(""+i).match(tn)&&(console.warn('Invalid font style specified: "'+i+'"'),i="");const o={family:gt(t.family,e.family),lineHeight:en(gt(t.lineHeight,e.lineHeight),n),size:n,style:i,weight:gt(t.weight,e.weight),string:""};return o.string=function(t){return!t||lt(t.size)||lt(t.family)?null:(t.style?t.style+" ":"")+(t.weight?t.weight+" ":"")+t.size+"px "+t.family}(o),o}function ln(t,e,n,i){let o,a,s,r=!0;for(o=0,a=t.length;o<a;++o)if(s=t[o],void 0!==s&&(void 0!==e&&"function"==typeof s&&(s=s(e),r=!1),void 0!==n&&ct(s)&&(s=s[n%s.length],r=!1),void 0!==s))return i&&!r&&(i.cacheable=!1),s}function cn(t,e,n){n=n||(n=>t[n]<e);let i,o=t.length-1,a=0;for(;o-a>1;)i=a+o>>1,n(i)?a=i:o=i;return{lo:a,hi:o}}const dn=(t,e,n)=>cn(t,n,(i=>t[i][e]<n)),hn=(t,e,n)=>cn(t,n,(i=>t[i][e]>=n));const un=["push","pop","shift","splice","unshift"];function gn(t,e){const n=t._chartjs;if(!n)return;const i=n.listeners,o=i.indexOf(e);-1!==o&&i.splice(o,1),i.length>0||(un.forEach((e=>{delete t[e]})),delete t._chartjs)}function pn(t){const e=new Set;let n,i;for(n=0,i=t.length;n<i;++n)e.add(t[n]);if(e.size===i)return t;const o=[];return e.forEach((t=>{o.push(t)})),o}function fn(t,e=[""],n=t,i,o=()=>t[0]){Pt(i)||(i=Sn("_fallback",t));const a={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:t,_rootScopes:n,_fallback:i,_getTarget:o,override:o=>fn([o,...t],e,n,i)};return new Proxy(a,{deleteProperty:(e,n)=>(delete e[n],delete e._keys,delete t[0][n],!0),get:(n,i)=>_n(n,i,(()=>function(t,e,n,i){let o;for(const a of e)if(o=Sn(bn(a,t),n),Pt(o))return yn(t,o)?Cn(n,i,t,o):o}(i,e,t,n))),getOwnPropertyDescriptor:(t,e)=>Reflect.getOwnPropertyDescriptor(t._scopes[0],e),getPrototypeOf:()=>Reflect.getPrototypeOf(t[0]),has:(t,e)=>Pn(t).includes(e),ownKeys:t=>Pn(t),set:(t,e,n)=>((t._storage||(t._storage=o()))[e]=n,delete t[e],delete t._keys,!0)})}function mn(t,e,n,i){const o={_cacheable:!1,_proxy:t,_context:e,_subProxy:n,_stack:new Set,_descriptors:xn(t,i),setContext:e=>mn(t,e,n,i),override:o=>mn(t.override(o),e,n,i)};return new Proxy(o,{deleteProperty:(e,n)=>(delete e[n],delete t[n],!0),get:(t,e,n)=>_n(t,e,(()=>function(t,e,n){const{_proxy:i,_context:o,_subProxy:a,_descriptors:s}=t;let r=i[e];Ot(r)&&s.isScriptable(e)&&(r=function(t,e,n,i){const{_proxy:o,_context:a,_subProxy:s,_stack:r}=n;if(r.has(t))throw new Error("Recursion detected: "+[...r].join("->")+"->"+t);r.add(t),e=e(a,s||i),r.delete(t),dt(e)&&(e=Cn(o._scopes,o,t,e));return e}(e,r,t,n));ct(r)&&r.length&&(r=function(t,e,n,i){const{_proxy:o,_context:a,_subProxy:s,_descriptors:r}=n;if(Pt(a.index)&&i(t))e=e[a.index%e.length];else if(dt(e[0])){const n=e,i=o._scopes.filter((t=>t!==n));e=[];for(const l of n){const n=Cn(i,o,t,l);e.push(mn(n,a,s&&s[t],r))}}return e}(e,r,t,s.isIndexable));yn(e,r)&&(r=mn(r,o,a&&a[e],s));return r}(t,e,n))),getOwnPropertyDescriptor:(e,n)=>e._descriptors.allKeys?Reflect.has(t,n)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(t,n),getPrototypeOf:()=>Reflect.getPrototypeOf(t),has:(e,n)=>Reflect.has(t,n),ownKeys:()=>Reflect.ownKeys(t),set:(e,n,i)=>(t[n]=i,delete e[n],!0)})}function xn(t,e={scriptable:!0,indexable:!0}){const{_scriptable:n=e.scriptable,_indexable:i=e.indexable,_allKeys:o=e.allKeys}=t;return{allKeys:o,scriptable:n,indexable:i,isScriptable:Ot(n)?n:()=>n,isIndexable:Ot(i)?i:()=>i}}const bn=(t,e)=>t?t+St(e):e,yn=(t,e)=>dt(e)&&"adapters"!==t;function _n(t,e,n){let i=t[e];return Pt(i)||(i=n(),Pt(i)&&(t[e]=i)),i}function vn(t,e,n){return Ot(t)?t(e,n):t}const Mn=(t,e)=>!0===t?e:"string"==typeof t?kt(e,t):void 0;function wn(t,e,n,i){for(const o of e){const e=Mn(n,o);if(e){t.add(e);const o=vn(e._fallback,n,e);if(Pt(o)&&o!==n&&o!==i)return o}else if(!1===e&&Pt(i)&&n!==i)return null}return!1}function Cn(t,e,n,i){const o=e._rootScopes,a=vn(e._fallback,n,i),s=[...t,...o],r=new Set;r.add(i);let l=kn(r,s,n,a||n);return null!==l&&((!Pt(a)||a===n||(l=kn(r,s,a,l),null!==l))&&fn([...r],[""],o,a,(()=>function(t,e,n){const i=t._getTarget();e in i||(i[e]={});const o=i[e];if(ct(o)&&dt(n))return n;return o}(e,n,i))))}function kn(t,e,n,i){for(;n;)n=wn(t,e,n,i);return n}function Sn(t,e){for(const n of e){if(!n)continue;const e=n[t];if(Pt(e))return e}}function Pn(t){let e=t._keys;return e||(e=t._keys=function(t){const e=new Set;for(const n of t)for(const t of Object.keys(n).filter((t=>!t.startsWith("_"))))e.add(t);return[...e]}(t._scopes)),e}const On=Number.EPSILON||1e-14,Dn=(t,e)=>e<t.length&&!t[e].skip&&t[e],En=t=>"x"===t?"y":"x";function Tn(t,e,n,i){const o=t.skip?e:t,a=e,s=n.skip?e:n,r=Yt(a,o),l=Yt(s,a);let c=r/(r+l),d=l/(r+l);c=isNaN(c)?0:c,d=isNaN(d)?0:d;const h=i*c,u=i*d;return{previous:{x:a.x-h*(s.x-o.x),y:a.y-h*(s.y-o.y)},next:{x:a.x+u*(s.x-o.x),y:a.y+u*(s.y-o.y)}}}function An(t,e="x"){const n=En(e),i=t.length,o=Array(i).fill(0),a=Array(i);let s,r,l,c=Dn(t,0);for(s=0;s<i;++s)if(r=l,l=c,c=Dn(t,s+1),l){if(c){const t=c[e]-l[e];o[s]=0!==t?(c[n]-l[n])/t:0}a[s]=r?c?Vt(o[s-1])!==Vt(o[s])?0:(o[s-1]+o[s])/2:o[s-1]:o[s]}!function(t,e,n){const i=t.length;let o,a,s,r,l,c=Dn(t,0);for(let d=0;d<i-1;++d)l=c,c=Dn(t,d+1),l&&c&&(Wt(e[d],0,On)?n[d]=n[d+1]=0:(o=n[d]/e[d],a=n[d+1]/e[d],r=Math.pow(o,2)+Math.pow(a,2),r<=9||(s=3/Math.sqrt(r),n[d]=o*s*e[d],n[d+1]=a*s*e[d])))}(t,o,a),function(t,e,n="x"){const i=En(n),o=t.length;let a,s,r,l=Dn(t,0);for(let c=0;c<o;++c){if(s=r,r=l,l=Dn(t,c+1),!r)continue;const o=r[n],d=r[i];s&&(a=(o-s[n])/3,r[`cp1${n}`]=o-a,r[`cp1${i}`]=d-a*e[c]),l&&(a=(l[n]-o)/3,r[`cp2${n}`]=o+a,r[`cp2${i}`]=d+a*e[c])}}(t,a,e)}function Ln(t,e,n){return Math.max(Math.min(t,n),e)}function In(t,e,n,i,o){let a,s,r,l;if(e.spanGaps&&(t=t.filter((t=>!t.skip))),"monotone"===e.cubicInterpolationMode)An(t,o);else{let n=i?t[t.length-1]:t[0];for(a=0,s=t.length;a<s;++a)r=t[a],l=Tn(n,r,t[Math.min(a+1,s-(i?0:1))%s],e.tension),r.cp1x=l.previous.x,r.cp1y=l.previous.y,r.cp2x=l.next.x,r.cp2y=l.next.y,n=r}e.capBezierPoints&&function(t,e){let n,i,o,a,s,r=Ye(t[0],e);for(n=0,i=t.length;n<i;++n)s=a,a=r,r=n<i-1&&Ye(t[n+1],e),a&&(o=t[n],s&&(o.cp1x=Ln(o.cp1x,e.left,e.right),o.cp1y=Ln(o.cp1y,e.top,e.bottom)),r&&(o.cp2x=Ln(o.cp2x,e.left,e.right),o.cp2y=Ln(o.cp2y,e.top,e.bottom)))}(t,n)}function Fn(t){let e=t.parentNode;return e&&"[object ShadowRoot]"===e.toString()&&(e=e.host),e}function Rn(t,e,n){let i;return"string"==typeof t?(i=parseInt(t,10),-1!==t.indexOf("%")&&(i=i/100*e.parentNode[n])):i=t,i}const zn=t=>window.getComputedStyle(t,null);const Vn=["top","right","bottom","left"];function Bn(t,e,n){const i={};n=n?"-"+n:"";for(let o=0;o<4;o++){const a=Vn[o];i[a]=parseFloat(t[e+"-"+a+n])||0}return i.width=i.left+i.right,i.height=i.top+i.bottom,i}function Nn(t,e){const{canvas:n,currentDevicePixelRatio:i}=e,o=zn(n),a="border-box"===o.boxSizing,s=Bn(o,"padding"),r=Bn(o,"border","width"),{x:l,y:c,box:d}=function(t,e){const n=t.native||t,i=n.touches,o=i&&i.length?i[0]:n,{offsetX:a,offsetY:s}=o;let r,l,c=!1;if(((t,e,n)=>(t>0||e>0)&&(!n||!n.shadowRoot))(a,s,n.target))r=a,l=s;else{const t=e.getBoundingClientRect();r=o.clientX-t.left,l=o.clientY-t.top,c=!0}return{x:r,y:l,box:c}}(t,n),h=s.left+(d&&r.left),u=s.top+(d&&r.top);let{width:g,height:p}=e;return a&&(g-=s.width+r.width,p-=s.height+r.height),{x:Math.round((l-h)/g*n.width/i),y:Math.round((c-u)/p*n.height/i)}}const Wn=t=>Math.round(10*t)/10;function jn(t,e,n,i){const o=zn(t),a=Bn(o,"margin"),s=Rn(o.maxWidth,t,"clientWidth")||At,r=Rn(o.maxHeight,t,"clientHeight")||At,l=function(t,e,n){let i,o;if(void 0===e||void 0===n){const a=Fn(t);if(a){const t=a.getBoundingClientRect(),s=zn(a),r=Bn(s,"border","width"),l=Bn(s,"padding");e=t.width-l.width-r.width,n=t.height-l.height-r.height,i=Rn(s.maxWidth,a,"clientWidth"),o=Rn(s.maxHeight,a,"clientHeight")}else e=t.clientWidth,n=t.clientHeight}return{width:e,height:n,maxWidth:i||At,maxHeight:o||At}}(t,e,n);let{width:c,height:d}=l;if("content-box"===o.boxSizing){const t=Bn(o,"border","width"),e=Bn(o,"padding");c-=e.width+t.width,d-=e.height+t.height}return c=Math.max(0,c-a.width),d=Math.max(0,i?Math.floor(c/i):d-a.height),c=Wn(Math.min(c,s,l.maxWidth)),d=Wn(Math.min(d,r,l.maxHeight)),c&&!d&&(d=Wn(c/2)),{width:c,height:d}}function Hn(t,e,n){const i=e||1,o=Math.floor(t.height*i),a=Math.floor(t.width*i);t.height=o/i,t.width=a/i;const s=t.canvas;return s.style&&(n||!s.style.height&&!s.style.width)&&(s.style.height=`${t.height}px`,s.style.width=`${t.width}px`),(t.currentDevicePixelRatio!==i||s.height!==o||s.width!==a)&&(t.currentDevicePixelRatio=i,s.height=o,s.width=a,t.ctx.setTransform(i,0,0,i,0,0),!0)}const $n=function(){let t=!1;try{const e={get passive(){return t=!0,!1}};window.addEventListener("test",null,e),window.removeEventListener("test",null,e)}catch(t){}return t}();function Un(t,e){const n=function(t,e){return zn(t).getPropertyValue(e)}(t,e),i=n&&n.match(/^(\d+)(\.\d+)?px$/);return i?+i[1]:void 0}function Yn(t,e,n,i){return{x:t.x+n*(e.x-t.x),y:t.y+n*(e.y-t.y)}}function Kn(t,e,n,i){return{x:t.x+n*(e.x-t.x),y:"middle"===i?n<.5?t.y:e.y:"after"===i?n<1?t.y:e.y:n>0?e.y:t.y}}function qn(t,e,n,i){const o={x:t.cp2x,y:t.cp2y},a={x:e.cp1x,y:e.cp1y},s=Yn(t,o,n),r=Yn(o,a,n),l=Yn(a,e,n),c=Yn(s,r,n),d=Yn(r,l,n);return Yn(c,d,n)}const Xn=new Map;function Gn(t,e,n){return function(t,e){e=e||{};const n=t+JSON.stringify(e);let i=Xn.get(n);return i||(i=new Intl.NumberFormat(t,e),Xn.set(n,i)),i}(e,n).format(t)}function Zn(t,e,n){return t?function(t,e){return{x:n=>t+t+e-n,setWidth(t){e=t},textAlign:t=>"center"===t?t:"right"===t?"left":"right",xPlus:(t,e)=>t-e,leftForLtr:(t,e)=>t-e}}(e,n):{x:t=>t,setWidth(t){},textAlign:t=>t,xPlus:(t,e)=>t+e,leftForLtr:(t,e)=>t}}function Jn(t,e){let n,i;"ltr"!==e&&"rtl"!==e||(n=t.canvas.style,i=[n.getPropertyValue("direction"),n.getPropertyPriority("direction")],n.setProperty("direction",e,"important"),t.prevTextDirection=i)}function Qn(t,e){void 0!==e&&(delete t.prevTextDirection,t.canvas.style.setProperty("direction",e[0],e[1]))}function ti(t){return"angle"===t?{between:Xt,compare:Kt,normalize:qt}:{between:(t,e,n)=>t>=Math.min(e,n)&&t<=Math.max(n,e),compare:(t,e)=>t-e,normalize:t=>t}}function ei({start:t,end:e,count:n,loop:i,style:o}){return{start:t%n,end:e%n,loop:i&&(e-t+1)%n==0,style:o}}function ni(t,e,n){if(!n)return[t];const{property:i,start:o,end:a}=n,s=e.length,{compare:r,between:l,normalize:c}=ti(i),{start:d,end:h,loop:u,style:g}=function(t,e,n){const{property:i,start:o,end:a}=n,{between:s,normalize:r}=ti(i),l=e.length;let c,d,{start:h,end:u,loop:g}=t;if(g){for(h+=l,u+=l,c=0,d=l;c<d&&s(r(e[h%l][i]),o,a);++c)h--,u--;h%=l,u%=l}return u<h&&(u+=l),{start:h,end:u,loop:g,style:t.style}}(t,e,n),p=[];let f,m,x,b=!1,y=null;const _=()=>b||l(o,x,f)&&0!==r(o,x),v=()=>!b||0===r(a,f)||l(a,x,f);for(let t=d,n=d;t<=h;++t)m=e[t%s],m.skip||(f=c(m[i]),f!==x&&(b=l(f,o,a),null===y&&_()&&(y=0===r(f,o)?t:n),null!==y&&v()&&(p.push(ei({start:y,end:t,loop:u,count:s,style:g})),y=null),n=t,x=f));return null!==y&&p.push(ei({start:y,end:h,loop:u,count:s,style:g})),p}function ii(t,e){const n=[],i=t.segments;for(let o=0;o<i.length;o++){const a=ni(i[o],t.points,e);a.length&&n.push(...a)}return n}function oi(t,e,n){return n&&n.setContext&&e?function(t,e,n){const i=e.length,o=[];let a=t[0].start,s=a;for(const r of t){let t,l,c=e[a%i];for(s=a+1;s<=r.end;s++){const d=e[s%i];l=ai(n.setContext({type:"segment",p0:c,p1:d})),si(l,t)&&(o.push({start:a,end:s-1,loop:r.loop,style:t}),t=l,a=s-1),c=d,t=l}a<s-1&&(o.push({start:a,end:s-1,loop:r.loop,style:l}),a=s-1)}return o}(t,e,n):t}function ai(t){return{backgroundColor:t.backgroundColor,borderCapStyle:t.borderCapStyle,borderDash:t.borderDash,borderDashOffset:t.borderDashOffset,borderJoinStyle:t.borderJoinStyle,borderWidth:t.borderWidth,borderColor:t.borderColor}}function si(t,e){return e&&JSON.stringify(t)!==JSON.stringify(e)}
/*!
 * Chart.js v3.3.2
 * https://www.chartjs.org
 * (c) 2021 Chart.js Contributors
 * Released under the MIT License
 */var ri=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,n,i){const o=e.listeners[i],a=e.duration;o.forEach((i=>i({chart:t,initial:e.initial,numSteps:a,currentStep:Math.min(n-e.start,a)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=nt.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let n=0;e._charts.forEach(((i,o)=>{if(!i.running||!i.items.length)return;const a=i.items;let s,r=a.length-1,l=!1;for(;r>=0;--r)s=a[r],s._active?(s._total>i.duration&&(i.duration=s._total),s.tick(t),l=!0):(a[r]=a[a.length-1],a.pop());l&&(o.draw(),e._notify(o,i,t,"progress")),a.length||(i.running=!1,e._notify(o,i,t,"complete"),i.initial=!1),n+=a.length})),e._lastDate=t,0===n&&(e._running=!1)}_getAnims(t){const e=this._charts;let n=e.get(t);return n||(n={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,n)),n}listen(t,e,n){this._getAnims(t).listeners[e].push(n)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const n=e.items;let i=n.length-1;for(;i>=0;--i)n[i].cancel();e.items=[],this._notify(t,e,Date.now(),"complete")}remove(t){return this._charts.delete(t)}};const li="transparent",ci={boolean:(t,e,n)=>n>.5?e:t,color(t,e,n){const i=Ie(t||li),o=i.valid&&Ie(e||li);return o&&o.valid?o.mix(i,n).hexString():e},number:(t,e,n)=>t+(e-t)*n};class di{constructor(t,e,n,i){const o=e[n];i=ln([t.to,i,o,t.from]);const a=ln([t.from,o,i]);this._active=!0,this._fn=t.fn||ci[t.type||typeof a],this._easing=te[t.easing]||te.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=n,this._from=a,this._to=i,this._promises=void 0}active(){return this._active}update(t,e,n){const i=this;if(i._active){i._notify(!1);const o=i._target[i._prop],a=n-i._start,s=i._duration-a;i._start=n,i._duration=Math.floor(Math.max(s,t.duration)),i._total+=a,i._loop=!!t.loop,i._to=ln([t.to,e,o,t.from]),i._from=ln([t.from,o,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,n=t-e._start,i=e._duration,o=e._prop,a=e._from,s=e._loop,r=e._to;let l;if(e._active=a!==r&&(s||n<i),!e._active)return e._target[o]=r,void e._notify(!0);n<0?e._target[o]=a:(l=n/i%2,l=s&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(a,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,n)=>{t.push({res:e,rej:n})}))}_notify(t){const e=t?"res":"rej",n=this._promises||[];for(let t=0;t<n.length;t++)n[t][e]()}}Ne.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const hi=Object.keys(Ne.animation);Ne.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:t=>"onProgress"!==t&&"onComplete"!==t&&"fn"!==t}),Ne.set("animations",{colors:{type:"color",properties:["color","borderColor","backgroundColor"]},numbers:{type:"number",properties:["x","y","borderWidth","radius","tension"]}}),Ne.describe("animations",{_fallback:"animation"}),Ne.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:t=>0|t}}}});class ui{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!dt(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((n=>{const i=t[n];if(!dt(i))return;const o={};for(const t of hi)o[t]=i[t];(ct(i.properties)&&i.properties||[n]).forEach((t=>{t!==n&&e.has(t)||e.set(t,o)}))}))}_animateOptions(t,e){const n=e.options,i=function(t,e){if(!e)return;let n=t.options;if(!n)return void(t.options=e);n.$shared&&(t.options=n=Object.assign({},n,{$shared:!1,$animations:{}}));return n}(t,n);if(!i)return[];const o=this._createAnimations(i,n);return n.$shared&&function(t,e){const n=[],i=Object.keys(e);for(let e=0;e<i.length;e++){const o=t[i[e]];o&&o.active()&&n.push(o.wait())}return Promise.all(n)}(t.options.$animations,n).then((()=>{t.options=n}),(()=>{})),o}_createAnimations(t,e){const n=this._properties,i=[],o=t.$animations||(t.$animations={}),a=Object.keys(e),s=Date.now();let r;for(r=a.length-1;r>=0;--r){const l=a[r];if("$"===l.charAt(0))continue;if("options"===l){i.push(...this._animateOptions(t,e));continue}const c=e[l];let d=o[l];const h=n.get(l);if(d){if(h&&d.active()){d.update(h,c,s);continue}d.cancel()}h&&h.duration?(o[l]=d=new di(h,t,l,c),i.push(d)):t[l]=c}return i}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const n=this._createAnimations(t,e);return n.length?(ri.add(this._chart,n),!0):void 0}}function gi(t,e){const n=t&&t.options||{},i=n.reverse,o=void 0===n.min?e:0,a=void 0===n.max?e:0;return{start:i?a:o,end:i?o:a}}function pi(t,e){const n=[],i=t._getSortedDatasetMetas(e);let o,a;for(o=0,a=i.length;o<a;++o)n.push(i[o].index);return n}function fi(t,e,n,i){const o=t.keys,a="single"===i.mode;let s,r,l,c;if(null!==e){for(s=0,r=o.length;s<r;++s){if(l=+o[s],l===n){if(i.all)continue;break}c=t.values[l],ht(c)&&(a||0===e||Vt(e)===Vt(c))&&(e+=c)}return e}}function mi(t,e){const n=t&&t.options.stacked;return n||void 0===n&&void 0!==e.stack}function xi(t,e,n){const i=t[e]||(t[e]={});return i[n]||(i[n]={})}function bi(t,e,n){for(const i of e.getMatchingVisibleMetas("bar").reverse()){const e=t[i.index];if(n&&e>0||!n&&e<0)return i.index}return null}function yi(t,e){const{chart:n,_cachedMeta:i}=t,o=n._stacks||(n._stacks={}),{iScale:a,vScale:s,index:r}=i,l=a.axis,c=s.axis,d=function(t,e,n){return`${t.id}.${e.id}.${n.stack||n.type}`}(a,s,i),h=e.length;let u;for(let t=0;t<h;++t){const n=e[t],{[l]:i,[c]:a}=n;u=(n._stacks||(n._stacks={}))[c]=xi(o,d,i),u[r]=a,u._top=bi(u,s,!0),u._bottom=bi(u,s,!1)}}function _i(t,e){const n=t.scales;return Object.keys(n).filter((t=>n[t].axis===e)).shift()}function vi(t,e){const n=t.vScale&&t.vScale.axis;if(n){e=e||t._parsed;for(const i of e){const e=i._stacks;if(!e||void 0===e[n]||void 0===e[n][t.index])return;delete e[n][t.index]}}}const Mi=t=>"reset"===t||"none"===t,wi=(t,e)=>e?t:Object.assign({},t);class Ci{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this._syncList=[],this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=mi(e.vScale,e),t.addElements()}updateIndex(t){this.index!==t&&vi(this._cachedMeta),this.index=t}linkScales(){const t=this,e=t.chart,n=t._cachedMeta,i=t.getDataset(),o=(t,e,n,i)=>"x"===t?e:"r"===t?i:n,a=n.xAxisID=gt(i.xAxisID,_i(e,"x")),s=n.yAxisID=gt(i.yAxisID,_i(e,"y")),r=n.rAxisID=gt(i.rAxisID,_i(e,"r")),l=n.indexAxis,c=n.iAxisID=o(l,a,s,r),d=n.vAxisID=o(l,s,a,r);n.xScale=t.getScaleForId(a),n.yScale=t.getScaleForId(s),n.rScale=t.getScaleForId(r),n.iScale=t.getScaleForId(c),n.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update("reset")}_destroy(){const t=this._cachedMeta;this._data&&gn(this._data,this),t._stacked&&vi(t)}_dataCheck(){const t=this,e=t.getDataset(),n=e.data||(e.data=[]),i=t._data;if(dt(n))t._data=function(t){const e=Object.keys(t),n=new Array(e.length);let i,o,a;for(i=0,o=e.length;i<o;++i)a=e[i],n[i]={x:a,y:t[a]};return n}(n);else if(i!==n){if(i){gn(i,t);const e=t._cachedMeta;vi(e),e._parsed=[]}n&&Object.isExtensible(n)&&(a=t,(o=n)._chartjs?o._chartjs.listeners.push(a):(Object.defineProperty(o,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[a]}}),un.forEach((t=>{const e="_onData"+St(t),n=o[t];Object.defineProperty(o,t,{configurable:!0,enumerable:!1,value(...t){const i=n.apply(this,t);return o._chartjs.listeners.forEach((n=>{"function"==typeof n[e]&&n[e](...t)})),i}})})))),t._syncList=[],t._data=n}var o,a}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,n=e._cachedMeta,i=e.getDataset();let o=!1;e._dataCheck();const a=n._stacked;n._stacked=mi(n.vScale,n),n.stack!==i.stack&&(o=!0,vi(n),n.stack=i.stack),e._resyncElements(t),(o||a!==n._stacked)&&yi(e,n._parsed)}configure(){const t=this,e=t.chart.config,n=e.datasetScopeKeys(t._type),i=e.getOptionScopes(t.getDataset(),n,!0);t.options=e.createResolver(i,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const n=this,{_cachedMeta:i,_data:o}=n,{iScale:a,_stacked:s}=i,r=a.axis;let l,c,d,h=0===t&&e===o.length||i._sorted,u=t>0&&i._parsed[t-1];if(!1===n._parsing)i._parsed=o,i._sorted=!0,d=o;else{d=ct(o[t])?n.parseArrayData(i,o,t,e):dt(o[t])?n.parseObjectData(i,o,t,e):n.parsePrimitiveData(i,o,t,e);const a=()=>null===c[r]||u&&c[r]<u[r];for(l=0;l<e;++l)i._parsed[l+t]=c=d[l],h&&(a()&&(h=!1),u=c);i._sorted=h}s&&yi(n,d)}parsePrimitiveData(t,e,n,i){const{iScale:o,vScale:a}=t,s=o.axis,r=a.axis,l=o.getLabels(),c=o===a,d=new Array(i);let h,u,g;for(h=0,u=i;h<u;++h)g=h+n,d[h]={[s]:c||o.parse(l[g],g),[r]:a.parse(e[g],g)};return d}parseArrayData(t,e,n,i){const{xScale:o,yScale:a}=t,s=new Array(i);let r,l,c,d;for(r=0,l=i;r<l;++r)c=r+n,d=e[c],s[r]={x:o.parse(d[0],c),y:a.parse(d[1],c)};return s}parseObjectData(t,e,n,i){const{xScale:o,yScale:a}=t,{xAxisKey:s="x",yAxisKey:r="y"}=this._parsing,l=new Array(i);let c,d,h,u;for(c=0,d=i;c<d;++c)h=c+n,u=e[h],l[c]={x:o.parse(kt(u,s),h),y:a.parse(kt(u,r),h)};return l}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,n){const i=this.chart,o=this._cachedMeta,a=e[t.axis];return fi({keys:pi(i,!0),values:e._stacks[t.axis]},a,o.index,{mode:n})}updateRangeFromParsed(t,e,n,i){const o=n[e.axis];let a=null===o?NaN:o;const s=i&&n._stacks[e.axis];i&&s&&(i.values=s,t.min=Math.min(t.min,a),t.max=Math.max(t.max,a),a=fi(i,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,a),t.max=Math.max(t.max,a)}getMinMax(t,e){const n=this,i=n._cachedMeta,o=i._parsed,a=i._sorted&&t===i.iScale,s=o.length,r=n._getOtherScale(t),l=e&&i._stacked&&{keys:pi(n.chart,!0),values:null},c={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:d,max:h}=function(t){const{min:e,max:n,minDefined:i,maxDefined:o}=t.getUserBounds();return{min:i?e:Number.NEGATIVE_INFINITY,max:o?n:Number.POSITIVE_INFINITY}}(r);let u,g,p,f;function m(){return p=o[u],g=p[t.axis],f=p[r.axis],!ht(g)||d>f||h<f}for(u=0;u<s&&(m()||(n.updateRangeFromParsed(c,t,p,l),!a));++u);if(a)for(u=s-1;u>=0;--u)if(!m()){n.updateRangeFromParsed(c,t,p,l);break}return c}getAllParsedValues(t){const e=this._cachedMeta._parsed,n=[];let i,o,a;for(i=0,o=e.length;i<o;++i)a=e[i][t.axis],ht(a)&&n.push(a);return n}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,n=e.iScale,i=e.vScale,o=this.getParsed(t);return{label:n?""+n.getLabelForValue(o[n.axis]):"",value:i?""+i.getLabelForValue(o[i.axis]):""}}_update(t){const e=this,n=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||"default"),n._clip=function(t){let e,n,i,o;return dt(t)?(e=t.top,n=t.right,i=t.bottom,o=t.left):e=n=i=o=t,{top:e,right:n,bottom:i,left:o}}(gt(e.options.clip,function(t,e,n){if(!1===n)return!1;const i=gi(t,n),o=gi(e,n);return{top:o.end,right:i.end,bottom:o.start,left:i.start}}(n.xScale,n.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,n=t.chart,i=t._cachedMeta,o=i.data||[],a=n.chartArea,s=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(i.dataset&&i.dataset.draw(e,a,r,l),c=r;c<r+l;++c){const t=o[c];t.active?s.push(t):t.draw(e,a)}for(c=0;c<s.length;++c)s[c].draw(e,a)}getStyle(t,e){const n=e?"active":"default";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(n):this.resolveDataElementOptions(t||0,n)}getContext(t,e,n){const i=this,o=i.getDataset();let a;if(t>=0&&t<i._cachedMeta.data.length){const e=i._cachedMeta.data[t];a=e.$context||(e.$context=function(t,e,n){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:n,index:e,mode:"default",type:"data"})}(i.getContext(),t,e)),a.parsed=i.getParsed(t),a.raw=o.data[t],a.index=a.dataIndex=t}else a=i.$context||(i.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:"default",type:"dataset"})}(i.chart.getContext(),i.index)),a.dataset=o,a.index=a.datasetIndex=i.index;return a.active=!!e,a.mode=n,a}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e="default",n){const i=this,o="active"===e,a=i._cachedDataOpts,s=t+"-"+e,r=a[s],l=i.enableOptionSharing&&Pt(n);if(r)return wi(r,l);const c=i.chart.config,d=c.datasetElementScopeKeys(i._type,t),h=o?[`${t}Hover`,"hover",t,""]:[t,""],u=c.getOptionScopes(i.getDataset(),d),g=Object.keys(Ne.elements[t]),p=c.resolveNamedOptions(u,g,(()=>i.getContext(n,o)),h);return p.$shared&&(p.$shared=l,a[s]=Object.freeze(wi(p,l))),p}_resolveAnimations(t,e,n){const i=this,o=i.chart,a=i._cachedDataOpts,s=`animation-${e}`,r=a[s];if(r)return r;let l;if(!1!==o.options.animation){const o=i.chart.config,a=o.datasetAnimationScopeKeys(i._type,e),s=o.getOptionScopes(i.getDataset(),a);l=o.createResolver(s,i.getContext(t,n,e))}const c=new ui(o,l&&l.animations);return l&&l._cacheable&&(a[s]=Object.freeze(c)),c}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||Mi(t)||this.chart._animationsDisabled}updateElement(t,e,n,i){Mi(i)?Object.assign(t,n):this._resolveAnimations(e,i).update(t,n)}updateSharedOptions(t,e,n){t&&!Mi(e)&&this._resolveAnimations(void 0,e).update(t,n)}_setStyle(t,e,n,i){t.active=i;const o=this.getStyle(e,i);this._resolveAnimations(e,n,i).update(t,{options:!i&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,n){this._setStyle(t,n,"active",!1)}setHoverStyle(t,e,n){this._setStyle(t,n,"active",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!0)}_resyncElements(t){const e=this,n=e._data,i=e._cachedMeta.data;for(const[t,n,i]of e._syncList)e[t](n,i);e._syncList=[];const o=i.length,a=n.length,s=Math.min(a,o);s&&e.parse(0,s),a>o?e._insertElements(o,a-o,t):a<o&&e._removeElements(a,o-a)}_insertElements(t,e,n=!0){const i=this,o=i._cachedMeta,a=o.data,s=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=s;r--)t[r]=t[r-e]};for(l(a),r=t;r<s;++r)a[r]=new i.dataElementType;i._parsing&&l(o._parsed),i.parse(t,e),n&&i.updateElements(a,t,e,"reset")}updateElements(t,e,n,i){}_removeElements(t,e){const n=this._cachedMeta;if(this._parsing){const i=n._parsed.splice(t,e);n._stacked&&vi(n,i)}n.data.splice(t,e)}_onDataPush(){const t=arguments.length;this._syncList.push(["_insertElements",this.getDataset().data.length-t,t])}_onDataPop(){this._syncList.push(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._syncList.push(["_removeElements",0,1])}_onDataSplice(t,e){this._syncList.push(["_removeElements",t,e]),this._syncList.push(["_insertElements",t,arguments.length-2])}_onDataUnshift(){this._syncList.push(["_insertElements",0,arguments.length])}}function ki(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas("bar");let n=[];for(let i=0,o=e.length;i<o;i++)n=n.concat(e[i].controller.getAllParsedValues(t));t._cache.$bar=pn(n.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let n,i,o,a,s=t._length;const r=()=>{32767!==o&&-32768!==o&&(Pt(a)&&(s=Math.min(s,Math.abs(o-a)||s)),a=o)};for(n=0,i=e.length;n<i;++n)o=t.getPixelForValue(e[n]),r();for(a=void 0,n=0,i=t.ticks.length;n<i;++n)o=t.getPixelForTick(n),r();return s}function Si(t,e,n,i){return ct(t)?function(t,e,n,i){const o=n.parse(t[0],i),a=n.parse(t[1],i),s=Math.min(o,a),r=Math.max(o,a);let l=s,c=r;Math.abs(s)>Math.abs(r)&&(l=r,c=s),e[n.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:a,min:s,max:r}}(t,e,n,i):e[n.axis]=n.parse(t,i),e}function Pi(t,e,n,i){const o=t.iScale,a=t.vScale,s=o.getLabels(),r=o===a,l=[];let c,d,h,u;for(c=n,d=n+i;c<d;++c)u=e[c],h={},h[o.axis]=r||o.parse(s[c],c),l.push(Si(u,h,a,c));return l}function Oi(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}Ci.defaults={},Ci.prototype.datasetElementType=null,Ci.prototype.dataElementType=null;class Di extends Ci{parsePrimitiveData(t,e,n,i){return Pi(t,e,n,i)}parseArrayData(t,e,n,i){return Pi(t,e,n,i)}parseObjectData(t,e,n,i){const{iScale:o,vScale:a}=t,{xAxisKey:s="x",yAxisKey:r="y"}=this._parsing,l="x"===o.axis?s:r,c="x"===a.axis?s:r,d=[];let h,u,g,p;for(h=n,u=n+i;h<u;++h)p=e[h],g={},g[o.axis]=o.parse(kt(p,l),h),d.push(Si(kt(p,c),g,a,h));return d}updateRangeFromParsed(t,e,n,i){super.updateRangeFromParsed(t,e,n,i);const o=n._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getLabelAndValue(t){const e=this._cachedMeta,{iScale:n,vScale:i}=e,o=this.getParsed(t),a=o._custom,s=Oi(a)?"["+a.start+", "+a.end+"]":""+i.getLabelForValue(o[i.axis]);return{label:""+n.getLabelForValue(o[n.axis]),value:s}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,n,i){const o=this,a="reset"===i,s=o._cachedMeta.vScale,r=s.getBasePixel(),l=s.isHorizontal(),c=o._getRuler(),d=o.resolveDataElementOptions(e,i),h=o.getSharedOptions(d),u=o.includeOptions(i,h);o.updateSharedOptions(h,i,d);for(let d=e;d<e+n;d++){const e=o.getParsed(d),n=a||lt(e[s.axis])?{base:r,head:r}:o._calculateBarValuePixels(d),g=o._calculateBarIndexPixels(d,c),p=(e._stacks||{})[s.axis],f={horizontal:l,base:n.base,enableBorderRadius:!p||Oi(e._custom)||o.index===p._top||o.index===p._bottom,x:l?n.head:g.center,y:l?g.center:n.head,height:l?g.size:void 0,width:l?void 0:g.size};u&&(f.options=h||o.resolveDataElementOptions(d,i)),o.updateElement(t[d],d,f,i)}}_getStacks(t,e){const n=this._cachedMeta.iScale,i=n.getMatchingVisibleMetas(this._type),o=n.options.stacked,a=i.length,s=[];let r,l;for(r=0;r<a;++r){if(l=i[r],void 0!==e){const t=l.controller.getParsed(e)[l.controller._cachedMeta.vScale.axis];if(lt(t)||isNaN(t))continue}if((!1===o||-1===s.indexOf(l.stack)||void 0===o&&void 0===l.stack)&&s.push(l.stack),l.index===t)break}return s.length||s.push(void 0),s}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,n){const i=this._getStacks(t,n),o=void 0!==e?i.indexOf(e):-1;return-1===o?i.length-1:o}_getRuler(){const t=this,e=t.options,n=t._cachedMeta,i=n.iScale,o=[];let a,s;for(a=0,s=n.data.length;a<s;++a)o.push(i.getPixelForValue(t.getParsed(a)[i.axis],a));const r=e.barThickness;return{min:r||ki(i),pixels:o,start:i._startPixel,end:i._endPixel,stackCount:t._getStackCount(),scale:i,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{vScale:n,_stacked:i}=e._cachedMeta,{base:o,minBarLength:a}=e.options,s=e.getParsed(t),r=s._custom,l=Oi(r);let c,d,h=s[n.axis],u=0,g=i?e.applyStack(n,s,i):h;g!==h&&(u=g-h,g=h),l&&(h=r.barStart,g=r.barEnd-r.barStart,0!==h&&Vt(h)!==Vt(r.barEnd)&&(u=0),u+=h);const p=lt(o)||l?u:o;let f=n.getPixelForValue(p);c=this.chart.getDataVisibility(t)?n.getPixelForValue(u+g):f,d=c-f,void 0!==a&&Math.abs(d)<a&&(d=d<0?-a:a,0===h&&(f-=d/2),c=f+d);const m=o||0;if(f===n.getPixelForValue(m)){const t=n.getLineWidthForValue(m)/2;d>0?(f+=t,d-=t):d<0&&(f-=t,d+=t)}return{size:d,base:f,head:c,center:c+d/2}}_calculateBarIndexPixels(t,e){const n=this,i=e.scale,o=n.options,a=o.skipNull,s=gt(o.maxBarThickness,1/0);let r,l;if(e.grouped){const i=a?n._getStackCount(t):e.stackCount,c="flex"===o.barThickness?function(t,e,n,i){const o=e.pixels,a=o[t];let s=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=n.categoryPercentage;null===s&&(s=a-(null===r?e.end-e.start:r-a)),null===r&&(r=a+a-s);const c=a-(a-Math.min(s,r))/2*l;return{chunk:Math.abs(r-s)/2*l/i,ratio:n.barPercentage,start:c}}(t,e,o,i):function(t,e,n,i){const o=n.barThickness;let a,s;return lt(o)?(a=e.min*n.categoryPercentage,s=n.barPercentage):(a=o*i,s=1),{chunk:a/i,ratio:s,start:e.pixels[t]-a/2}}(t,e,o,i),d=n._getStackIndex(n.index,n._cachedMeta.stack,a?t:void 0);r=c.start+c.chunk*d+c.chunk/2,l=Math.min(s,c.chunk*c.ratio)}else r=i.getPixelForValue(n.getParsed(t)[i.axis],t),l=Math.min(s,e.min*e.ratio);return{base:r-l/2,head:r+l/2,center:r,size:l}}draw(){const t=this,e=t.chart,n=t._cachedMeta,i=n.vScale,o=n.data,a=o.length;let s=0;for(Ke(e.ctx,e.chartArea);s<a;++s)null!==t.getParsed(s)[i.axis]&&o[s].draw(t._ctx);qe(e.ctx)}}Di.id="bar",Di.defaults={datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}},Di.overrides={interaction:{mode:"index"},scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}};class Ei extends Ci{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,n,i){const{xScale:o,yScale:a}=t,{xAxisKey:s="x",yAxisKey:r="y"}=this._parsing,l=[];let c,d,h;for(c=n,d=n+i;c<d;++c)h=e[c],l.push({x:o.parse(kt(h,s),c),y:a.parse(kt(h,r),c),_custom:h&&h.r&&+h.r});return l}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let n=0;for(let i=t.length-1;i>=0;--i)n=Math.max(n,t[i].size()/2,e[i]._custom);return n>0&&n}getLabelAndValue(t){const e=this._cachedMeta,{xScale:n,yScale:i}=e,o=this.getParsed(t),a=n.getLabelForValue(o.x),s=i.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:"("+a+", "+s+(r?", "+r:"")+")"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,n,i){const o=this,a="reset"===i,{iScale:s,vScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,i),c=o.getSharedOptions(l),d=o.includeOptions(i,c),h=s.axis,u=r.axis;for(let l=e;l<e+n;l++){const e=t[l],n=!a&&o.getParsed(l),c={},g=c[h]=a?s.getPixelForDecimal(.5):s.getPixelForValue(n[h]),p=c[u]=a?r.getBasePixel():r.getPixelForValue(n[u]);c.skip=isNaN(g)||isNaN(p),d&&(c.options=o.resolveDataElementOptions(l,i),a&&(c.options.radius=0)),o.updateElement(e,l,c,i)}o.updateSharedOptions(c,i,l)}resolveDataElementOptions(t,e){const n=this.getParsed(t);let i=super.resolveDataElementOptions(t,e);i.$shared&&(i=Object.assign({},i,{$shared:!1}));const o=i.radius;return"active"!==e&&(i.radius=0),i.radius+=gt(n&&n._custom,o),i}}Ei.id="bubble",Ei.defaults={datasetElementType:!1,dataElementType:"point",animations:{numbers:{type:"number",properties:["x","y","borderWidth","radius"]}}},Ei.overrides={scales:{x:{type:"linear"},y:{type:"linear"}},plugins:{tooltip:{callbacks:{title:()=>""}}}};class Ti extends Ci{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const n=this.getDataset().data,i=this._cachedMeta;let o,a;for(o=t,a=t+e;o<a;++o)i._parsed[o]=+n[o]}_getRotation(){return Ht(this.options.rotation-90)}_getCircumference(){return Ht(this.options.circumference)}_getRotationExtents(){let t=Et,e=-Et;const n=this;for(let i=0;i<n.chart.data.datasets.length;++i)if(n.chart.isDatasetVisible(i)){const o=n.chart.getDatasetMeta(i).controller,a=o._getRotation(),s=o._getCircumference();t=Math.min(t,a),e=Math.max(e,a+s)}return{rotation:t,circumference:e-t}}update(t){const e=this,n=e.chart,{chartArea:i}=n,o=e._cachedMeta,a=o.data,s=e.getMaxBorderWidth()+e.getMaxOffset(a),r=Math.max((Math.min(i.width,i.height)-s)/2,0),l=Math.min((c=e.options.cutout,d=r,"string"==typeof c&&c.endsWith("%")?parseFloat(c)/100:c/d),1);var c,d;const h=e._getRingWeight(e.index),{circumference:u,rotation:g}=e._getRotationExtents(),{ratioX:p,ratioY:f,offsetX:m,offsetY:x}=function(t,e,n){let i=1,o=1,a=0,s=0;if(e<Et){const r=t,l=r+e,c=Math.cos(r),d=Math.sin(r),h=Math.cos(l),u=Math.sin(l),g=(t,e,i)=>Xt(t,r,l,!0)?1:Math.max(e,e*n,i,i*n),p=(t,e,i)=>Xt(t,r,l,!0)?-1:Math.min(e,e*n,i,i*n),f=g(0,c,h),m=g(It,d,u),x=p(Dt,c,h),b=p(Dt+It,d,u);i=(f-x)/2,o=(m-b)/2,a=-(f+x)/2,s=-(m+b)/2}return{ratioX:i,ratioY:o,offsetX:a,offsetY:s}}(g,u,l),b=(i.width-s)/p,y=(i.height-s)/f,_=Math.max(Math.min(b,y)/2,0),v=pt(e.options.radius,_),M=(v-Math.max(v*l,0))/e._getVisibleDatasetWeightTotal();e.offsetX=m*v,e.offsetY=x*v,o.total=e.calculateTotal(),e.outerRadius=v-M*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-M*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const n=this,i=n.options,o=n._cachedMeta,a=n._getCircumference();return e&&i.animation.animateRotate||!this.chart.getDataVisibility(t)||null===o._parsed[t]?0:n.calculateCircumference(o._parsed[t]*a/Et)}updateElements(t,e,n,i){const o=this,a="reset"===i,s=o.chart,r=s.chartArea,l=s.options.animation,c=(r.left+r.right)/2,d=(r.top+r.bottom)/2,h=a&&l.animateScale,u=h?0:o.innerRadius,g=h?0:o.outerRadius,p=o.resolveDataElementOptions(e,i),f=o.getSharedOptions(p),m=o.includeOptions(i,f);let x,b=o._getRotation();for(x=0;x<e;++x)b+=o._circumference(x,a);for(x=e;x<e+n;++x){const e=o._circumference(x,a),n=t[x],s={x:c+o.offsetX,y:d+o.offsetY,startAngle:b,endAngle:b+e,circumference:e,outerRadius:g,innerRadius:u};m&&(s.options=f||o.resolveDataElementOptions(x,i)),b+=e,o.updateElement(n,x,s,i)}o.updateSharedOptions(f,i,p)}calculateTotal(){const t=this._cachedMeta,e=t.data;let n,i=0;for(n=0;n<e.length;n++){const e=t._parsed[n];null!==e&&!isNaN(e)&&this.chart.getDataVisibility(n)&&(i+=Math.abs(e))}return i}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?Et*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,n=this.chart,i=n.data.labels||[],o=Gn(e._parsed[t],n.options.locale);return{label:i[t]||"",value:o}}getMaxBorderWidth(t){const e=this;let n=0;const i=e.chart;let o,a,s,r,l;if(!t)for(o=0,a=i.data.datasets.length;o<a;++o)if(i.isDatasetVisible(o)){s=i.getDatasetMeta(o),t=s.data,r=s.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,a=t.length;o<a;++o)l=r.resolveDataElementOptions(o),"inner"!==l.borderAlign&&(n=Math.max(n,l.borderWidth||0,l.hoverBorderWidth||0));return n}getMaxOffset(t){let e=0;for(let n=0,i=t.length;n<i;++n){const t=this.resolveDataElementOptions(n);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let n=0;n<t;++n)this.chart.isDatasetVisible(n)&&(e+=this._getRingWeight(n));return e}_getRingWeight(t){return Math.max(gt(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}Ti.id="doughnut",Ti.defaults={datasetElementType:!1,dataElementType:"arc",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:"number",properties:["circumference","endAngle","innerRadius","outerRadius","startAngle","x","y","offset","borderWidth"]}},cutout:"50%",rotation:0,circumference:360,radius:"100%",indexAxis:"r"},Ti.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,n)=>{const i=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:i.backgroundColor,strokeStyle:i.borderColor,lineWidth:i.borderWidth,hidden:!t.getDataVisibility(n),index:n}})):[]}},onClick(t,e,n){n.chart.toggleDataVisibility(e.index),n.chart.update()}},tooltip:{callbacks:{title:()=>"",label(t){let e=t.label;const n=": "+t.formattedValue;return ct(e)?(e=e.slice(),e[0]+=n):e+=n,e}}}}};class Ai extends Ci{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,n=e._cachedMeta,{dataset:i,data:o=[],_dataset:a}=n,s=e.chart._animationsDisabled;let{start:r,count:l}=function(t,e,n){const i=e.length;let o=0,a=i;if(t._sorted){const{iScale:s,_parsed:r}=t,l=s.axis,{min:c,max:d,minDefined:h,maxDefined:u}=s.getUserBounds();h&&(o=Gt(Math.min(dn(r,s.axis,c).lo,n?i:dn(e,l,s.getPixelForValue(c)).lo),0,i-1)),a=u?Gt(Math.max(dn(r,s.axis,d).hi+1,n?0:dn(e,l,s.getPixelForValue(d)).hi+1),o,i)-o:i-o}return{start:o,count:a}}(n,o,s);e._drawStart=r,e._drawCount=l,function(t){const{xScale:e,yScale:n,_scaleRanges:i}=t,o={xmin:e.min,xmax:e.max,ymin:n.min,ymax:n.max};if(!i)return t._scaleRanges=o,!0;const a=i.xmin!==e.min||i.xmax!==e.max||i.ymin!==n.min||i.ymax!==n.max;return Object.assign(i,o),a}(n)&&(r=0,l=o.length),i._decimated=!!a._decimated,i.points=o;const c=e.resolveDatasetElementOptions(t);e.options.showLine||(c.borderWidth=0),c.segment=e.options.segment,e.updateElement(i,void 0,{animated:!s,options:c},t),e.updateElements(o,r,l,t)}updateElements(t,e,n,i){const o=this,a="reset"===i,{iScale:s,vScale:r,_stacked:l}=o._cachedMeta,c=o.resolveDataElementOptions(e,i),d=o.getSharedOptions(c),h=o.includeOptions(i,d),u=s.axis,g=r.axis,p=o.options.spanGaps,f=Nt(p)?p:Number.POSITIVE_INFINITY,m=o.chart._animationsDisabled||a||"none"===i;let x=e>0&&o.getParsed(e-1);for(let c=e;c<e+n;++c){const e=t[c],n=o.getParsed(c),p=m?e:{},b=lt(n[g]),y=p[u]=s.getPixelForValue(n[u],c),_=p[g]=a||b?r.getBasePixel():r.getPixelForValue(l?o.applyStack(r,n,l):n[g],c);p.skip=isNaN(y)||isNaN(_)||b,p.stop=c>0&&n[u]-x[u]>f,p.parsed=n,h&&(p.options=d||o.resolveDataElementOptions(c,i)),m||o.updateElement(e,c,p,i),x=n}o.updateSharedOptions(d,i,c)}getMaxOverflow(){const t=this,e=t._cachedMeta,n=e.dataset,i=n.options&&n.options.borderWidth||0,o=e.data||[];if(!o.length)return i;const a=o[0].size(t.resolveDataElementOptions(0)),s=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(i,a,s)/2}draw(){const t=this._cachedMeta;t.dataset.updateControlPoints(this.chart.chartArea,t.iScale.axis),super.draw()}}Ai.id="line",Ai.defaults={datasetElementType:"line",dataElementType:"point",showLine:!0,spanGaps:!1},Ai.overrides={scales:{_index_:{type:"category"},_value_:{type:"linear"}}};class Li extends Ci{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(t){const e=this._cachedMeta,n=this.chart,i=n.data.labels||[],o=Gn(e._parsed[t].r,n.options.locale);return{label:i[t]||"",value:o}}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,n=e.chartArea,i=e.options,o=Math.min(n.right-n.left,n.bottom-n.top),a=Math.max(o/2,0),s=(a-Math.max(i.cutoutPercentage?a/100*i.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=a-s*t.index,t.innerRadius=t.outerRadius-s}updateElements(t,e,n,i){const o=this,a="reset"===i,s=o.chart,r=o.getDataset(),l=s.options.animation,c=o._cachedMeta.rScale,d=c.xCenter,h=c.yCenter,u=c.getIndexAngle(0)-.5*Dt;let g,p=u;const f=360/o.countVisibleElements();for(g=0;g<e;++g)p+=o._computeAngle(g,i,f);for(g=e;g<e+n;g++){const e=t[g];let n=p,m=p+o._computeAngle(g,i,f),x=s.getDataVisibility(g)?c.getDistanceFromCenterForValue(r.data[g]):0;p=m,a&&(l.animateScale&&(x=0),l.animateRotate&&(n=m=u));const b={x:d,y:h,innerRadius:0,outerRadius:x,startAngle:n,endAngle:m,options:o.resolveDataElementOptions(g,i)};o.updateElement(e,g,b,i)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let n=0;return e.data.forEach(((e,i)=>{!isNaN(t.data[i])&&this.chart.getDataVisibility(i)&&n++})),n}_computeAngle(t,e,n){return this.chart.getDataVisibility(t)?Ht(this.resolveDataElementOptions(t,e).angle||n):0}}Li.id="polarArea",Li.defaults={dataElementType:"arc",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:"number",properties:["x","y","startAngle","endAngle","innerRadius","outerRadius"]}},indexAxis:"r",startAngle:0},Li.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,n)=>{const i=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:i.backgroundColor,strokeStyle:i.borderColor,lineWidth:i.borderWidth,hidden:!t.getDataVisibility(n),index:n}})):[]}},onClick(t,e,n){n.chart.toggleDataVisibility(e.index),n.chart.update()}},tooltip:{callbacks:{title:()=>"",label:t=>t.chart.data.labels[t.dataIndex]+": "+t.formattedValue}}},scales:{r:{type:"radialLinear",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class Ii extends Ti{}Ii.id="pie",Ii.defaults={cutout:0,rotation:0,circumference:360,radius:"100%"};class Fi extends Ci{getLabelAndValue(t){const e=this._cachedMeta.vScale,n=this.getParsed(t);return{label:e.getLabels()[t],value:""+e.getLabelForValue(n[e.axis])}}update(t){const e=this,n=e._cachedMeta,i=n.dataset,o=n.data||[],a=n.iScale.getLabels();if(i.points=o,"resize"!==t){const n=e.resolveDatasetElementOptions(t);e.options.showLine||(n.borderWidth=0);const s={_loop:!0,_fullLoop:a.length===o.length,options:n};e.updateElement(i,void 0,s,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,n,i){const o=this,a=o.getDataset(),s=o._cachedMeta.rScale,r="reset"===i;for(let l=e;l<e+n;l++){const e=t[l],n=o.resolveDataElementOptions(l,i),c=s.getPointPositionForValue(l,a.data[l]),d=r?s.xCenter:c.x,h=r?s.yCenter:c.y,u={x:d,y:h,angle:c.angle,skip:isNaN(d)||isNaN(h),options:n};o.updateElement(e,l,u,i)}}}Fi.id="radar",Fi.defaults={datasetElementType:"line",dataElementType:"point",indexAxis:"r",showLine:!0,elements:{line:{fill:"start"}}},Fi.overrides={aspectRatio:1,scales:{r:{type:"radialLinear"}}};class Ri extends Ai{}Ri.id="scatter",Ri.defaults={showLine:!1,fill:!1},Ri.overrides={interaction:{mode:"point"},plugins:{tooltip:{callbacks:{title:()=>"",label:t=>"("+t.label+", "+t.formattedValue+")"}}},scales:{x:{type:"linear"},y:{type:"linear"}}};var zi=Object.freeze({__proto__:null,BarController:Di,BubbleController:Ei,DoughnutController:Ti,LineController:Ai,PolarAreaController:Li,PieController:Ii,RadarController:Fi,ScatterController:Ri});function Vi(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class Bi{constructor(t){this.options=t||{}}formats(){return Vi()}parse(t,e){return Vi()}format(t,e){return Vi()}add(t,e,n){return Vi()}diff(t,e,n){return Vi()}startOf(t,e,n){return Vi()}endOf(t,e){return Vi()}}Bi.override=function(t){Object.assign(Bi.prototype,t)};var Ni={_date:Bi};function Wi(t,e){return"native"in t?{x:t.x,y:t.y}:Nn(t,e)}function ji(t,e,n,i){const{controller:o,data:a,_sorted:s}=t,r=o._cachedMeta.iScale;if(r&&e===r.axis&&s&&a.length){const t=r._reversePixels?hn:dn;if(!i)return t(a,e,n);if(o._sharedOptions){const i=a[0],o="function"==typeof i.getRange&&i.getRange(e);if(o){const i=t(a,e,n-o),s=t(a,e,n+o);return{lo:i.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function Hi(t,e,n,i,o){const a=t.getSortedVisibleDatasetMetas(),s=n[e];for(let t=0,n=a.length;t<n;++t){const{index:n,data:r}=a[t],{lo:l,hi:c}=ji(a[t],e,s,o);for(let t=l;t<=c;++t){const e=r[t];e.skip||i(e,n,t)}}}function $i(t,e,n,i){const o=[];if(!Ye(e,t.chartArea,t._minPadding))return o;return Hi(t,n,e,(function(t,n,a){t.inRange(e.x,e.y,i)&&o.push({element:t,datasetIndex:n,index:a})}),!0),o}function Ui(t,e,n,i,o){const a=function(t){const e=-1!==t.indexOf("x"),n=-1!==t.indexOf("y");return function(t,i){const o=e?Math.abs(t.x-i.x):0,a=n?Math.abs(t.y-i.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(a,2))}}(n);let s=Number.POSITIVE_INFINITY,r=[];if(!Ye(e,t.chartArea,t._minPadding))return r;return Hi(t,n,e,(function(n,l,c){if(i&&!n.inRange(e.x,e.y,o))return;const d=n.getCenterPoint(o);if(!Ye(d,t.chartArea,t._minPadding))return;const h=a(e,d);h<s?(r=[{element:n,datasetIndex:l,index:c}],s=h):h===s&&r.push({element:n,datasetIndex:l,index:c})})),r}function Yi(t,e,n,i){const o=Wi(e,t),a=[],s=n.axis,r="x"===s?"inXRange":"inYRange";let l=!1;return function(t,e){const n=t.getSortedVisibleDatasetMetas();let i,o,a;for(let t=0,s=n.length;t<s;++t){({index:i,data:o}=n[t]);for(let t=0,n=o.length;t<n;++t)a=o[t],a.skip||e(a,i,t)}}(t,((t,e,n)=>{t[r](o[s],i)&&a.push({element:t,datasetIndex:e,index:n}),t.inRange(o.x,o.y,i)&&(l=!0)})),n.intersect&&!l?[]:a}var Ki={modes:{index(t,e,n,i){const o=Wi(e,t),a=n.axis||"x",s=n.intersect?$i(t,o,a,i):Ui(t,o,a,!1,i),r=[];return s.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=s[0].index,n=t.data[e];n&&!n.skip&&r.push({element:n,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,n,i){const o=Wi(e,t),a=n.axis||"xy";let s=n.intersect?$i(t,o,a,i):Ui(t,o,a,!1,i);if(s.length>0){const e=s[0].datasetIndex,n=t.getDatasetMeta(e).data;s=[];for(let t=0;t<n.length;++t)s.push({element:n[t],datasetIndex:e,index:t})}return s},point:(t,e,n,i)=>$i(t,Wi(e,t),n.axis||"xy",i),nearest:(t,e,n,i)=>Ui(t,Wi(e,t),n.axis||"xy",n.intersect,i),x:(t,e,n,i)=>(n.axis="x",Yi(t,e,n,i)),y:(t,e,n,i)=>(n.axis="y",Yi(t,e,n,i))}};const qi=["left","top","right","bottom"];function Xi(t,e){return t.filter((t=>t.pos===e))}function Gi(t,e){return t.filter((t=>-1===qi.indexOf(t.pos)&&t.box.axis===e))}function Zi(t,e){return t.sort(((t,n)=>{const i=e?n:t,o=e?t:n;return i.weight===o.weight?i.index-o.index:i.weight-o.weight}))}function Ji(t,e,n,i){return Math.max(t[n],e[n])+Math.max(t[i],e[i])}function Qi(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function to(t,e,n){const i=n.box,o=t.maxPadding;dt(n.pos)||(n.size&&(t[n.pos]-=n.size),n.size=n.horizontal?i.height:i.width,t[n.pos]+=n.size),i.getPadding&&Qi(o,i.getPadding());const a=Math.max(0,e.outerWidth-Ji(o,t,"left","right")),s=Math.max(0,e.outerHeight-Ji(o,t,"top","bottom")),r=a!==t.w,l=s!==t.h;return t.w=a,t.h=s,n.horizontal?{same:r,other:l}:{same:l,other:r}}function eo(t,e){const n=e.maxPadding;function i(t){const i={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{i[t]=Math.max(e[t],n[t])})),i}return i(t?["left","right"]:["top","bottom"])}function no(t,e,n){const i=[];let o,a,s,r,l,c;for(o=0,a=t.length,l=0;o<a;++o){s=t[o],r=s.box,r.update(s.width||e.w,s.height||e.h,eo(s.horizontal,e));const{same:a,other:d}=to(e,n,s);l|=a&&i.length,c=c||d,r.fullSize||i.push(s)}return l&&no(i,e,n)||c}function io(t,e,n){const i=n.padding;let o,a,s,r,l=e.x,c=e.y;for(o=0,a=t.length;o<a;++o)s=t[o],r=s.box,s.horizontal?(r.left=r.fullSize?i.left:e.left,r.right=r.fullSize?n.outerWidth-i.right:e.left+e.w,r.top=c,r.bottom=c+r.height,r.width=r.right-r.left,c=r.bottom):(r.left=l,r.right=l+r.width,r.top=r.fullSize?i.top:e.top,r.bottom=r.fullSize?n.outerHeight-i.right:e.top+e.h,r.height=r.bottom-r.top,l=r.right);e.x=l,e.y=c}Ne.set("layout",{padding:{top:0,right:0,bottom:0,left:0}});var oo={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||"top",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const n=t.boxes?t.boxes.indexOf(e):-1;-1!==n&&t.boxes.splice(n,1)},configure(t,e,n){e.fullSize=n.fullSize,e.position=n.position,e.weight=n.weight},update(t,e,n,i){if(!t)return;const o=sn(t.options.layout.padding),a=Math.max(e-o.width,0),s=Math.max(n-o.height,0),r=function(t){const e=function(t){const e=[];let n,i,o;for(n=0,i=(t||[]).length;n<i;++n)o=t[n],e.push({index:n,box:o,pos:o.position,horizontal:o.isHorizontal(),weight:o.weight});return e}(t),n=Zi(e.filter((t=>t.box.fullSize)),!0),i=Zi(Xi(e,"left"),!0),o=Zi(Xi(e,"right")),a=Zi(Xi(e,"top"),!0),s=Zi(Xi(e,"bottom")),r=Gi(e,"x"),l=Gi(e,"y");return{fullSize:n,leftAndTop:i.concat(a),rightAndBottom:o.concat(l).concat(s).concat(r),chartArea:Xi(e,"chartArea"),vertical:i.concat(o).concat(l),horizontal:a.concat(s).concat(r)}}(t.boxes),l=r.vertical,c=r.horizontal;mt(t.boxes,(t=>{"function"==typeof t.beforeLayout&&t.beforeLayout()}));const d=l.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,h=Object.freeze({outerWidth:e,outerHeight:n,padding:o,availableWidth:a,availableHeight:s,vBoxMaxWidth:a/2/d,hBoxMaxHeight:s/2}),u=Object.assign({},o);Qi(u,sn(i));const g=Object.assign({maxPadding:u,w:a,h:s,x:o.left,y:o.top},o);!function(t,e){let n,i,o;for(n=0,i=t.length;n<i;++n)o=t[n],o.horizontal?(o.width=o.box.fullSize&&e.availableWidth,o.height=e.hBoxMaxHeight):(o.width=e.vBoxMaxWidth,o.height=o.box.fullSize&&e.availableHeight)}(l.concat(c),h),no(r.fullSize,g,h),no(l,g,h),no(c,g,h)&&no(l,g,h),function(t){const e=t.maxPadding;function n(n){const i=Math.max(e[n]-t[n],0);return t[n]+=i,i}t.y+=n("top"),t.x+=n("left"),n("right"),n("bottom")}(g),io(r.leftAndTop,g,h),g.x+=g.w,g.y+=g.h,io(r.rightAndBottom,g,h),t.chartArea={left:g.left,top:g.top,right:g.left+g.w,bottom:g.top+g.h,height:g.h,width:g.w},mt(r.chartArea,(e=>{const n=e.box;Object.assign(n,t.chartArea),n.update(g.w,g.h)}))}};class ao{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,n){}removeEventListener(t,e,n){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,n,i){return e=Math.max(0,e||t.width),n=n||t.height,{width:e,height:Math.max(0,i?Math.floor(e/i):n)}}isAttached(t){return!0}}class so extends ao{acquireContext(t){return t&&t.getContext&&t.getContext("2d")||null}}const ro="$chartjs",lo={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},co=t=>null===t||""===t;const ho=!!$n&&{passive:!0};function uo(t,e,n){t.canvas.removeEventListener(e,n,ho)}function go(t,e,n){const i=t.canvas,o=i&&Fn(i)||i,a=new MutationObserver((t=>{const e=Fn(o);t.forEach((t=>{for(let i=0;i<t.addedNodes.length;i++){const a=t.addedNodes[i];a!==o&&a!==e||n(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function po(t,e,n){const i=t.canvas,o=i&&Fn(i);if(!o)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===i){n();break}}))}));return a.observe(o,{childList:!0}),a}const fo=new Map;let mo=0;function xo(){const t=window.devicePixelRatio;t!==mo&&(mo=t,fo.forEach(((e,n)=>{n.currentDevicePixelRatio!==t&&e()})))}function bo(t,e,n){const i=t.canvas,o=i&&Fn(i);if(!o)return;const a=it(((t,e)=>{const i=o.clientWidth;n(t,e),i<o.clientWidth&&n()}),window),s=new ResizeObserver((t=>{const e=t[0],n=e.contentRect.width,i=e.contentRect.height;0===n&&0===i||a(n,i)}));return s.observe(o),function(t,e){fo.size||window.addEventListener("resize",xo),fo.set(t,e)}(t,a),s}function yo(t,e,n){n&&n.disconnect(),"resize"===e&&function(t){fo.delete(t),fo.size||window.removeEventListener("resize",xo)}(t)}function _o(t,e,n){const i=t.canvas,o=it((e=>{null!==t.ctx&&n(function(t,e){const n=lo[t.type]||t.type,{x:i,y:o}=Nn(t,e);return{type:n,chart:e,native:t,x:void 0!==i?i:null,y:void 0!==o?o:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,n){t.addEventListener(e,n,ho)}(i,e,o),o}class vo extends ao{acquireContext(t,e){const n=t&&t.getContext&&t.getContext("2d");return n&&n.canvas===t?(function(t,e){const n=t.style,i=t.getAttribute("height"),o=t.getAttribute("width");if(t[ro]={initial:{height:i,width:o,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",n.boxSizing=n.boxSizing||"border-box",co(o)){const e=Un(t,"width");void 0!==e&&(t.width=e)}if(co(i))if(""===t.style.height)t.height=t.width/(e||2);else{const e=Un(t,"height");void 0!==e&&(t.height=e)}}(t,e),n):null}releaseContext(t){const e=t.canvas;if(!e[ro])return!1;const n=e[ro].initial;["height","width"].forEach((t=>{const i=n[t];lt(i)?e.removeAttribute(t):e.setAttribute(t,i)}));const i=n.style||{};return Object.keys(i).forEach((t=>{e.style[t]=i[t]})),e.width=e.width,delete e[ro],!0}addEventListener(t,e,n){this.removeEventListener(t,e);const i=t.$proxies||(t.$proxies={}),o={attach:go,detach:po,resize:bo}[e]||_o;i[e]=o(t,e,n)}removeEventListener(t,e){const n=t.$proxies||(t.$proxies={}),i=n[e];if(!i)return;({attach:yo,detach:yo,resize:yo}[e]||uo)(t,e,i),n[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,n,i){return jn(t,e,n,i)}isAttached(t){const e=Fn(t);return!(!e||!Fn(e))}}class Mo{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:n}=this.getProps(["x","y"],t);return{x:e,y:n}}hasValue(){return Nt(this.x)&&Nt(this.y)}getProps(t,e){const n=this,i=this.$animations;if(!e||!i)return n;const o={};return t.forEach((t=>{o[t]=i[t]&&i[t].active()?i[t]._to:n[t]})),o}}Mo.defaults={},Mo.defaultRoutes=void 0;const wo={values:t=>ct(t)?t:""+t,numeric(t,e,n){if(0===t)return"0";const i=this.chart.options.locale;let o,a=t;if(n.length>1){const e=Math.max(Math.abs(n[0].value),Math.abs(n[n.length-1].value));(e<1e-4||e>1e15)&&(o="scientific"),a=function(t,e){let n=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(n)>=1&&t!==Math.floor(t)&&(n=t-Math.floor(t));return n}(t,n)}const s=zt(Math.abs(a)),r=Math.max(Math.min(-1*Math.floor(s),20),0),l={notation:o,minimumFractionDigits:r,maximumFractionDigits:r};return Object.assign(l,this.options.ticks.format),Gn(t,i,l)},logarithmic(t,e,n){if(0===t)return"0";const i=t/Math.pow(10,Math.floor(zt(t)));return 1===i||2===i||5===i?wo.numeric.call(this,t,e,n):""}};var Co={formatters:wo};function ko(t,e){const n=t.options.ticks,i=n.maxTicksLimit||function(t){const e=t.options.offset,n=t._tickSize(),i=t._length/n+(e?0:1),o=t._maxLength/n;return Math.floor(Math.min(i,o))}(t),o=n.major.enabled?function(t){const e=[];let n,i;for(n=0,i=t.length;n<i;n++)t[n].major&&e.push(n);return e}(e):[],a=o.length,s=o[0],r=o[a-1],l=[];if(a>i)return function(t,e,n,i){let o,a=0,s=n[0];for(i=Math.ceil(i),o=0;o<t.length;o++)o===s&&(e.push(t[o]),a++,s=n[a*i])}(e,l,o,a/i),l;const c=function(t,e,n){const i=function(t){const e=t.length;let n,i;if(e<2)return!1;for(i=t[0],n=1;n<e;++n)if(t[n]-t[n-1]!==i)return!1;return i}(t),o=e.length/n;if(!i)return Math.max(o,1);const a=function(t){const e=[],n=Math.sqrt(t);let i;for(i=1;i<n;i++)t%i==0&&(e.push(i),e.push(t/i));return n===(0|n)&&e.push(n),e.sort(((t,e)=>t-e)).pop(),e}(i);for(let t=0,e=a.length-1;t<e;t++){const e=a[t];if(e>o)return e}return Math.max(o,1)}(o,e,i);if(a>0){let t,n;const i=a>1?Math.round((r-s)/(a-1)):null;for(So(e,l,c,lt(i)?0:s-i,s),t=0,n=a-1;t<n;t++)So(e,l,c,o[t],o[t+1]);return So(e,l,c,r,lt(i)?e.length:r+i),l}return So(e,l,c),l}function So(t,e,n,i,o){const a=gt(i,0),s=Math.min(gt(o,t.length),t.length);let r,l,c,d=0;for(n=Math.ceil(n),o&&(r=o-i,n=r/Math.floor(r/n)),c=a;c<0;)d++,c=Math.round(a+d*n);for(l=Math.max(a,0);l<s;l++)l===c&&(e.push(t[l]),d++,c=Math.round(a+d*n))}Ne.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:Co.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),Ne.route("scale.ticks","color","","color"),Ne.route("scale.grid","color","","borderColor"),Ne.route("scale.grid","borderColor","","borderColor"),Ne.route("scale.title","color","","color"),Ne.describe("scale",{_fallback:!1,_scriptable:t=>!t.startsWith("before")&&!t.startsWith("after")&&"callback"!==t&&"parser"!==t,_indexable:t=>"borderDash"!==t&&"tickBorderDash"!==t}),Ne.describe("scales",{_fallback:"scale"});const Po=(t,e,n)=>"top"===e||"left"===e?t[e]+n:t[e]-n;function Oo(t,e){const n=[],i=t.length/e,o=t.length;let a=0;for(;a<o;a+=i)n.push(t[Math.floor(a)]);return n}function Do(t,e,n){const i=t.ticks.length,o=Math.min(e,i-1),a=t._startPixel,s=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(n&&(l=1===i?Math.max(c-a,s-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<a-r||c>s+r)))return c}function Eo(t){return t.drawTicks?t.tickLength:0}function To(t,e){if(!t.display)return 0;const n=rn(t.font,e),i=sn(t.padding);return(ct(t.text)?t.text.length:1)*n.lineHeight+i.height}function Ao(t,e,n){let i=ot(t);return(n&&"right"!==e||!n&&"right"===e)&&(i=(t=>"left"===t?"right":"right"===t?"left":t)(i)),i}class Lo extends Mo{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:n,_suggestedMax:i}=this;return t=ut(t,Number.POSITIVE_INFINITY),e=ut(e,Number.NEGATIVE_INFINITY),n=ut(n,Number.POSITIVE_INFINITY),i=ut(i,Number.NEGATIVE_INFINITY),{min:ut(t,n),max:ut(e,i),minDefined:ht(t),maxDefined:ht(e)}}getMinMax(t){const e=this;let n,{min:i,max:o,minDefined:a,maxDefined:s}=e.getUserBounds();if(a&&s)return{min:i,max:o};const r=e.getMatchingVisibleMetas();for(let l=0,c=r.length;l<c;++l)n=r[l].controller.getMinMax(e,t),a||(i=Math.min(i,n.min)),s||(o=Math.max(o,n.max));return{min:ut(i,ut(o,i)),max:ut(o,ut(i,o))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){ft(this.options.beforeUpdate,[this])}update(t,e,n){const i=this,o=i.options.ticks,a=o.sampleSize;i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i._margins=n=Object.assign({left:0,right:0,top:0,bottom:0},n),i.ticks=null,i._labelSizes=null,i._gridLineItems=null,i._labelItems=null,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i._maxLength=i.isHorizontal()?i.width+n.left+n.right:i.height+n.top+n.bottom,i._dataLimitsCached||(i.beforeDataLimits(),i.determineDataLimits(),i.afterDataLimits(),i._range=function(t,e){const{min:n,max:i}=t;return{min:n-Math.abs(pt(e,n)),max:i+pt(e,i)}}(i,i.options.grace),i._dataLimitsCached=!0),i.beforeBuildTicks(),i.ticks=i.buildTicks()||[],i.afterBuildTicks();const s=a<i.ticks.length;i._convertTicksToLabels(s?Oo(i.ticks,a):i.ticks),i.configure(),i.beforeCalculateLabelRotation(),i.calculateLabelRotation(),i.afterCalculateLabelRotation(),o.display&&(o.autoSkip||"auto"===o.source)&&(i.ticks=ko(i,i.ticks),i._labelSizes=null),s&&i._convertTicksToLabels(i.ticks),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate()}configure(){const t=this;let e,n,i=t.options.reverse;t.isHorizontal()?(e=t.left,n=t.right):(e=t.top,n=t.bottom,i=!i),t._startPixel=e,t._endPixel=n,t._reversePixels=i,t._length=n-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){ft(this.options.afterUpdate,[this])}beforeSetDimensions(){ft(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){ft(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),ft(e.options[t],[e])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){ft(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,n=e.options.ticks;let i,o,a;for(i=0,o=t.length;i<o;i++)a=t[i],a.label=ft(n.callback,[a.value,i,t],e);for(i=0;i<o;i++)lt(t[i].label)&&(t.splice(i,1),o--,i--)}afterTickToLabelConversion(){ft(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){ft(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,n=e.ticks,i=t.ticks.length,o=n.minRotation||0,a=n.maxRotation;let s,r,l,c=o;if(!t._isVisible()||!n.display||o>=a||i<=1||!t.isHorizontal())return void(t.labelRotation=o);const d=t._getLabelSizes(),h=d.widest.width,u=d.highest.height,g=Gt(t.chart.width-h,0,t.maxWidth);s=e.offset?t.maxWidth/i:g/(i-1),h+6>s&&(s=g/(i-(e.offset?.5:1)),r=t.maxHeight-Eo(e.grid)-n.padding-To(e.title,t.chart.options.font),l=Math.sqrt(h*h+u*u),c=$t(Math.min(Math.asin(Math.min((d.highest.height+6)/s,1)),Math.asin(Math.min(r/l,1))-Math.asin(u/l))),c=Math.max(o,Math.min(a,c))),t.labelRotation=c}afterCalculateLabelRotation(){ft(this.options.afterCalculateLabelRotation,[this])}beforeFit(){ft(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:n,options:{ticks:i,title:o,grid:a}}=t,s=t._isVisible(),r=t.isHorizontal();if(s){const s=To(o,n.options.font);if(r?(e.width=t.maxWidth,e.height=Eo(a)+s):(e.height=t.maxHeight,e.width=Eo(a)+s),i.display&&t.ticks.length){const{first:n,last:o,widest:a,highest:s}=t._getLabelSizes(),l=2*i.padding,c=Ht(t.labelRotation),d=Math.cos(c),h=Math.sin(c);if(r){const n=i.mirror?0:h*a.width+d*s.height;e.height=Math.min(t.maxHeight,e.height+n+l)}else{const n=i.mirror?0:d*a.width+h*s.height;e.width=Math.min(t.maxWidth,e.width+n+l)}t._calculatePadding(n,o,h,d)}}t._handleMargins(),r?(t.width=t._length=n.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=n.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,n,i){const o=this,{ticks:{align:a,padding:s},position:r}=o.options,l=0!==o.labelRotation,c="top"!==r&&"x"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,d=o.right-o.getPixelForTick(o.ticks.length-1);let h=0,u=0;l?c?(h=i*t.width,u=n*e.height):(h=n*t.height,u=i*e.width):"start"===a?u=e.width:"end"===a?h=t.width:(h=t.width/2,u=e.width/2),o.paddingLeft=Math.max((h-r+s)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-d+s)*o.width/(o.width-d),0)}else{let n=e.height/2,i=t.height/2;"start"===a?(n=0,i=t.height):"end"===a&&(n=e.height,i=0),o.paddingTop=n+s,o.paddingBottom=i+s}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){ft(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return"top"===e||"bottom"===e||"x"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;e.beforeTickToLabelConversion(),e.generateTickLabels(t),e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const n=t.options.ticks.sampleSize;let i=t.ticks;n<i.length&&(i=Oo(i,n)),t._labelSizes=e=t._computeLabelSizes(i,i.length)}return e}_computeLabelSizes(t,e){const{ctx:n,_longestTextCache:i}=this,o=[],a=[];let s,r,l,c,d,h,u,g,p,f,m,x=0,b=0;for(s=0;s<e;++s){if(c=t[s].label,d=this._resolveTickFontOptions(s),n.font=h=d.string,u=i[h]=i[h]||{data:{},gc:[]},g=d.lineHeight,p=f=0,lt(c)||ct(c)){if(ct(c))for(r=0,l=c.length;r<l;++r)m=c[r],lt(m)||ct(m)||(p=We(n,u.data,u.gc,p,m),f+=g)}else p=We(n,u.data,u.gc,p,c),f=g;o.push(p),a.push(f),x=Math.max(p,x),b=Math.max(f,b)}!function(t,e){mt(t,(t=>{const n=t.gc,i=n.length/2;let o;if(i>e){for(o=0;o<i;++o)delete t.data[n[o]];n.splice(0,i)}}))}(i,e);const y=o.indexOf(x),_=a.indexOf(b),v=t=>({width:o[t]||0,height:a[t]||0});return{first:v(0),last:v(e-1),widest:v(y),highest:v(_),widths:o,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const n=e._startPixel+t*e._length;return Gt(e._alignToPixels?He(e.chart,n,0):n,-32768,32767)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,n=e.ticks||[];if(t>=0&&t<n.length){const i=n[t];return i.$context||(i.$context=function(t,e,n){return Object.assign(Object.create(t),{tick:n,index:e,type:"tick"})}(e.getContext(),t,i))}return e.$context||(e.$context=(i=e.chart.getContext(),o=e,Object.assign(Object.create(i),{scale:o,type:"scale"})));var i,o}_tickSize(){const t=this,e=t.options.ticks,n=Ht(t.labelRotation),i=Math.abs(Math.cos(n)),o=Math.abs(Math.sin(n)),a=t._getLabelSizes(),s=e.autoSkipPadding||0,r=a?a.widest.width+s:0,l=a?a.highest.height+s:0;return t.isHorizontal()?l*i>r*o?r/i:l/o:l*o<r*i?l/i:r/o}_isVisible(){const t=this.options.display;return"auto"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,n=e.axis,i=e.chart,o=e.options,{grid:a,position:s}=o,r=a.offset,l=e.isHorizontal(),c=e.ticks.length+(r?1:0),d=Eo(a),h=[],u=a.setContext(e.getContext()),g=u.drawBorder?u.borderWidth:0,p=g/2,f=function(t){return He(i,t,g)};let m,x,b,y,_,v,M,w,C,k,S,P;if("top"===s)m=f(e.bottom),v=e.bottom-d,w=m-p,k=f(t.top)+p,P=t.bottom;else if("bottom"===s)m=f(e.top),k=t.top,P=f(t.bottom)-p,v=m+p,w=e.top+d;else if("left"===s)m=f(e.right),_=e.right-d,M=m-p,C=f(t.left)+p,S=t.right;else if("right"===s)m=f(e.left),C=t.left,S=f(t.right)-p,_=m+p,M=e.left+d;else if("x"===n){if("center"===s)m=f((t.top+t.bottom)/2+.5);else if(dt(s)){const t=Object.keys(s)[0],n=s[t];m=f(e.chart.scales[t].getPixelForValue(n))}k=t.top,P=t.bottom,v=m+p,w=v+d}else if("y"===n){if("center"===s)m=f((t.left+t.right)/2);else if(dt(s)){const t=Object.keys(s)[0],n=s[t];m=f(e.chart.scales[t].getPixelForValue(n))}_=m-p,M=_-d,C=t.left,S=t.right}for(x=0;x<c;++x){const t=a.setContext(e.getContext(x)),n=t.lineWidth,o=t.color,s=a.borderDash||[],c=t.borderDashOffset,d=t.tickWidth,u=t.tickColor,g=t.tickBorderDash||[],p=t.tickBorderDashOffset;b=Do(e,x,r),void 0!==b&&(y=He(i,b,n),l?_=M=C=S=y:v=w=k=P=y,h.push({tx1:_,ty1:v,tx2:M,ty2:w,x1:C,y1:k,x2:S,y2:P,width:n,color:o,borderDash:s,borderDashOffset:c,tickWidth:d,tickColor:u,tickBorderDash:g,tickBorderDashOffset:p}))}return e._ticksLength=c,e._borderValue=m,h}_computeLabelItems(t){const e=this,n=e.axis,i=e.options,{position:o,ticks:a}=i,s=e.isHorizontal(),r=e.ticks,{align:l,crossAlign:c,padding:d,mirror:h}=a,u=Eo(i.grid),g=u+d,p=h?-d:g,f=-Ht(e.labelRotation),m=[];let x,b,y,_,v,M,w,C,k,S,P,O,D="middle";if("top"===o)M=e.bottom-p,w=e._getXAxisLabelAlignment();else if("bottom"===o)M=e.top+p,w=e._getXAxisLabelAlignment();else if("left"===o){const t=e._getYAxisLabelAlignment(u);w=t.textAlign,v=t.x}else if("right"===o){const t=e._getYAxisLabelAlignment(u);w=t.textAlign,v=t.x}else if("x"===n){if("center"===o)M=(t.top+t.bottom)/2+g;else if(dt(o)){const t=Object.keys(o)[0],n=o[t];M=e.chart.scales[t].getPixelForValue(n)+g}w=e._getXAxisLabelAlignment()}else if("y"===n){if("center"===o)v=(t.left+t.right)/2-g;else if(dt(o)){const t=Object.keys(o)[0],n=o[t];v=e.chart.scales[t].getPixelForValue(n)}w=e._getYAxisLabelAlignment(u).textAlign}"y"===n&&("start"===l?D="top":"end"===l&&(D="bottom"));const E=e._getLabelSizes();for(x=0,b=r.length;x<b;++x){y=r[x],_=y.label;const t=a.setContext(e.getContext(x));C=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),S=k.lineHeight,P=ct(_)?_.length:1;const n=P/2,i=t.color,l=t.textStrokeColor,d=t.textStrokeWidth;let u;if(s?(v=C,O="top"===o?"near"===c||0!==f?-P*S+S/2:"center"===c?-E.highest.height/2-n*S+S:-E.highest.height+S/2:"near"===c||0!==f?S/2:"center"===c?E.highest.height/2-n*S:E.highest.height-P*S,h&&(O*=-1)):(M=C,O=(1-P)*S/2),t.showLabelBackdrop){const e=sn(t.backdropPadding),n=E.heights[x],i=E.widths[x];let o=M+O-e.top,a=v-e.left;switch(D){case"middle":o-=n/2;break;case"bottom":o-=n}switch(w){case"center":a-=i/2;break;case"right":a-=i}u={left:a,top:o,width:i+e.width,height:n+e.height,color:t.backdropColor}}m.push({rotation:f,label:_,font:k,color:i,strokeColor:l,strokeWidth:d,textOffset:O,textAlign:w,textBaseline:D,translation:[v,M],backdrop:u})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Ht(this.labelRotation))return"top"===t?"left":"right";let n="center";return"start"===e.align?n="left":"end"===e.align&&(n="right"),n}_getYAxisLabelAlignment(t){const e=this,{position:n,ticks:{crossAlign:i,mirror:o,padding:a}}=e.options,s=t+a,r=e._getLabelSizes().widest.width;let l,c;return"left"===n?o?(l="left",c=e.right+a):(c=e.right-s,"near"===i?l="right":"center"===i?(l="center",c-=r/2):(l="left",c=e.left)):"right"===n?o?(l="right",c=e.left+a):(c=e.left+s,"near"===i?l="left":"center"===i?(l="center",c+=r/2):(l="right",c=e.right)):l="right",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,n=t.options.position;return"left"===n||"right"===n?{top:0,left:t.left,bottom:e.height,right:t.right}:"top"===n||"bottom"===n?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:n,top:i,width:o,height:a}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(n,i,o,a),t.restore())}getLineWidthForValue(t){const e=this,n=e.options.grid;if(!e._isVisible()||!n.display)return 0;const i=e.ticks.findIndex((e=>e.value===t));if(i>=0){return n.setContext(e.getContext(i)).lineWidth}return 0}drawGrid(t){const e=this,n=e.options.grid,i=e.ctx,o=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let a,s;const r=(t,e,n)=>{n.width&&n.color&&(i.save(),i.lineWidth=n.width,i.strokeStyle=n.color,i.setLineDash(n.borderDash||[]),i.lineDashOffset=n.borderDashOffset,i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.stroke(),i.restore())};if(n.display)for(a=0,s=o.length;a<s;++a){const t=o[a];n.drawOnChartArea&&r({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),n.drawTicks&&r({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}}drawBorder(){const t=this,{chart:e,ctx:n,options:{grid:i}}=t,o=i.setContext(t.getContext()),a=i.drawBorder?o.borderWidth:0;if(!a)return;const s=i.setContext(t.getContext(0)).lineWidth,r=t._borderValue;let l,c,d,h;t.isHorizontal()?(l=He(e,t.left,a)-a/2,c=He(e,t.right,s)+s/2,d=h=r):(d=He(e,t.top,a)-a/2,h=He(e,t.bottom,s)+s/2,l=c=r),n.save(),n.lineWidth=o.borderWidth,n.strokeStyle=o.borderColor,n.beginPath(),n.moveTo(l,d),n.lineTo(c,h),n.stroke(),n.restore()}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const n=e.ctx,i=e._computeLabelArea();i&&Ke(n,i);const o=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,s;for(a=0,s=o.length;a<s;++a){const t=o[a],e=t.font,i=t.label;t.backdrop&&(n.fillStyle=t.backdrop.color,n.fillRect(t.backdrop.left,t.backdrop.top,t.backdrop.width,t.backdrop.height)),Ze(n,i,0,t.textOffset,e,t)}i&&qe(n)}drawTitle(){const{ctx:t,options:{position:e,title:n,reverse:i}}=this;if(!n.display)return;const o=rn(n.font),a=sn(n.padding),s=n.align;let r=o.lineHeight/2;"bottom"===e?(r+=a.bottom,ct(n.text)&&(r+=o.lineHeight*(n.text.length-1))):r+=a.top;const{titleX:l,titleY:c,maxWidth:d,rotation:h}=function(t,e,n,i){const{top:o,left:a,bottom:s,right:r}=t;let l,c,d,h=0;return t.isHorizontal()?(c=at(i,a,r),d=Po(t,n,e),l=r-a):(c=Po(t,n,e),d=at(i,s,o),h="left"===n?-It:It),{titleX:c,titleY:d,maxWidth:l,rotation:h}}(this,r,e,s);Ze(t,n.text,0,0,o,{color:n.color,maxWidth:d,rotation:h,textAlign:Ao(s,e,i),textBaseline:"middle",translation:[l,c]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawBorder(),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,n=e.ticks&&e.ticks.z||0,i=e.grid&&e.grid.z||0;return t._isVisible()&&t.draw===Lo.prototype.draw?[{z:i,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:i+1,draw(){t.drawBorder()}},{z:n,draw(e){t.drawLabels(e)}}]:[{z:n,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,n=e.chart.getSortedVisibleDatasetMetas(),i=e.axis+"AxisID",o=[];let a,s;for(a=0,s=n.length;a<s;++a){const s=n[a];s[i]!==e.id||t&&s.type!==t||o.push(s)}return o}_resolveTickFontOptions(t){return rn(this.options.ticks.setContext(this.getContext(t)).font)}_maxDigits(){const t=this,e=t._resolveTickFontOptions(0).lineHeight;return(t.isHorizontal()?t.width:t.height)/e}}class Io{constructor(t,e,n){this.type=t,this.scope=e,this.override=n,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,n=Object.getPrototypeOf(t);let i;(function(t){return"id"in t&&"defaults"in t})(n)&&(i=e.register(n));const o=e.items,a=t.id,s=e.scope+"."+a;if(!a)throw new Error("class does not have id: "+t);return a in o||(o[a]=t,function(t,e,n){const i=vt(Object.create(null),[n?Ne.get(n):{},Ne.get(e),t.defaults]);Ne.set(e,i),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((n=>{const i=n.split("."),o=i.pop(),a=[t].concat(i).join("."),s=e[n].split("."),r=s.pop(),l=s.join(".");Ne.route(a,o,l,r)}))}(e,t.defaultRoutes);t.descriptors&&Ne.describe(e,t.descriptors)}(t,s,i),e.override&&Ne.override(t.id,t.overrides)),s}get(t){return this.items[t]}unregister(t){const e=this.items,n=t.id,i=this.scope;n in e&&delete e[n],i&&n in Ne[i]&&(delete Ne[i][n],this.override&&delete Re[n])}}var Fo=new class{constructor(){this.controllers=new Io(Ci,"datasets",!0),this.elements=new Io(Mo,"elements"),this.plugins=new Io(Object,"plugins"),this.scales=new Io(Lo,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each("register",t)}remove(...t){this._each("unregister",t)}addControllers(...t){this._each("register",t,this.controllers)}addElements(...t){this._each("register",t,this.elements)}addPlugins(...t){this._each("register",t,this.plugins)}addScales(...t){this._each("register",t,this.scales)}getController(t){return this._get(t,this.controllers,"controller")}getElement(t){return this._get(t,this.elements,"element")}getPlugin(t){return this._get(t,this.plugins,"plugin")}getScale(t){return this._get(t,this.scales,"scale")}removeControllers(...t){this._each("unregister",t,this.controllers)}removeElements(...t){this._each("unregister",t,this.elements)}removePlugins(...t){this._each("unregister",t,this.plugins)}removeScales(...t){this._each("unregister",t,this.scales)}_each(t,e,n){const i=this;[...e].forEach((e=>{const o=n||i._getRegistryForType(e);n||o.isForType(e)||o===i.plugins&&e.id?i._exec(t,o,e):mt(e,(e=>{const o=n||i._getRegistryForType(e);i._exec(t,o,e)}))}))}_exec(t,e,n){const i=St(t);ft(n["before"+i],[],n),e[t](n),ft(n["after"+i],[],n)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const n=this._typedRegistries[e];if(n.isForType(t))return n}return this.plugins}_get(t,e,n){const i=e.get(t);if(void 0===i)throw new Error('"'+t+'" is not a registered '+n+".");return i}};class Ro{constructor(){this._init=[]}notify(t,e,n,i){const o=this;"beforeInit"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,"install"));const a=i?o._descriptors(t).filter(i):o._descriptors(t),s=o._notify(a,t,e,n);return"destroy"===e&&(o._notify(a,t,"stop"),o._notify(o._init,t,"uninstall")),s}_notify(t,e,n,i){i=i||{};for(const o of t){const t=o.plugin;if(!1===ft(t[n],[e,i,o.options],t)&&i.cancelable)return!1}return!0}invalidate(){lt(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const n=t&&t.config,i=gt(n.options&&n.options.plugins,{}),o=function(t){const e=[],n=Object.keys(Fo.plugins.items);for(let t=0;t<n.length;t++)e.push(Fo.getPlugin(n[t]));const i=t.plugins||[];for(let t=0;t<i.length;t++){const n=i[t];-1===e.indexOf(n)&&e.push(n)}return e}(n);return!1!==i||e?function(t,e,n,i){const o=[],a=t.getContext();for(let s=0;s<e.length;s++){const r=e[s],l=zo(n[r.id],i);null!==l&&o.push({plugin:r,options:Vo(t.config,r,l,a)})}return o}(t,o,i,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],n=this._cache,i=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(i(e,n),t,"stop"),this._notify(i(n,e),t,"start")}}function zo(t,e){return e||!1!==t?!0===t?{}:t:null}function Vo(t,e,n,i){const o=t.pluginScopeKeys(e),a=t.getOptionScopes(n,o);return t.createResolver(a,i,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function Bo(t,e){const n=Ne.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||n.indexAxis||"x"}function No(t,e){return"x"===t||"y"===t?t:e.axis||("top"===(n=e.position)||"bottom"===n?"x":"left"===n||"right"===n?"y":void 0)||t.charAt(0).toLowerCase();var n}function Wo(t){const e=t.options||(t.options={});e.plugins=gt(e.plugins,{}),e.scales=function(t,e){const n=Re[t.type]||{scales:{}},i=e.scales||{},o=Bo(t.type,e),a=Object.create(null),s=Object.create(null);return Object.keys(i).forEach((t=>{const e=i[t],r=No(t,e),l=function(t,e){return t===e?"_index_":"_value_"}(r,o),c=n.scales||{};a[r]=a[r]||t,s[t]=Mt(Object.create(null),[{axis:r},e,c[r],c[l]])})),t.data.datasets.forEach((n=>{const o=n.type||t.type,r=n.indexAxis||Bo(o,e),l=(Re[o]||{}).scales||{};Object.keys(l).forEach((t=>{const e=function(t,e){let n=t;return"_index_"===t?n=e:"_value_"===t&&(n="x"===e?"y":"x"),n}(t,r),o=n[e+"AxisID"]||a[e]||e;s[o]=s[o]||Object.create(null),Mt(s[o],[{axis:e},i[o],l[t]])}))})),Object.keys(s).forEach((t=>{const e=s[t];Mt(e,[Ne.scales[e.type],Ne.scale])})),s}(t,e)}function jo(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const Ho=new Map,$o=new Set;function Uo(t,e){let n=Ho.get(t);return n||(n=e(),Ho.set(t,n),$o.add(n)),n}const Yo=(t,e,n)=>{const i=kt(e,n);void 0!==i&&t.add(i)};class Ko{constructor(t){this._config=function(t){return(t=t||{}).data=jo(t.data),Wo(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=jo(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),Wo(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Uo(t,(()=>[[`datasets.${t}`,""]]))}datasetAnimationScopeKeys(t,e){return Uo(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,""]]))}datasetElementScopeKeys(t,e){return Uo(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,""]]))}pluginScopeKeys(t){const e=t.id;return Uo(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const n=this._scopeCache;let i=n.get(t);return i&&!e||(i=new Map,n.set(t,i)),i}getOptionScopes(t,e,n){const{options:i,type:o}=this,a=this._cachedScopes(t,n),s=a.get(e);if(s)return s;const r=new Set;e.forEach((e=>{t&&(r.add(t),e.forEach((e=>Yo(r,t,e)))),e.forEach((t=>Yo(r,i,t))),e.forEach((t=>Yo(r,Re[o]||{},t))),e.forEach((t=>Yo(r,Ne,t))),e.forEach((t=>Yo(r,ze,t)))}));const l=[...r];return $o.has(e)&&a.set(e,l),l}chartOptionScopes(){const{options:t,type:e}=this;return[t,Re[e]||{},Ne.datasets[e]||{},{type:e},Ne,ze]}resolveNamedOptions(t,e,n,i=[""]){const o={$shared:!0},{resolver:a,subPrefixes:s}=qo(this._resolverCache,t,i);let r=a;if(function(t,e){const{isScriptable:n,isIndexable:i}=xn(t);for(const o of e)if(n(o)&&Ot(t[o])||i(o)&&ct(t[o]))return!0;return!1}(a,e)){o.$shared=!1;r=mn(a,n=Ot(n)?n():n,this.createResolver(t,n,s))}for(const t of e)o[t]=r[t];return o}createResolver(t,e,n=[""],i){const{resolver:o}=qo(this._resolverCache,t,n);return dt(e)?mn(o,e,void 0,i):o}}function qo(t,e,n){let i=t.get(e);i||(i=new Map,t.set(e,i));const o=n.join();let a=i.get(o);if(!a){a={resolver:fn(e,n),subPrefixes:n.filter((t=>!t.toLowerCase().includes("hover")))},i.set(o,a)}return a}const Xo=["top","bottom","left","right","chartArea"];function Go(t,e){return"top"===t||"bottom"===t||-1===Xo.indexOf(t)&&"x"===e}function Zo(t,e){return function(n,i){return n[t]===i[t]?n[e]-i[e]:n[t]-i[t]}}function Jo(t){const e=t.chart,n=e.options.animation;e.notifyPlugins("afterRender"),ft(n&&n.onComplete,[t],e)}function Qo(t){const e=t.chart,n=e.options.animation;ft(n&&n.onProgress,[t],e)}function ta(){return"undefined"!=typeof window&&"undefined"!=typeof document}function ea(t){return ta()&&"string"==typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const na={},ia=t=>{const e=ea(t);return Object.values(na).filter((t=>t.canvas===e)).pop()};class oa{constructor(t,e){const n=this;this.config=e=new Ko(e);const i=ea(t),o=ia(i);if(o)throw new Error("Canvas is already in use. Chart with ID '"+o.id+"' must be destroyed before the canvas can be reused.");const a=e.createResolver(e.chartOptionScopes(),n.getContext());this.platform=n._initializePlatform(i,e);const s=n.platform.acquireContext(i,a.aspectRatio),r=s&&s.canvas,l=r&&r.height,c=r&&r.width;this.id=rt(),this.ctx=s,this.canvas=r,this.width=c,this.height=l,this._options=a,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this.scale=void 0,this._plugins=new Ro,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=function(t,e){let n;return function(){return e?(clearTimeout(n),n=setTimeout(t,e)):t(),e}}((()=>this.update("resize")),a.resizeDelay||0),na[n.id]=n,s&&r?(ri.listen(n,"complete",Jo),ri.listen(n,"progress",Qo),n._initialize(),n.attached&&n.update()):console.error("Failed to create chart: can't acquire context from the given item")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:n,height:i,_aspectRatio:o}=this;return lt(t)?e&&o?o:i?n/i:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins("beforeInit"),t.options.responsive?t.resize():Hn(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins("afterInit"),t}_initializePlatform(t,e){return e.platform?new e.platform:!ta()||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas?new so:new vo}clear(){return $e(this.canvas,this.ctx),this}stop(){return ri.stop(this),this}resize(t,e){ri.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const n=this,i=n.options,o=n.canvas,a=i.maintainAspectRatio&&n.aspectRatio,s=n.platform.getMaximumSize(o,t,e,a),r=i.devicePixelRatio||n.platform.getDevicePixelRatio();n.width=s.width,n.height=s.height,n._aspectRatio=n.aspectRatio,Hn(n,r,!0)&&(n.notifyPlugins("resize",{size:s}),ft(i.onResize,[n,s],n),n.attached&&n._doResize()&&n.render())}ensureScalesHaveIDs(){mt(this.options.scales||{},((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,n=e.scales,i=t.scales,o=Object.keys(i).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];n&&(a=a.concat(Object.keys(n).map((t=>{const e=n[t],i=No(t,e),o="r"===i,a="x"===i;return{options:e,dposition:o?"chartArea":a?"bottom":"left",dtype:o?"radialLinear":a?"category":"linear"}})))),mt(a,(n=>{const a=n.options,s=a.id,r=No(s,a),l=gt(a.type,n.dtype);void 0!==a.position&&Go(a.position,r)===Go(n.dposition)||(a.position=n.dposition),o[s]=!0;let c=null;if(s in i&&i[s].type===l)c=i[s];else{c=new(Fo.getScale(l))({id:s,type:l,ctx:t.ctx,chart:t}),i[c.id]=c}c.init(a,e)})),mt(o,((t,e)=>{t||delete i[e]})),mt(i,(e=>{oo.configure(t,e,e.options),oo.addBox(t,e)}))}_updateMetasets(){const t=this,e=t._metasets,n=t.data.datasets.length,i=e.length;if(e.sort(((t,e)=>t.index-e.index)),i>n){for(let e=n;e<i;++e)t._destroyDatasetMeta(e);e.splice(n,i-n)}t._sortedMetasets=e.slice(0).sort(Zo("order","index"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:n}}=t;e.length>n.length&&delete t._stacks,e.forEach(((e,i)=>{0===n.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(i)}))}buildOrUpdateControllers(){const t=this,e=[],n=t.data.datasets;let i,o;for(t._removeUnreferencedMetasets(),i=0,o=n.length;i<o;i++){const o=n[i];let a=t.getDatasetMeta(i);const s=o.type||t.config.type;if(a.type&&a.type!==s&&(t._destroyDatasetMeta(i),a=t.getDatasetMeta(i)),a.type=s,a.indexAxis=o.indexAxis||Bo(s,t.options),a.order=o.order||0,a.index=i,a.label=""+o.label,a.visible=t.isDatasetVisible(i),a.controller)a.controller.updateIndex(i),a.controller.linkScales();else{const n=Fo.getController(s),{datasetElementType:o,dataElementType:r}=Ne.datasets[s];Object.assign(n.prototype,{dataElementType:Fo.getElement(r),datasetElementType:o&&Fo.getElement(o)}),a.controller=new n(t,i),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;mt(t.data.datasets,((e,n)=>{t.getDatasetMeta(n).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(t){const e=this,n=e.config;n.update(),e._options=n.createResolver(n.chartOptionScopes(),e.getContext()),mt(e.scales,(t=>{oo.removeBox(e,t)}));const i=e._animationsDisabled=!e.options.animation;e.ensureScalesHaveIDs(),e.buildOrUpdateScales();if(((t,e)=>{if(t.size!==e.size)return!1;for(const n of t)if(!e.has(n))return!1;return!0})(new Set(Object.keys(e._listeners)),new Set(e.options.events))&&!!this._responsiveListeners===e.options.responsive||(e.unbindEvents(),e.bindEvents()),e._plugins.invalidate(),!1===e.notifyPlugins("beforeUpdate",{mode:t,cancelable:!0}))return;const o=e.buildOrUpdateControllers();e.notifyPlugins("beforeElementsUpdate");let a=0;for(let t=0,n=e.data.datasets.length;t<n;t++){const{controller:n}=e.getDatasetMeta(t),s=!i&&-1===o.indexOf(n);n.buildOrUpdateElements(s),a=Math.max(+n.getMaxOverflow(),a)}e._minPadding=a,e._updateLayout(a),i||mt(o,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins("afterUpdate",{mode:t}),e._layers.sort(Zo("z","_idx")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins("beforeLayout",{cancelable:!0}))return;oo.update(e,e.width,e.height,t);const n=e.chartArea,i=n.width<=0||n.height<=0;e._layers=[],mt(e.boxes,(t=>{i&&"chartArea"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins("afterLayout")}_updateDatasets(t){const e=this,n="function"==typeof t;if(!1!==e.notifyPlugins("beforeDatasetsUpdate",{mode:t,cancelable:!0})){for(let i=0,o=e.data.datasets.length;i<o;++i)e._updateDataset(i,n?t({datasetIndex:i}):t);e.notifyPlugins("afterDatasetsUpdate",{mode:t})}}_updateDataset(t,e){const n=this,i=n.getDatasetMeta(t),o={meta:i,index:t,mode:e,cancelable:!0};!1!==n.notifyPlugins("beforeDatasetUpdate",o)&&(i.controller._update(e),o.cancelable=!1,n.notifyPlugins("afterDatasetUpdate",o))}render(){const t=this;!1!==t.notifyPlugins("beforeRender",{cancelable:!0})&&(ri.has(t)?t.attached&&!ri.running(t)&&ri.start(t):(t.draw(),Jo({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:n}=t._resizeBeforeDraw;t._resize(e,n),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins("beforeDraw",{cancelable:!0}))return;const n=t._layers;for(e=0;e<n.length&&n[e].z<=0;++e)n[e].draw(t.chartArea);for(t._drawDatasets();e<n.length;++e)n[e].draw(t.chartArea);t.notifyPlugins("afterDraw")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,n=[];let i,o;for(i=0,o=e.length;i<o;++i){const o=e[i];t&&!o.visible||n.push(o)}return n}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins("beforeDatasetsDraw",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let n=e.length-1;n>=0;--n)t._drawDataset(e[n]);t.notifyPlugins("afterDatasetsDraw")}_drawDataset(t){const e=this,n=e.ctx,i=t._clip,o=e.chartArea,a={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins("beforeDatasetDraw",a)&&(Ke(n,{left:!1===i.left?0:o.left-i.left,right:!1===i.right?e.width:o.right+i.right,top:!1===i.top?0:o.top-i.top,bottom:!1===i.bottom?e.height:o.bottom+i.bottom}),t.controller.draw(),qe(n),a.cancelable=!1,e.notifyPlugins("afterDatasetDraw",a))}getElementsAtEventForMode(t,e,n,i){const o=Ki.modes[e];return"function"==typeof o?o(this,t,n,i):[]}getDatasetMeta(t){const e=this.data.datasets[t],n=this._metasets;let i=n.filter((t=>t&&t._dataset===e)).pop();return i||(i={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1},n.push(i)),i}getContext(){return this.$context||(this.$context={chart:this,type:"chart"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const n=this.getDatasetMeta(t);return"boolean"==typeof n.hidden?!n.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateDatasetVisibility(t,e){const n=this,i=e?"show":"hide",o=n.getDatasetMeta(t),a=o.controller._resolveAnimations(void 0,i);n.setDatasetVisibility(t,e),a.update(o,{visible:e}),n.update((e=>e.datasetIndex===t?i:void 0))}hide(t){this._updateDatasetVisibility(t,!1)}show(t){this._updateDatasetVisibility(t,!0)}_destroyDatasetMeta(t){const e=this,n=e._metasets&&e._metasets[t];n&&n.controller&&(n.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:n}=t;let i,o;for(t.stop(),ri.remove(t),i=0,o=t.data.datasets.length;i<o;++i)t._destroyDatasetMeta(i);t.config.clearCache(),e&&(t.unbindEvents(),$e(e,n),t.platform.releaseContext(n),t.canvas=null,t.ctx=null),t.notifyPlugins("destroy"),delete na[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this,e=t._listeners,n=t.platform,i=function(e,n,i){e.offsetX=n,e.offsetY=i,t._eventHandler(e)};mt(t.options.events,(o=>((i,o)=>{n.addEventListener(t,i,o),e[i]=o})(o,i)))}bindResponsiveEvents(){const t=this;t._responsiveListeners||(t._responsiveListeners={});const e=t._responsiveListeners,n=t.platform,i=(i,o)=>{n.addEventListener(t,i,o),e[i]=o},o=(i,o)=>{e[i]&&(n.removeEventListener(t,i,o),delete e[i])},a=(e,n)=>{t.canvas&&t.resize(e,n)};let s;const r=()=>{o("attach",r),t.attached=!0,t.resize(),i("resize",a),i("detach",s)};s=()=>{t.attached=!1,o("resize",a),i("attach",r)},n.isAttached(t.canvas)?r():s()}unbindEvents(){const t=this;mt(t._listeners,((e,n)=>{t.platform.removeEventListener(t,n,e)})),t._listeners={},mt(t._responsiveListeners,((e,n)=>{t.platform.removeEventListener(t,n,e)})),t._responsiveListeners=void 0}updateHoverStyle(t,e,n){const i=n?"set":"remove";let o,a,s,r;for("dataset"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller["_"+i+"DatasetHoverStyle"]()),s=0,r=t.length;s<r;++s){a=t[s];const e=a&&this.getDatasetMeta(a.datasetIndex).controller;e&&e[i+"HoverStyle"](a.element,a.datasetIndex,a.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,n=e._active||[],i=t.map((({datasetIndex:t,index:n})=>{const i=e.getDatasetMeta(t);if(!i)throw new Error("No dataset found at index "+t);return{datasetIndex:t,element:i.data[n],index:n}}));!xt(i,n)&&(e._active=i,e._updateHoverStyles(i,n))}notifyPlugins(t,e,n){return this._plugins.notify(this,t,e,n)}_updateHoverStyles(t,e,n){const i=this,o=i.options.hover,a=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),s=a(e,t),r=n?t:a(t,e);s.length&&i.updateHoverStyle(s,o.mode,!1),r.length&&o.mode&&i.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const n=this,i={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===n.notifyPlugins("beforeEvent",i,o))return;const a=n._handleEvent(t,e);return i.cancelable=!1,n.notifyPlugins("afterEvent",i,o),(a||i.changed)&&n.render(),n}_handleEvent(t,e){const n=this,{_active:i=[],options:o}=n,a=o.hover,s=e;let r=[],l=!1,c=null;return"mouseout"!==t.type&&(r=n.getElementsAtEventForMode(t,a.mode,a,s),c="click"===t.type?n._lastEvent:t),n._lastEvent=null,Ye(t,n.chartArea,n._minPadding)&&(ft(o.onHover,[t,r,n],n),"mouseup"!==t.type&&"click"!==t.type&&"contextmenu"!==t.type||ft(o.onClick,[t,r,n],n)),l=!xt(r,i),(l||e)&&(n._active=r,n._updateHoverStyles(r,i,e)),n._lastEvent=c,l}}const aa=()=>mt(oa.instances,(t=>t._plugins.invalidate())),sa=!0;function ra(t,e,n){const{startAngle:i,pixelMargin:o,x:a,y:s,outerRadius:r,innerRadius:l}=e;let c=o/r;t.beginPath(),t.arc(a,s,r,i-c,n+c),l>o?(c=o/l,t.arc(a,s,l,n+c,i-c,!0)):t.arc(a,s,o,n+It,i-It),t.closePath(),t.clip()}function la(t,e,n,i){const o=nn(t.options.borderRadius,["outerStart","outerEnd","innerStart","innerEnd"]);const a=(n-e)/2,s=Math.min(a,i*e/2),r=t=>{const e=(n-Math.min(a,t))*i/2;return Gt(t,0,Math.min(a,e))};return{outerStart:r(o.outerStart),outerEnd:r(o.outerEnd),innerStart:Gt(o.innerStart,0,s),innerEnd:Gt(o.innerEnd,0,s)}}function ca(t,e,n,i){return{x:n+t*Math.cos(e),y:i+t*Math.sin(e)}}function da(t,e,n,i){const{x:o,y:a,startAngle:s,pixelMargin:r,innerRadius:l}=e,c=Math.max(e.outerRadius+n-r,0),d=l>0?l+n+r:0,h=i-s,u=(h-Math.max(.001,h*c-n/Dt)/c)/2,g=s+u,p=i-u,{outerStart:f,outerEnd:m,innerStart:x,innerEnd:b}=la(e,d,c,p-g),y=c-f,_=c-m,v=g+f/y,M=p-m/_,w=d+x,C=d+b,k=g+x/w,S=p-b/C;if(t.beginPath(),t.arc(o,a,c,v,M),m>0){const e=ca(_,M,o,a);t.arc(e.x,e.y,m,M,p+It)}const P=ca(C,p,o,a);if(t.lineTo(P.x,P.y),b>0){const e=ca(C,S,o,a);t.arc(e.x,e.y,b,p+It,S+Math.PI)}if(t.arc(o,a,d,p-b/d,g+x/d,!0),x>0){const e=ca(w,k,o,a);t.arc(e.x,e.y,x,k+Math.PI,g-It)}const O=ca(y,g,o,a);if(t.lineTo(O.x,O.y),f>0){const e=ca(y,v,o,a);t.arc(e.x,e.y,f,g-It,v)}t.closePath()}function ha(t,e,n,i){const{options:o}=e,a="inner"===o.borderAlign;o.borderWidth&&(a?(t.lineWidth=2*o.borderWidth,t.lineJoin="round"):(t.lineWidth=o.borderWidth,t.lineJoin="bevel"),e.fullCircles&&function(t,e,n){const{x:i,y:o,startAngle:a,pixelMargin:s,fullCircles:r}=e,l=Math.max(e.outerRadius-s,0),c=e.innerRadius+s;let d;for(n&&ra(t,e,a+Et),t.beginPath(),t.arc(i,o,c,a+Et,a,!0),d=0;d<r;++d)t.stroke();for(t.beginPath(),t.arc(i,o,l,a,a+Et),d=0;d<r;++d)t.stroke()}(t,e,a),a&&ra(t,e,i),da(t,e,n,i),t.stroke())}Object.defineProperties(oa,{defaults:{enumerable:sa,value:Ne},instances:{enumerable:sa,value:na},overrides:{enumerable:sa,value:Re},registry:{enumerable:sa,value:Fo},version:{enumerable:sa,value:"3.3.2"},getChart:{enumerable:sa,value:ia},register:{enumerable:sa,value:(...t)=>{Fo.add(...t),aa()}},unregister:{enumerable:sa,value:(...t)=>{Fo.remove(...t),aa()}}});class ua extends Mo{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,n){const i=this.getProps(["x","y"],n),{angle:o,distance:a}=function(t,e){const n=e.x-t.x,i=e.y-t.y,o=Math.sqrt(n*n+i*i);let a=Math.atan2(i,n);return a<-.5*Dt&&(a+=Et),{angle:a,distance:o}}(i,{x:t,y:e}),{startAngle:s,endAngle:r,innerRadius:l,outerRadius:c,circumference:d}=this.getProps(["startAngle","endAngle","innerRadius","outerRadius","circumference"],n);return(d>=Et||Xt(o,s,r))&&(a>=l&&a<=c)}getCenterPoint(t){const{x:e,y:n,startAngle:i,endAngle:o,innerRadius:a,outerRadius:s}=this.getProps(["x","y","startAngle","endAngle","innerRadius","outerRadius","circumference"],t),r=(i+o)/2,l=(a+s)/2;return{x:e+Math.cos(r)*l,y:n+Math.sin(r)*l}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,{options:n,circumference:i}=e,o=(n.offset||0)/2;if(e.pixelMargin="inner"===n.borderAlign?.33:0,e.fullCircles=i>Et?Math.floor(i/Et):0,0===i||e.innerRadius<0||e.outerRadius<0)return;t.save();let a=0;if(o){a=o/2;const n=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(n)*a,Math.sin(n)*a),e.circumference>=Dt&&(a=o)}t.fillStyle=n.backgroundColor,t.strokeStyle=n.borderColor;const s=function(t,e,n){const{fullCircles:i,startAngle:o,circumference:a}=e;let s=e.endAngle;if(i){da(t,e,n,o+Et);for(let e=0;e<i;++e)t.fill();isNaN(a)||(s=o+a%Et,a%Et==0&&(s+=Et))}return da(t,e,n,s),t.fill(),s}(t,e,a);ha(t,e,a,s),t.restore()}}function ga(t,e,n=e){t.lineCap=gt(n.borderCapStyle,e.borderCapStyle),t.setLineDash(gt(n.borderDash,e.borderDash)),t.lineDashOffset=gt(n.borderDashOffset,e.borderDashOffset),t.lineJoin=gt(n.borderJoinStyle,e.borderJoinStyle),t.lineWidth=gt(n.borderWidth,e.borderWidth),t.strokeStyle=gt(n.borderColor,e.borderColor)}function pa(t,e,n){t.lineTo(n.x,n.y)}function fa(t,e,n={}){const i=t.length,{start:o=0,end:a=i-1}=n,{start:s,end:r}=e,l=Math.max(o,s),c=Math.min(a,r),d=o<s&&a<s||o>r&&a>r;return{count:i,start:l,loop:e.loop,ilen:c<l&&!d?i+c-l:c-l}}function ma(t,e,n,i){const{points:o,options:a}=e,{count:s,start:r,loop:l,ilen:c}=fa(o,n,i),d=function(t){return t.stepped?Xe:t.tension||"monotone"===t.cubicInterpolationMode?Ge:pa}(a);let h,u,g,{move:p=!0,reverse:f}=i||{};for(h=0;h<=c;++h)u=o[(r+(f?c-h:h))%s],u.skip||(p?(t.moveTo(u.x,u.y),p=!1):d(t,g,u,f,a.stepped),g=u);return l&&(u=o[(r+(f?c:0))%s],d(t,g,u,f,a.stepped)),!!l}function xa(t,e,n,i){const o=e.points,{count:a,start:s,ilen:r}=fa(o,n,i),{move:l=!0,reverse:c}=i||{};let d,h,u,g,p,f,m=0,x=0;const b=t=>(s+(c?r-t:t))%a,y=()=>{g!==p&&(t.lineTo(m,p),t.lineTo(m,g),t.lineTo(m,f))};for(l&&(h=o[b(0)],t.moveTo(h.x,h.y)),d=0;d<=r;++d){if(h=o[b(d)],h.skip)continue;const e=h.x,n=h.y,i=0|e;i===u?(n<g?g=n:n>p&&(p=n),m=(x*m+e)/++x):(y(),t.lineTo(e,n),u=i,x=0,g=p=n),f=n}y()}function ba(t){const e=t.options,n=e.borderDash&&e.borderDash.length;return!(t._decimated||t._loop||e.tension||"monotone"===e.cubicInterpolationMode||e.stepped||n)?xa:ma}ua.id="arc",ua.defaults={borderAlign:"center",borderColor:"#fff",borderRadius:0,borderWidth:2,offset:0,angle:void 0},ua.defaultRoutes={backgroundColor:"backgroundColor"};const ya="function"==typeof Path2D;function _a(t,e,n,i){ya&&1===e.segments.length?function(t,e,n,i){let o=e._path;o||(o=e._path=new Path2D,e.path(o,n,i)&&o.closePath()),ga(t,e.options),t.stroke(o)}(t,e,n,i):function(t,e,n,i){const{segments:o,options:a}=e,s=ba(e);for(const r of o)ga(t,a,r.style),t.beginPath(),s(t,e,r,{start:n,end:n+i-1})&&t.closePath(),t.stroke()}(t,e,n,i)}class va extends Mo{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,t&&Object.assign(this,t)}updateControlPoints(t,e){const n=this,i=n.options;if((i.tension||"monotone"===i.cubicInterpolationMode)&&!i.stepped&&!n._pointsUpdated){const o=i.spanGaps?n._loop:n._fullLoop;In(n._points,i,t,o,e),n._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=function(t,e){const n=t.points,i=t.options.spanGaps,o=n.length;if(!o)return[];const a=!!t._loop,{start:s,end:r}=function(t,e,n,i){let o=0,a=e-1;if(n&&!i)for(;o<e&&!t[o].skip;)o++;for(;o<e&&t[o].skip;)o++;for(o%=e,n&&(a+=o);a>o&&t[a%e].skip;)a--;return a%=e,{start:o,end:a}}(n,o,a,i);return oi(!0===i?[{start:s,end:r,loop:a}]:function(t,e,n,i){const o=t.length,a=[];let s,r=e,l=t[e];for(s=e+1;s<=n;++s){const n=t[s%o];n.skip||n.stop?l.skip||(i=!1,a.push({start:e%o,end:(s-1)%o,loop:i}),e=r=n.stop?s:null):(r=s,l.skip&&(e=s)),l=n}return null!==r&&a.push({start:e%o,end:r%o,loop:i}),a}(n,s,r<s?r+o:r,!!t._fullLoop&&0===s&&r===o-1),n,e)}(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,n=t.length;return n&&e[t[n-1].end]}interpolate(t,e){const n=this,i=n.options,o=t[e],a=n.points,s=ii(n,{property:e,start:o,end:o});if(!s.length)return;const r=[],l=function(t){return t.stepped?Kn:t.tension||"monotone"===t.cubicInterpolationMode?qn:Yn}(i);let c,d;for(c=0,d=s.length;c<d;++c){const{start:n,end:d}=s[c],h=a[n],u=a[d];if(h===u){r.push(h);continue}const g=l(h,u,Math.abs((o-h[e])/(u[e]-h[e])),i.stepped);g[e]=t[e],r.push(g)}return 1===r.length?r[0]:r}pathSegment(t,e,n){return ba(this)(t,this,e,n)}path(t,e,n){const i=this,o=i.segments,a=ba(i);let s=i._loop;e=e||0,n=n||i.points.length-e;for(const r of o)s&=a(t,i,r,{start:e,end:e+n-1});return!!s}draw(t,e,n,i){const o=this,a=o.options||{};(o.points||[]).length&&a.borderWidth&&(t.save(),_a(t,o,n,i),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function Ma(t,e,n,i){const o=t.options,{[n]:a}=t.getProps([n],i);return Math.abs(e-a)<o.radius+o.hitRadius}va.id="line",va.defaults={borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:"default",fill:!1,spanGaps:!1,stepped:!1,tension:0},va.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"},va.descriptors={_scriptable:!0,_indexable:t=>"borderDash"!==t&&"fill"!==t};class wa extends Mo{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,n){const i=this.options,{x:o,y:a}=this.getProps(["x","y"],n);return Math.pow(t-o,2)+Math.pow(e-a,2)<Math.pow(i.hitRadius+i.radius,2)}inXRange(t,e){return Ma(this,t,"x",e)}inYRange(t,e){return Ma(this,t,"y",e)}getCenterPoint(t){const{x:e,y:n}=this.getProps(["x","y"],t);return{x:e,y:n}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t){const e=this,n=e.options;e.skip||n.radius<.1||(t.strokeStyle=n.borderColor,t.lineWidth=n.borderWidth,t.fillStyle=n.backgroundColor,Ue(t,n,e.x,e.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function Ca(t,e){const{x:n,y:i,base:o,width:a,height:s}=t.getProps(["x","y","base","width","height"],e);let r,l,c,d,h;return t.horizontal?(h=s/2,r=Math.min(n,o),l=Math.max(n,o),c=i-h,d=i+h):(h=a/2,r=n-h,l=n+h,c=Math.min(i,o),d=Math.max(i,o)),{left:r,top:c,right:l,bottom:d}}function ka(t){let e=t.options.borderSkipped;const n={};return e?(e=t.horizontal?Sa(e,"left","right",t.base>t.x):Sa(e,"bottom","top",t.base<t.y),n[e]=!0,n):n}function Sa(t,e,n,i){var o,a,s;return i?(s=n,t=Pa(t=(o=t)===(a=e)?s:o===s?a:o,n,e)):t=Pa(t,e,n),t}function Pa(t,e,n){return"start"===t?e:"end"===t?n:t}function Oa(t,e,n,i){return t?0:Math.max(Math.min(e,i),n)}function Da(t){const e=Ca(t),n=e.right-e.left,i=e.bottom-e.top,o=function(t,e,n){const i=t.options.borderWidth,o=ka(t),a=on(i);return{t:Oa(o.top,a.top,0,n),r:Oa(o.right,a.right,0,e),b:Oa(o.bottom,a.bottom,0,n),l:Oa(o.left,a.left,0,e)}}(t,n/2,i/2),a=function(t,e,n){const{enableBorderRadius:i}=t.getProps(["enableBorderRadius"]),o=t.options.borderRadius,a=an(o),s=Math.min(e,n),r=ka(t),l=i||dt(o);return{topLeft:Oa(!l||r.top||r.left,a.topLeft,0,s),topRight:Oa(!l||r.top||r.right,a.topRight,0,s),bottomLeft:Oa(!l||r.bottom||r.left,a.bottomLeft,0,s),bottomRight:Oa(!l||r.bottom||r.right,a.bottomRight,0,s)}}(t,n/2,i/2);return{outer:{x:e.left,y:e.top,w:n,h:i,radius:a},inner:{x:e.left+o.l,y:e.top+o.t,w:n-o.l-o.r,h:i-o.t-o.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(o.t,o.l)),topRight:Math.max(0,a.topRight-Math.max(o.t,o.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(o.b,o.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(o.b,o.r))}}}}function Ea(t,e,n,i){const o=null===e,a=null===n,s=t&&!(o&&a)&&Ca(t,i);return s&&(o||e>=s.left&&e<=s.right)&&(a||n>=s.top&&n<=s.bottom)}function Ta(t,e){t.rect(e.x,e.y,e.w,e.h)}wa.id="point",wa.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:"circle",radius:3,rotation:0},wa.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};class Aa extends Mo{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:n,outer:i}=Da(this),o=(a=i.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?Je:Ta;var a;t.save(),i.w===n.w&&i.h===n.h||(t.beginPath(),o(t,i),t.clip(),o(t,n),t.fillStyle=e.borderColor,t.fill("evenodd")),t.beginPath(),o(t,n),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,n){return Ea(this,t,e,n)}inXRange(t,e){return Ea(this,t,null,e)}inYRange(t,e){return Ea(this,null,t,e)}getCenterPoint(t){const{x:e,y:n,base:i,horizontal:o}=this.getProps(["x","y","base","horizontal"],t);return{x:o?(e+i)/2:e,y:o?n:(n+i)/2}}getRange(t){return"x"===t?this.width/2:this.height/2}}Aa.id="bar",Aa.defaults={borderSkipped:"start",borderWidth:0,borderRadius:0,enableBorderRadius:!0,pointStyle:void 0},Aa.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};var La=Object.freeze({__proto__:null,ArcElement:ua,LineElement:va,PointElement:wa,BarElement:Aa});function Ia(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,"data",{value:e})}}function Fa(t){t.data.datasets.forEach((t=>{Ia(t)}))}var Ra={id:"decimation",defaults:{algorithm:"min-max",enabled:!1},beforeElementsUpdate:(t,e,n)=>{if(!n.enabled)return void Fa(t);const i=t.width;t.data.datasets.forEach(((e,o)=>{const{_data:a,indexAxis:s}=e,r=t.getDatasetMeta(o),l=a||e.data;if("y"===ln([s,t.options.indexAxis]))return;if("line"!==r.type)return;const c=t.scales[r.xAxisID];if("linear"!==c.type&&"time"!==c.type)return;if(t.options.parsing)return;let d,{start:h,count:u}=function(t,e){const n=e.length;let i,o=0;const{iScale:a}=t,{min:s,max:r,minDefined:l,maxDefined:c}=a.getUserBounds();return l&&(o=Gt(dn(e,a.axis,s).lo,0,n-1)),i=c?Gt(dn(e,a.axis,r).hi+1,o,n)-o:n-o,{start:o,count:i}}(r,l);if(u<=4*i)Ia(e);else{switch(lt(a)&&(e._data=l,delete e.data,Object.defineProperty(e,"data",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),n.algorithm){case"lttb":d=function(t,e,n,i,o){const a=o.samples||i;if(a>=n)return t.slice(e,e+n);const s=[],r=(n-2)/(a-2);let l=0;const c=e+n-1;let d,h,u,g,p,f=e;for(s[l++]=t[f],d=0;d<a-2;d++){let i,o=0,a=0;const c=Math.floor((d+1)*r)+1+e,m=Math.min(Math.floor((d+2)*r)+1,n)+e,x=m-c;for(i=c;i<m;i++)o+=t[i].x,a+=t[i].y;o/=x,a/=x;const b=Math.floor(d*r)+1+e,y=Math.floor((d+1)*r)+1+e,{x:_,y:v}=t[f];for(u=g=-1,i=b;i<y;i++)g=.5*Math.abs((_-o)*(t[i].y-v)-(_-t[i].x)*(a-v)),g>u&&(u=g,h=t[i],p=i);s[l++]=h,f=p}return s[l++]=t[c],s}(l,h,u,i,n);break;case"min-max":d=function(t,e,n,i){let o,a,s,r,l,c,d,h,u,g,p=0,f=0;const m=[],x=e+n-1,b=t[e].x,y=t[x].x-b;for(o=e;o<e+n;++o){a=t[o],s=(a.x-b)/y*i,r=a.y;const e=0|s;if(e===l)r<u?(u=r,c=o):r>g&&(g=r,d=o),p=(f*p+a.x)/++f;else{const n=o-1;if(!lt(c)&&!lt(d)){const e=Math.min(c,d),i=Math.max(c,d);e!==h&&e!==n&&m.push({...t[e],x:p}),i!==h&&i!==n&&m.push({...t[i],x:p})}o>0&&n!==h&&m.push(t[n]),m.push(a),l=e,f=0,u=g=r,c=d=h=o}}return m}(l,h,u,i);break;default:throw new Error(`Unsupported decimation algorithm '${n.algorithm}'`)}e._decimated=d}}))},destroy(t){Fa(t)}};function za(t,e,n){const i=function(t){const e=t.options,n=e.fill;let i=gt(n&&n.target,n);return void 0===i&&(i=!!e.backgroundColor),!1!==i&&null!==i&&(!0===i?"origin":i)}(t);if(dt(i))return!isNaN(i.value)&&i;let o=parseFloat(i);return ht(o)&&Math.floor(o)===o?("-"!==i[0]&&"+"!==i[0]||(o=e+o),!(o===e||o<0||o>=n)&&o):["origin","start","end","stack"].indexOf(i)>=0&&i}class Va{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,n){const{x:i,y:o,radius:a}=this;return e=e||{start:0,end:Et},t.arc(i,o,a,e.end,e.start,!0),!n.bounds}interpolate(t){const{x:e,y:n,radius:i}=this,o=t.angle;return{x:e+Math.cos(o)*i,y:n+Math.sin(o)*i,angle:o}}}function Ba(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:n}=t,i=e.options,o=e.getLabels().length,a=[],s=i.reverse?e.max:e.min,r=i.reverse?e.min:e.max;let l,c,d;if(d="start"===n?s:"end"===n?r:dt(n)?n.value:e.getBaseValue(),i.grid.circular)return c=e.getPointPositionForValue(0,s),new Va({x:c.x,y:c.y,radius:e.getDistanceFromCenterForValue(d)});for(l=0;l<o;++l)a.push(e.getPointPositionForValue(l,d));return a}(t):function(t){const{scale:e={},fill:n}=t;let i,o=null;return"start"===n?o=e.bottom:"end"===n?o=e.top:dt(n)?o=e.getPixelForValue(n.value):e.getBasePixel&&(o=e.getBasePixel()),ht(o)?(i=e.isHorizontal(),{x:i?o:null,y:i?null:o}):null}(t)}function Na(t){const{chart:e,scale:n,index:i,line:o}=t,a=[],s=o.segments,r=o.points,l=function(t,e){const n=[],i=t.getSortedVisibleDatasetMetas();for(let t=0;t<i.length;t++){const o=i[t];if(o.index===e)break;Wa(o)&&n.unshift(o.dataset)}return n}(e,i);l.push($a({x:null,y:n.bottom},o));for(let t=0;t<s.length;t++){const e=s[t];for(let t=e.start;t<=e.end;t++)ja(a,r[t],l)}return new va({points:a,options:{}})}const Wa=t=>"line"===t.type&&!t.hidden;function ja(t,e,n){const i=[];for(let o=0;o<n.length;o++){const a=n[o],{first:s,last:r,point:l}=Ha(a,e,"x");if(!(!l||s&&r))if(s)i.unshift(l);else if(t.push(l),!r)break}t.push(...i)}function Ha(t,e,n){const i=t.interpolate(e,n);if(!i)return{};const o=i[n],a=t.segments,s=t.points;let r=!1,l=!1;for(let t=0;t<a.length;t++){const e=a[t],i=s[e.start][n],c=s[e.end][n];if(o>=i&&o<=c){r=o===i,l=o===c;break}}return{first:r,last:l,point:i}}function $a(t,e){let n=[],i=!1;return ct(t)?(i=!0,n=t):n=function(t,e){const{x:n=null,y:i=null}=t||{},o=e.points,a=[];return e.segments.forEach((t=>{const e=o[t.start],s=o[t.end];null!==i?(a.push({x:e.x,y:i}),a.push({x:s.x,y:i})):null!==n&&(a.push({x:n,y:e.y}),a.push({x:n,y:s.y}))})),a}(t,e),n.length?new va({points:n,options:{tension:0},_loop:i,_fullLoop:i}):null}function Ua(t,e,n){let i=t[e].fill;const o=[e];let a;if(!n)return i;for(;!1!==i&&-1===o.indexOf(i);){if(!ht(i))return i;if(a=t[i],!a)return!1;if(a.visible)return i;o.push(i),i=a.fill}return!1}function Ya(t,e,n){t.beginPath(),e.path(t),t.lineTo(e.last().x,n),t.lineTo(e.first().x,n),t.closePath(),t.clip()}function Ka(t,e,n,i){if(i)return;let o=e[t],a=n[t];return"angle"===t&&(o=qt(o),a=qt(a)),{property:t,start:o,end:a}}function qa(t,e,n,i){return t&&e?i(t[n],e[n]):t?t[n]:e?e[n]:0}function Xa(t,e,n){const{top:i,bottom:o}=e.chart.chartArea,{property:a,start:s,end:r}=n||{};"x"===a&&(t.beginPath(),t.rect(s,i,r-s,o-i),t.clip())}function Ga(t,e,n,i){const o=e.interpolate(n,i);o&&t.lineTo(o.x,o.y)}function Za(t,e){const{line:n,target:i,property:o,color:a,scale:s}=e,r=function(t,e,n){const i=t.segments,o=t.points,a=e.points,s=[];for(const t of i){const i=Ka(n,o[t.start],o[t.end],t.loop);if(!e.segments){s.push({source:t,target:i,start:o[t.start],end:o[t.end]});continue}const r=ii(e,i);for(const e of r){const r=Ka(n,a[e.start],a[e.end],e.loop),l=ni(t,o,r);for(const t of l)s.push({source:t,target:e,start:{[n]:qa(i,r,"start",Math.max)},end:{[n]:qa(i,r,"end",Math.min)}})}}return s}(n,i,o);for(const{source:e,target:l,start:c,end:d}of r){const{style:{backgroundColor:r=a}={}}=e;t.save(),t.fillStyle=r,Xa(t,s,Ka(o,c,d)),t.beginPath();const h=!!n.pathSegment(t,e);h?t.closePath():Ga(t,i,d,o);const u=!!i.pathSegment(t,l,{move:h,reverse:!0}),g=h&&u;g||Ga(t,i,c,o),t.closePath(),t.fill(g?"evenodd":"nonzero"),t.restore()}}function Ja(t,e,n){const i=function(t){const{chart:e,fill:n,line:i}=t;if(ht(n))return function(t,e){const n=t.getDatasetMeta(e);return n&&t.isDatasetVisible(e)?n.dataset:null}(e,n);if("stack"===n)return Na(t);const o=Ba(t);return o instanceof Va?o:$a(o,i)}(e),{line:o,scale:a,axis:s}=e,r=o.options,l=r.fill,c=r.backgroundColor,{above:d=c,below:h=c}=l||{};i&&o.points.length&&(Ke(t,n),function(t,e){const{line:n,target:i,above:o,below:a,area:s,scale:r}=e,l=n._loop?"angle":e.axis;t.save(),"x"===l&&a!==o&&(Ya(t,i,s.top),Za(t,{line:n,target:i,color:o,scale:r,property:l}),t.restore(),t.save(),Ya(t,i,s.bottom)),Za(t,{line:n,target:i,color:a,scale:r,property:l}),t.restore()}(t,{line:o,target:i,above:d,below:h,area:n,scale:a,axis:s}),qe(t))}var Qa={id:"filler",afterDatasetsUpdate(t,e,n){const i=(t.data.datasets||[]).length,o=[];let a,s,r,l;for(s=0;s<i;++s)a=t.getDatasetMeta(s),r=a.dataset,l=null,r&&r.options&&r instanceof va&&(l={visible:t.isDatasetVisible(s),index:s,fill:za(r,s,i),chart:t,axis:a.controller.options.indexAxis,scale:a.vScale,line:r}),a.$filler=l,o.push(l);for(s=0;s<i;++s)l=o[s],l&&!1!==l.fill&&(l.fill=Ua(o,s,n.propagate))},beforeDraw(t,e,n){const i="beforeDraw"===n.drawTime,o=t.getSortedVisibleDatasetMetas(),a=t.chartArea;for(let e=o.length-1;e>=0;--e){const n=o[e].$filler;n&&(n.line.updateControlPoints(a,n.axis),i&&Ja(t.ctx,n,a))}},beforeDatasetsDraw(t,e,n){if("beforeDatasetsDraw"!==n.drawTime)return;const i=t.getSortedVisibleDatasetMetas();for(let e=i.length-1;e>=0;--e){const n=i[e].$filler;n&&Ja(t.ctx,n,t.chartArea)}},beforeDatasetDraw(t,e,n){const i=e.meta.$filler;i&&!1!==i.fill&&"beforeDatasetDraw"===n.drawTime&&Ja(t.ctx,i,t.chartArea)},defaults:{propagate:!0,drawTime:"beforeDatasetDraw"}};const ts=(t,e)=>{let{boxHeight:n=e,boxWidth:i=e}=t;return t.usePointStyle&&(n=Math.min(n,e),i=Math.min(i,e)),{boxWidth:i,boxHeight:n,itemHeight:Math.max(e,n)}};class es extends Mo{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,n){const i=this;i.maxWidth=t,i.maxHeight=e,i._margins=n,i.setDimensions(),i.buildLabels(),i.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let n=ft(e.generateLabels,[t.chart],t)||[];e.filter&&(n=n.filter((n=>e.filter(n,t.chart.data)))),e.sort&&(n=n.sort(((n,i)=>e.sort(n,i,t.chart.data)))),t.options.reverse&&n.reverse(),t.legendItems=n}fit(){const t=this,{options:e,ctx:n}=t;if(!e.display)return void(t.width=t.height=0);const i=e.labels,o=rn(i.font),a=o.size,s=t._computeTitleHeight(),{boxWidth:r,itemHeight:l}=ts(i,a);let c,d;n.font=o.string,t.isHorizontal()?(c=t.maxWidth,d=t._fitRows(s,a,r,l)+10):(d=t.maxHeight,c=t._fitCols(s,a,r,l)+10),t.width=Math.min(c,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,n,i){const o=this,{ctx:a,maxWidth:s,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],d=i+r;let h=t;a.textAlign="left",a.textBaseline="middle";let u=-1,g=-d;return o.legendItems.forEach(((t,o)=>{const p=n+e/2+a.measureText(t.text).width;(0===o||c[c.length-1]+p+2*r>s)&&(h+=d,c[c.length-(o>0?0:1)]=0,g+=d,u++),l[o]={left:0,top:g,row:u,width:p,height:i},c[c.length-1]+=p+r})),h}_fitCols(t,e,n,i){const o=this,{ctx:a,maxHeight:s,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],d=s-t;let h=r,u=0,g=0,p=0,f=0,m=0;return o.legendItems.forEach(((t,o)=>{const s=n+e/2+a.measureText(t.text).width;o>0&&g+e+2*r>d&&(h+=u+r,c.push({width:u,height:g}),p+=u+r,m++,f=0,u=g=0),u=Math.max(u,s),g+=e+r,l[o]={left:p,top:f,col:m,width:s,height:i},f+=i+r})),h+=u,c.push({width:u,height:g}),h}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:n,options:{align:i,labels:{padding:o}}}=t;if(this.isHorizontal()){let a=0,s=at(i,t.left+o,t.right-t.lineWidths[a]);for(const r of n)a!==r.row&&(a=r.row,s=at(i,t.left+o,t.right-t.lineWidths[a])),r.top+=t.top+e+o,r.left=s,s+=r.width+o}else{let a=0,s=at(i,t.top+e+o,t.bottom-t.columnSizes[a].height);for(const r of n)r.col!==a&&(a=r.col,s=at(i,t.top+e+o,t.bottom-t.columnSizes[a].height)),r.top=s,r.left+=t.left+o,s+=r.height+o}}isHorizontal(){return"top"===this.options.position||"bottom"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Ke(e,t),t._draw(),qe(e)}}_draw(){const t=this,{options:e,columnSizes:n,lineWidths:i,ctx:o}=t,{align:a,labels:s}=e,r=Ne.color,l=Zn(e.rtl,t.left,t.width),c=rn(s.font),{color:d,padding:h}=s,u=c.size,g=u/2;let p;t.drawTitle(),o.textAlign=l.textAlign("left"),o.textBaseline="middle",o.lineWidth=.5,o.font=c.string;const{boxWidth:f,boxHeight:m,itemHeight:x}=ts(s,u),b=t.isHorizontal(),y=this._computeTitleHeight();p=b?{x:at(a,t.left+h,t.right-i[0]),y:t.top+h+y,line:0}:{x:t.left+h,y:at(a,t.top+y+h,t.bottom-n[0].height),line:0},Jn(t.ctx,e.textDirection);const _=x+h;t.legendItems.forEach(((e,v)=>{o.strokeStyle=e.fontColor||d,o.fillStyle=e.fontColor||d;const M=o.measureText(e.text).width,w=l.textAlign(e.textAlign||(e.textAlign=s.textAlign)),C=f+u/2+M;let k=p.x,S=p.y;l.setWidth(t.width),b?v>0&&k+C+h>t.right&&(S=p.y+=_,p.line++,k=p.x=at(a,t.left+h,t.right-i[p.line])):v>0&&S+_>t.bottom&&(k=p.x=k+n[p.line].width+h,p.line++,S=p.y=at(a,t.top+y+h,t.bottom-n[p.line].height));!function(t,e,n){if(isNaN(f)||f<=0||isNaN(m)||m<0)return;o.save();const i=gt(n.lineWidth,1);if(o.fillStyle=gt(n.fillStyle,r),o.lineCap=gt(n.lineCap,"butt"),o.lineDashOffset=gt(n.lineDashOffset,0),o.lineJoin=gt(n.lineJoin,"miter"),o.lineWidth=i,o.strokeStyle=gt(n.strokeStyle,r),o.setLineDash(gt(n.lineDash,[])),s.usePointStyle){const a={radius:f*Math.SQRT2/2,pointStyle:n.pointStyle,rotation:n.rotation,borderWidth:i},s=l.xPlus(t,f/2);Ue(o,a,s,e+g)}else{const a=e+Math.max((u-m)/2,0),s=l.leftForLtr(t,f),r=an(n.borderRadius);o.beginPath(),Object.values(r).some((t=>0!==t))?Je(o,{x:s,y:a,w:f,h:m,radius:r}):o.rect(s,a,f,m),o.fill(),0!==i&&o.stroke()}o.restore()}(l.x(k),S,e),k=((t,e,n)=>"right"===t?n:"center"===t?(e+n)/2:e)(w,k+f+g,t.right),function(t,e,n){Ze(o,n.text,t,e+x/2,c,{strikethrough:n.hidden,textAlign:n.textAlign})}(l.x(k),S,e),b?p.x+=C+h:p.y+=_})),Qn(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,n=e.title,i=rn(n.font),o=sn(n.padding);if(!n.display)return;const a=Zn(e.rtl,t.left,t.width),s=t.ctx,r=n.position,l=i.size/2,c=o.top+l;let d,h=t.left,u=t.width;if(this.isHorizontal())u=Math.max(...t.lineWidths),d=t.top+c,h=at(e.align,h,t.right-u);else{const n=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=c+at(e.align,t.top,t.bottom-n-e.labels.padding-t._computeTitleHeight())}const g=at(r,h,h+u);s.textAlign=a.textAlign(ot(r)),s.textBaseline="middle",s.strokeStyle=n.color,s.fillStyle=n.color,s.font=i.string,Ze(s,n.text,g,d,i)}_computeTitleHeight(){const t=this.options.title,e=rn(t.font),n=sn(t.padding);return t.display?e.lineHeight+n.height:0}_getLegendItemAt(t,e){const n=this;let i,o,a;if(t>=n.left&&t<=n.right&&e>=n.top&&e<=n.bottom)for(a=n.legendHitBoxes,i=0;i<a.length;++i)if(o=a[i],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return n.legendItems[i];return null}handleEvent(t){const e=this,n=e.options;if(!function(t,e){if("mousemove"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&("click"===t||"mouseup"===t))return!0;return!1}(t.type,n))return;const i=e._getLegendItemAt(t.x,t.y);if("mousemove"===t.type){const s=e._hoveredItem,r=(a=i,null!==(o=s)&&null!==a&&o.datasetIndex===a.datasetIndex&&o.index===a.index);s&&!r&&ft(n.onLeave,[t,s,e],e),e._hoveredItem=i,i&&!r&&ft(n.onHover,[t,i,e],e)}else i&&ft(n.onClick,[t,i,e],e);var o,a}}var ns={id:"legend",_element:es,start(t,e,n){const i=t.legend=new es({ctx:t.ctx,options:n,chart:t});oo.configure(t,i,n),oo.addBox(t,i)},stop(t){oo.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,n){const i=t.legend;oo.configure(t,i,n),i.options=n},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,n){const i=e.datasetIndex,o=n.chart;o.isDatasetVisible(i)?(o.hide(i),e.hidden=!0):(o.show(i),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:n,pointStyle:i,textAlign:o,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const s=t.controller.getStyle(n?0:void 0),r=sn(s.borderWidth);return{text:e[t.index].label,fillStyle:s.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:s.borderCapStyle,lineDash:s.borderDash,lineDashOffset:s.borderDashOffset,lineJoin:s.borderJoinStyle,lineWidth:(r.width+r.height)/4,strokeStyle:s.borderColor,pointStyle:i||s.pointStyle,rotation:s.rotation,textAlign:o||s.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:t=>!t.startsWith("on"),labels:{_scriptable:t=>!["generateLabels","filter","sort"].includes(t)}}};class is extends Mo{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const n=this,i=n.options;if(n.left=0,n.top=0,!i.display)return void(n.width=n.height=n.right=n.bottom=0);n.width=n.right=t,n.height=n.bottom=e;const o=ct(i.text)?i.text.length:1;n._padding=sn(i.padding);const a=o*rn(i.font).lineHeight+n._padding.height;n.isHorizontal()?n.height=a:n.width=a}isHorizontal(){const t=this.options.position;return"top"===t||"bottom"===t}_drawArgs(t){const{top:e,left:n,bottom:i,right:o,options:a}=this,s=a.align;let r,l,c,d=0;return this.isHorizontal()?(l=at(s,n,o),c=e+t,r=o-n):("left"===a.position?(l=n+t,c=at(s,i,e),d=-.5*Dt):(l=o-t,c=at(s,e,i),d=.5*Dt),r=i-e),{titleX:l,titleY:c,maxWidth:r,rotation:d}}draw(){const t=this,e=t.ctx,n=t.options;if(!n.display)return;const i=rn(n.font),o=i.lineHeight/2+t._padding.top,{titleX:a,titleY:s,maxWidth:r,rotation:l}=t._drawArgs(o);Ze(e,n.text,0,0,i,{color:n.color,maxWidth:r,rotation:l,textAlign:ot(n.align),textBaseline:"middle",translation:[a,s]})}}var os={id:"title",_element:is,start(t,e,n){!function(t,e){const n=new is({ctx:t.ctx,options:e,chart:t});oo.configure(t,n,e),oo.addBox(t,n),t.titleBlock=n}(t,n)},stop(t){const e=t.titleBlock;oo.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,n){const i=t.titleBlock;oo.configure(t,i,n),i.options=n},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const as={average(t){if(!t.length)return!1;let e,n,i=0,o=0,a=0;for(e=0,n=t.length;e<n;++e){const n=t[e].element;if(n&&n.hasValue()){const t=n.tooltipPosition();i+=t.x,o+=t.y,++a}}return{x:i/a,y:o/a}},nearest(t,e){if(!t.length)return!1;let n,i,o,a=e.x,s=e.y,r=Number.POSITIVE_INFINITY;for(n=0,i=t.length;n<i;++n){const i=t[n].element;if(i&&i.hasValue()){const t=Yt(e,i.getCenterPoint());t<r&&(r=t,o=i)}}if(o){const t=o.tooltipPosition();a=t.x,s=t.y}return{x:a,y:s}}};function ss(t,e){return e&&(ct(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function rs(t){return("string"==typeof t||t instanceof String)&&t.indexOf("\n")>-1?t.split("\n"):t}function ls(t,e){const{element:n,datasetIndex:i,index:o}=e,a=t.getDatasetMeta(i).controller,{label:s,value:r}=a.getLabelAndValue(o);return{chart:t,label:s,parsed:a.getParsed(o),raw:t.data.datasets[i].data[o],formattedValue:r,dataset:a.getDataset(),dataIndex:o,datasetIndex:i,element:n}}function cs(t,e){const n=t._chart.ctx,{body:i,footer:o,title:a}=t,{boxWidth:s,boxHeight:r}=e,l=rn(e.bodyFont),c=rn(e.titleFont),d=rn(e.footerFont),h=a.length,u=o.length,g=i.length,p=sn(e.padding);let f=p.height,m=0,x=i.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,h&&(f+=h*c.lineHeight+(h-1)*e.titleSpacing+e.titleMarginBottom),x){f+=g*(e.displayColors?Math.max(r,l.lineHeight):l.lineHeight)+(x-g)*l.lineHeight+(x-1)*e.bodySpacing}u&&(f+=e.footerMarginTop+u*d.lineHeight+(u-1)*e.footerSpacing);let b=0;const y=function(t){m=Math.max(m,n.measureText(t).width+b)};return n.save(),n.font=c.string,mt(t.title,y),n.font=l.string,mt(t.beforeBody.concat(t.afterBody),y),b=e.displayColors?s+2:0,mt(i,(t=>{mt(t.before,y),mt(t.lines,y),mt(t.after,y)})),b=0,n.font=d.string,mt(t.footer,y),n.restore(),m+=p.width,{width:m,height:f}}function ds(t,e,n,i){const{x:o,width:a}=n,{width:s,chartArea:{left:r,right:l}}=t;let c="center";return"center"===i?c=o<=(r+l)/2?"left":"right":o<=a/2?c="left":o>=s-a/2&&(c="right"),function(t,e,n,i){const{x:o,width:a}=i,s=n.caretSize+n.caretPadding;return"left"===t&&o+a+s>e.width||"right"===t&&o-a-s<0||void 0}(c,t,e,n)&&(c="center"),c}function hs(t,e,n){const i=e.yAlign||function(t,e){const{y:n,height:i}=e;return n<i/2?"top":n>t.height-i/2?"bottom":"center"}(t,n);return{xAlign:e.xAlign||ds(t,e,n,i),yAlign:i}}function us(t,e,n,i){const{caretSize:o,caretPadding:a,cornerRadius:s}=t,{xAlign:r,yAlign:l}=n,c=o+a,d=s+a;let h=function(t,e){let{x:n,width:i}=t;return"right"===e?n-=i:"center"===e&&(n-=i/2),n}(e,r);const u=function(t,e,n){let{y:i,height:o}=t;return"top"===e?i+=n:i-="bottom"===e?o+n:o/2,i}(e,l,c);return"center"===l?"left"===r?h+=c:"right"===r&&(h-=c):"left"===r?h-=d:"right"===r&&(h+=d),{x:Gt(h,0,i.width-e.width),y:Gt(u,0,i.height-e.height)}}function gs(t,e,n){const i=sn(n.padding);return"center"===e?t.x+t.width/2:"right"===e?t.x+t.width-i.right:t.x+i.left}function ps(t){return ss([],rs(t))}function fs(t,e){const n=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return n?t.override(n):t}class ms extends Mo{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const n=t._chart,i=t.options.setContext(t.getContext()),o=i.enabled&&n.options.animation&&i.animations,a=new ui(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(a)),a}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),n=t,i=t._tooltipItems,Object.assign(Object.create(e),{tooltip:n,tooltipItems:i,type:"tooltip"})));var e,n,i}getTitle(t,e){const n=this,{callbacks:i}=e,o=i.beforeTitle.apply(n,[t]),a=i.title.apply(n,[t]),s=i.afterTitle.apply(n,[t]);let r=[];return r=ss(r,rs(o)),r=ss(r,rs(a)),r=ss(r,rs(s)),r}getBeforeBody(t,e){return ps(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const n=this,{callbacks:i}=e,o=[];return mt(t,(t=>{const e={before:[],lines:[],after:[]},a=fs(i,t);ss(e.before,rs(a.beforeLabel.call(n,t))),ss(e.lines,a.label.call(n,t)),ss(e.after,rs(a.afterLabel.call(n,t))),o.push(e)})),o}getAfterBody(t,e){return ps(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const n=this,{callbacks:i}=e,o=i.beforeFooter.apply(n,[t]),a=i.footer.apply(n,[t]),s=i.afterFooter.apply(n,[t]);let r=[];return r=ss(r,rs(o)),r=ss(r,rs(a)),r=ss(r,rs(s)),r}_createItems(t){const e=this,n=e._active,i=e._chart.data,o=[],a=[],s=[];let r,l,c=[];for(r=0,l=n.length;r<l;++r)c.push(ls(e._chart,n[r]));return t.filter&&(c=c.filter(((e,n,o)=>t.filter(e,n,o,i)))),t.itemSort&&(c=c.sort(((e,n)=>t.itemSort(e,n,i)))),mt(c,(n=>{const i=fs(t.callbacks,n);o.push(i.labelColor.call(e,n)),a.push(i.labelPointStyle.call(e,n)),s.push(i.labelTextColor.call(e,n))})),e.labelColors=o,e.labelPointStyles=a,e.labelTextColors=s,e.dataPoints=c,c}update(t,e){const n=this,i=n.options.setContext(n.getContext()),o=n._active;let a,s=[];if(o.length){const t=as[i.position].call(n,o,n._eventPosition);s=n._createItems(i),n.title=n.getTitle(s,i),n.beforeBody=n.getBeforeBody(s,i),n.body=n.getBody(s,i),n.afterBody=n.getAfterBody(s,i),n.footer=n.getFooter(s,i);const e=n._size=cs(n,i),r=Object.assign({},t,e),l=hs(n._chart,i,r),c=us(i,r,l,n._chart);n.xAlign=l.xAlign,n.yAlign=l.yAlign,a={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==n.opacity&&(a={opacity:0});n._tooltipItems=s,n.$context=void 0,a&&n._resolveAnimations().update(n,a),t&&i.external&&i.external.call(n,{chart:n._chart,tooltip:n,replay:e})}drawCaret(t,e,n,i){const o=this.getCaretPosition(t,n,i);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,n){const{xAlign:i,yAlign:o}=this,{cornerRadius:a,caretSize:s}=n,{x:r,y:l}=t,{width:c,height:d}=e;let h,u,g,p,f,m;return"center"===o?(f=l+d/2,"left"===i?(h=r,u=h-s,p=f+s,m=f-s):(h=r+c,u=h+s,p=f-s,m=f+s),g=h):(u="left"===i?r+a+s:"right"===i?r+c-a-s:this.caretX,"top"===o?(p=l,f=p-s,h=u-s,g=u+s):(p=l+d,f=p+s,h=u+s,g=u-s),m=p),{x1:h,x2:u,x3:g,y1:p,y2:f,y3:m}}drawTitle(t,e,n){const i=this,o=i.title,a=o.length;let s,r,l;if(a){const c=Zn(n.rtl,i.x,i.width);for(t.x=gs(i,n.titleAlign,n),e.textAlign=c.textAlign(n.titleAlign),e.textBaseline="middle",s=rn(n.titleFont),r=n.titleSpacing,e.fillStyle=n.titleColor,e.font=s.string,l=0;l<a;++l)e.fillText(o[l],c.x(t.x),t.y+s.lineHeight/2),t.y+=s.lineHeight+r,l+1===a&&(t.y+=n.titleMarginBottom-r)}}_drawColorBox(t,e,n,i,o){const a=this,s=a.labelColors[n],r=a.labelPointStyles[n],{boxHeight:l,boxWidth:c}=o,d=rn(o.bodyFont),h=gs(a,"left",o),u=i.x(h),g=l<d.lineHeight?(d.lineHeight-l)/2:0,p=e.y+g;if(o.usePointStyle){const e={radius:Math.min(c,l)/2,pointStyle:r.pointStyle,rotation:r.rotation,borderWidth:1},n=i.leftForLtr(u,c)+c/2,a=p+l/2;t.strokeStyle=o.multiKeyBackground,t.fillStyle=o.multiKeyBackground,Ue(t,e,n,a),t.strokeStyle=s.borderColor,t.fillStyle=s.backgroundColor,Ue(t,e,n,a)}else{t.lineWidth=s.borderWidth||1,t.strokeStyle=s.borderColor,t.setLineDash(s.borderDash||[]),t.lineDashOffset=s.borderDashOffset||0;const e=i.leftForLtr(u,c),n=i.leftForLtr(i.xPlus(u,1),c-2),a=an(s.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=o.multiKeyBackground,Je(t,{x:e,y:p,w:c,h:l,radius:a}),t.fill(),t.stroke(),t.fillStyle=s.backgroundColor,t.beginPath(),Je(t,{x:n,y:p+1,w:c-2,h:l-2,radius:a}),t.fill()):(t.fillStyle=o.multiKeyBackground,t.fillRect(e,p,c,l),t.strokeRect(e,p,c,l),t.fillStyle=s.backgroundColor,t.fillRect(n,p+1,c-2,l-2))}t.fillStyle=a.labelTextColors[n]}drawBody(t,e,n){const i=this,{body:o}=i,{bodySpacing:a,bodyAlign:s,displayColors:r,boxHeight:l,boxWidth:c}=n,d=rn(n.bodyFont);let h=d.lineHeight,u=0;const g=Zn(n.rtl,i.x,i.width),p=function(n){e.fillText(n,g.x(t.x+u),t.y+h/2),t.y+=h+a},f=g.textAlign(s);let m,x,b,y,_,v,M;for(e.textAlign=s,e.textBaseline="middle",e.font=d.string,t.x=gs(i,f,n),e.fillStyle=n.bodyColor,mt(i.beforeBody,p),u=r&&"right"!==f?"center"===s?c/2+1:c+2:0,y=0,v=o.length;y<v;++y){for(m=o[y],x=i.labelTextColors[y],e.fillStyle=x,mt(m.before,p),b=m.lines,r&&b.length&&(i._drawColorBox(e,t,y,g,n),h=Math.max(d.lineHeight,l)),_=0,M=b.length;_<M;++_)p(b[_]),h=d.lineHeight;mt(m.after,p)}u=0,h=d.lineHeight,mt(i.afterBody,p),t.y-=a}drawFooter(t,e,n){const i=this,o=i.footer,a=o.length;let s,r;if(a){const l=Zn(n.rtl,i.x,i.width);for(t.x=gs(i,n.footerAlign,n),t.y+=n.footerMarginTop,e.textAlign=l.textAlign(n.footerAlign),e.textBaseline="middle",s=rn(n.footerFont),e.fillStyle=n.footerColor,e.font=s.string,r=0;r<a;++r)e.fillText(o[r],l.x(t.x),t.y+s.lineHeight/2),t.y+=s.lineHeight+n.footerSpacing}}drawBackground(t,e,n,i){const{xAlign:o,yAlign:a}=this,{x:s,y:r}=t,{width:l,height:c}=n,d=i.cornerRadius;e.fillStyle=i.backgroundColor,e.strokeStyle=i.borderColor,e.lineWidth=i.borderWidth,e.beginPath(),e.moveTo(s+d,r),"top"===a&&this.drawCaret(t,e,n,i),e.lineTo(s+l-d,r),e.quadraticCurveTo(s+l,r,s+l,r+d),"center"===a&&"right"===o&&this.drawCaret(t,e,n,i),e.lineTo(s+l,r+c-d),e.quadraticCurveTo(s+l,r+c,s+l-d,r+c),"bottom"===a&&this.drawCaret(t,e,n,i),e.lineTo(s+d,r+c),e.quadraticCurveTo(s,r+c,s,r+c-d),"center"===a&&"left"===o&&this.drawCaret(t,e,n,i),e.lineTo(s,r+d),e.quadraticCurveTo(s,r,s+d,r),e.closePath(),e.fill(),i.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,n=e._chart,i=e.$animations,o=i&&i.x,a=i&&i.y;if(o||a){const i=as[t.position].call(e,e._active,e._eventPosition);if(!i)return;const s=e._size=cs(e,t),r=Object.assign({},i,e._size),l=hs(n,t,r),c=us(t,r,l,n);o._to===c.x&&a._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=s.width,e.height=s.height,e.caretX=i.x,e.caretY=i.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,n=e.options.setContext(e.getContext());let i=e.opacity;if(!i)return;e._updateAnimationTarget(n);const o={width:e.width,height:e.height},a={x:e.x,y:e.y};i=Math.abs(i)<.001?0:i;const s=sn(n.padding),r=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;n.enabled&&r&&(t.save(),t.globalAlpha=i,e.drawBackground(a,t,o,n),Jn(t,n.textDirection),a.y+=s.top,e.drawTitle(a,t,n),e.drawBody(a,t,n),e.drawFooter(a,t,n),Qn(t,n.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const n=this,i=n._active,o=t.map((({datasetIndex:t,index:e})=>{const i=n._chart.getDatasetMeta(t);if(!i)throw new Error("Cannot find a dataset at index "+t);return{datasetIndex:t,element:i.data[e],index:e}})),a=!xt(i,o),s=n._positionChanged(o,e);(a||s)&&(n._active=o,n._eventPosition=e,n.update(!0))}handleEvent(t,e){const n=this,i=n.options,o=n._active||[];let a=!1,s=[];"mouseout"!==t.type&&(s=n._chart.getElementsAtEventForMode(t,i.mode,i,e),i.reverse&&s.reverse());const r=n._positionChanged(s,t);return a=e||!xt(s,o)||r,a&&(n._active=s,(i.enabled||i.external)&&(n._eventPosition={x:t.x,y:t.y},n.update(!0,e))),a}_positionChanged(t,e){const{caretX:n,caretY:i,options:o}=this,a=as[o.position].call(this,t,e);return!1!==a&&(n!==a.x||i!==a.y)}}ms.positioners=as;var xs={id:"tooltip",_element:ms,positioners:as,afterInit(t,e,n){n&&(t.tooltip=new ms({_chart:t,options:n}))},beforeUpdate(t,e,n){t.tooltip&&t.tooltip.initialize(n)},reset(t,e,n){t.tooltip&&t.tooltip.initialize(n)},afterDraw(t){const e=t.tooltip,n={tooltip:e};!1!==t.notifyPlugins("beforeTooltipDraw",n)&&(e&&e.draw(t.ctx),t.notifyPlugins("afterTooltipDraw",n))},afterEvent(t,e){if(t.tooltip){const n=e.replay;t.tooltip.handleEvent(e.event,n)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:{beforeTitle:st,title(t){if(t.length>0){const e=t[0],n=e.chart.data.labels,i=n?n.length:0;if(this&&this.options&&"dataset"===this.options.mode)return e.dataset.label||"";if(e.label)return e.label;if(i>0&&e.dataIndex<i)return n[e.dataIndex]}return""},afterTitle:st,beforeBody:st,beforeLabel:st,label(t){if(this&&this.options&&"dataset"===this.options.mode)return t.label+": "+t.formattedValue||t.formattedValue;let e=t.dataset.label||"";e&&(e+=": ");const n=t.formattedValue;return lt(n)||(e+=n),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:st,afterBody:st,beforeFooter:st,footer:st,afterFooter:st}},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:t=>"filter"!==t&&"itemSort"!==t&&"external"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]},bs=Object.freeze({__proto__:null,Decimation:Ra,Filler:Qa,Legend:ns,Title:os,Tooltip:xs});function ys(t,e,n){const i=t.indexOf(e);if(-1===i)return((t,e,n)=>"string"==typeof e?t.push(e)-1:isNaN(e)?null:n)(t,e,n);return i!==t.lastIndexOf(e)?n:i}class _s extends Lo{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(lt(t))return null;const n=this.getLabels();return((t,e)=>null===t?null:Gt(Math.round(t),0,e))(e=isFinite(e)&&n[e]===t?e:ys(n,t,gt(e,t)),n.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:n}=t.getUserBounds();let{min:i,max:o}=t.getMinMax(!0);"ticks"===t.options.bounds&&(e||(i=0),n||(o=t.getLabels().length-1)),t.min=i,t.max=o}buildTicks(){const t=this,e=t.min,n=t.max,i=t.options.offset,o=[];let a=t.getLabels();a=0===e&&n===a.length-1?a:a.slice(e,n+1),t._valueRange=Math.max(a.length-(i?0:1),1),t._startValue=t.min-(i?.5:0);for(let t=e;t<=n;t++)o.push({value:t});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return"number"!=typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}function vs(t,e){const n=[],{bounds:i,step:o,min:a,max:s,precision:r,count:l,maxTicks:c,maxDigits:d,includeBounds:h}=t,u=o||1,g=c-1,{min:p,max:f}=e,m=!lt(a),x=!lt(s),b=!lt(l),y=(f-p)/(d+1);let _,v,M,w,C=Bt((f-p)/g/u)*u;if(C<1e-14&&!m&&!x)return[{value:p},{value:f}];w=Math.ceil(f/C)-Math.floor(p/C),w>g&&(C=Bt(w*C/g/u)*u),lt(r)||(_=Math.pow(10,r),C=Math.ceil(C*_)/_),"ticks"===i?(v=Math.floor(p/C)*C,M=Math.ceil(f/C)*C):(v=p,M=f),m&&x&&o&&function(t,e){const n=Math.round(t);return n-e<=t&&n+e>=t}((s-a)/o,C/1e3)?(w=Math.min((s-a)/C,c),C=(s-a)/w,v=a,M=s):b?(v=m?a:v,M=x?s:M,w=l-1,C=(M-v)/w):(w=(M-v)/C,w=Wt(w,Math.round(w),C/1e3)?Math.round(w):Math.ceil(w));const k=Math.max(Ut(C),Ut(v));_=Math.pow(10,lt(r)?k:r),v=Math.round(v*_)/_,M=Math.round(M*_)/_;let S=0;for(m&&(h&&v!==a?(n.push({value:a}),v<a&&S++,Wt(Math.round((v+S*C)*_)/_,a,Ms(a,y,t))&&S++):v<a&&S++);S<w;++S)n.push({value:Math.round((v+S*C)*_)/_});return x&&h&&M!==s?Wt(n[n.length-1].value,s,Ms(s,y,t))?n[n.length-1].value=s:n.push({value:s}):x&&M!==s||n.push({value:M}),n}function Ms(t,e,{horizontal:n,minRotation:i}){const o=Ht(i),a=(n?Math.sin(o):Math.cos(o))||.001,s=.75*e*(""+t).length;return Math.min(e/a,s)}_s.id="category",_s.defaults={ticks:{callback:_s.prototype.getLabelForValue}};class ws extends Lo{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return lt(t)||("number"==typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e}=t.options,{minDefined:n,maxDefined:i}=t.getUserBounds();let{min:o,max:a}=t;const s=t=>o=n?o:t,r=t=>a=i?a:t;if(e){const t=Vt(o),e=Vt(a);t<0&&e<0?r(0):t>0&&e>0&&s(0)}o===a&&(r(a+1),e||s(o-1)),t.min=o,t.max=a}getTickLimit(){const t=this,e=t.options.ticks;let n,{maxTicksLimit:i,stepSize:o}=e;return o?n=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(n=t.computeTickLimit(),i=i||11),i&&(n=Math.min(i,n)),n}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,n=e.ticks;let i=t.getTickLimit();i=Math.max(2,i);const o=vs({maxTicks:i,bounds:e.bounds,min:e.min,max:e.max,precision:n.precision,step:n.stepSize,count:n.count,maxDigits:t._maxDigits(),horizontal:t.isHorizontal(),minRotation:n.minRotation||0,includeBounds:!1!==n.includeBounds},t._range||t);return"ticks"===e.bounds&&jt(o,t,"value"),e.reverse?(o.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),o}configure(){const t=this,e=t.ticks;let n=t.min,i=t.max;if(super.configure(),t.options.offset&&e.length){const t=(i-n)/Math.max(e.length-1,1)/2;n-=t,i+=t}t._startValue=n,t._endValue=i,t._valueRange=i-n}getLabelForValue(t){return Gn(t,this.chart.options.locale)}}class Cs extends ws{determineDataLimits(){const t=this,{min:e,max:n}=t.getMinMax(!0);t.min=ht(e)?e:0,t.max=ht(n)?n:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this,e=t.isHorizontal(),n=e?t.width:t.height,i=Ht(t.options.ticks.minRotation),o=(e?Math.sin(i):Math.cos(i))||.001,a=t._resolveTickFontOptions(0);return Math.ceil(n/Math.min(40,a.lineHeight/o))}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function ks(t){return 1===t/Math.pow(10,Math.floor(zt(t)))}Cs.id="linear",Cs.defaults={ticks:{callback:Co.formatters.numeric}};class Ss extends Lo{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const n=ws.prototype.parse.apply(this,[t,e]);if(0!==n)return ht(n)&&n>0?n:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:n}=t.getMinMax(!0);t.min=ht(e)?Math.max(0,e):null,t.max=ht(n)?Math.max(0,n):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:n}=t.getUserBounds();let i=t.min,o=t.max;const a=t=>i=e?i:t,s=t=>o=n?o:t,r=(t,e)=>Math.pow(10,Math.floor(zt(t))+e);i===o&&(i<=0?(a(1),s(10)):(a(r(i,-1)),s(r(o,1)))),i<=0&&a(r(o,-1)),o<=0&&s(r(i,1)),t._zero&&t.min!==t._suggestedMin&&i===r(t.min,0)&&a(r(i,-1)),t.min=i,t.max=o}buildTicks(){const t=this,e=t.options,n=function(t,e){const n=Math.floor(zt(e.max)),i=Math.ceil(e.max/Math.pow(10,n)),o=[];let a=ut(t.min,Math.pow(10,Math.floor(zt(e.min)))),s=Math.floor(zt(a)),r=Math.floor(a/Math.pow(10,s)),l=s<0?Math.pow(10,Math.abs(s)):1;do{o.push({value:a,major:ks(a)}),++r,10===r&&(r=1,++s,l=s>=0?1:l),a=Math.round(r*Math.pow(10,s)*l)/l}while(s<n||s===n&&r<i);const c=ut(t.max,a);return o.push({value:c,major:ks(a)}),o}({min:t._userMin,max:t._userMax},t);return"ticks"===e.bounds&&jt(n,t,"value"),e.reverse?(n.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),n}getLabelForValue(t){return void 0===t?"0":Gn(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=zt(e),t._valueRange=zt(t.max)-zt(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(zt(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,n=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+n*e._valueRange)}}function Ps(t){const e=t.ticks;if(e.display&&t.display){const t=sn(e.backdropPadding);return gt(e.font&&e.font.size,Ne.font.size)+t.height}return 0}function Os(t,e,n,i,o){return t===i||t===o?{start:e-n/2,end:e+n/2}:t<i||t>o?{start:e-n,end:e}:{start:e,end:e+n}}function Ds(t){return 0===t||180===t?"center":t<180?"left":"right"}function Es(t,e,n){90===t||270===t?n.y-=e.h/2:(t>270||t<90)&&(n.y-=e.h)}function Ts(t,e,n,i){const{ctx:o}=t;if(n)o.arc(t.xCenter,t.yCenter,e,0,Et);else{let n=t.getPointPosition(0,e);o.moveTo(n.x,n.y);for(let a=1;a<i;a++)n=t.getPointPosition(a,e),o.lineTo(n.x,n.y)}}function As(t){return Nt(t)?t:0}Ss.id="logarithmic",Ss.defaults={ticks:{callback:Co.formatters.logarithmic,major:{enabled:!0}}};class Ls extends ws{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=Ps(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:n}=t.getMinMax(!1);t.min=ht(e)&&!isNaN(e)?e:0,t.max=ht(n)&&!isNaN(n)?n:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/Ps(this.options))}generateTickLabels(t){const e=this;ws.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,n)=>{const i=ft(e.options.pointLabels.callback,[t,n],e);return i||0===i?i:""}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?function(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},n={};let i,o,a;const s=[],r=[],l=t.getLabels().length;for(i=0;i<l;i++){const l=t.options.pointLabels.setContext(t.getContext(i));r[i]=l.padding,a=t.getPointPosition(i,t.drawingArea+r[i]);const u=rn(l.font);t.ctx.font=u.string,c=t.ctx,d=u.lineHeight,o=ct(h=t._pointLabels[i])?{w:je(c,c.font,h),h:h.length*d}:{w:c.measureText(h).width,h:d},s[i]=o;const g=t.getIndexAngle(i),p=$t(g),f=Os(p,a.x,o.w,0,180),m=Os(p,a.y,o.h,90,270);f.start<e.l&&(e.l=f.start,n.l=g),f.end>e.r&&(e.r=f.end,n.r=g),m.start<e.t&&(e.t=m.start,n.t=g),m.end>e.b&&(e.b=m.end,n.b=g)}var c,d,h;t._setReductions(t.drawingArea,e,n),t._pointLabelItems=[];const u=t.options,g=Ps(u),p=t.getDistanceFromCenterForValue(u.ticks.reverse?t.min:t.max);for(i=0;i<l;i++){const e=0===i?g/2:0,n=t.getPointPosition(i,p+e+r[i]),o=$t(t.getIndexAngle(i)),a=s[i];Es(o,a,n);const l=Ds(o);let c;c="left"===l?n.x:"center"===l?n.x-a.w/2:n.x-a.w;const d=c+a.w;t._pointLabelItems[i]={x:n.x,y:n.y,textAlign:l,left:c,top:n.y,right:d,bottom:n.y+a.h}}}(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,n){const i=this;let o=e.l/Math.sin(n.l),a=Math.max(e.r-i.width,0)/Math.sin(n.r),s=-e.t/Math.cos(n.t),r=-Math.max(e.b-(i.height-i.paddingTop),0)/Math.cos(n.b);o=As(o),a=As(a),s=As(s),r=As(r),i.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+a)/2),Math.floor(t-(s+r)/2))),i.setCenterPoint(o,a,s,r)}setCenterPoint(t,e,n,i){const o=this,a=o.width-e-o.drawingArea,s=t+o.drawingArea,r=n+o.drawingArea,l=o.height-o.paddingTop-i-o.drawingArea;o.xCenter=Math.floor((s+a)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){return qt(t*(Et/this.getLabels().length)+Ht(this.options.startAngle||0))}getDistanceFromCenterForValue(t){const e=this;if(lt(t))return NaN;const n=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*n:(t-e.min)*n}getValueForDistanceFromCenter(t){if(lt(t))return NaN;const e=this,n=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-n:e.min+n}getPointPosition(t,e){const n=this,i=n.getIndexAngle(t)-It;return{x:Math.cos(i)*e+n.xCenter,y:Math.sin(i)*e+n.yCenter,angle:i}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:n,right:i,bottom:o}=this._pointLabelItems[t];return{left:e,top:n,right:i,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:n}}=t.options;if(e){const i=t.ctx;i.save(),i.beginPath(),Ts(t,t.getDistanceFromCenterForValue(t._endValue),n,t.getLabels().length),i.closePath(),i.fillStyle=e,i.fill(),i.restore()}}drawGrid(){const t=this,e=t.ctx,n=t.options,{angleLines:i,grid:o}=n,a=t.getLabels().length;let s,r,l;if(n.pointLabels.display&&function(t,e){const{ctx:n,options:{pointLabels:i}}=t;for(let o=e-1;o>=0;o--){const e=i.setContext(t.getContext(o)),a=rn(e.font),{x:s,y:r,textAlign:l,left:c,top:d,right:h,bottom:u}=t._pointLabelItems[o],{backdropColor:g}=e;if(!lt(g)){const t=sn(e.backdropPadding);n.fillStyle=g,n.fillRect(c-t.left,d-t.top,h-c+t.width,u-d+t.height)}Ze(n,t._pointLabels[o],s,r+a.lineHeight/2,a,{color:e.color,textAlign:l,textBaseline:"middle"})}}(t,a),o.display&&t.ticks.forEach(((e,n)=>{if(0!==n){r=t.getDistanceFromCenterForValue(e.value);const i=o.setContext(t.getContext(n-1));!function(t,e,n,i){const o=t.ctx,a=e.circular,{color:s,lineWidth:r}=e;!a&&!i||!s||!r||n<0||(o.save(),o.strokeStyle=s,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),Ts(t,n,a,i),o.closePath(),o.stroke(),o.restore())}(t,i,r,a)}})),i.display){for(e.save(),s=t.getLabels().length-1;s>=0;s--){const o=i.setContext(t.getContext(s)),{color:a,lineWidth:c}=o;c&&a&&(e.lineWidth=c,e.strokeStyle=a,e.setLineDash(o.borderDash),e.lineDashOffset=o.borderDashOffset,r=t.getDistanceFromCenterForValue(n.ticks.reverse?t.min:t.max),l=t.getPointPosition(s,r),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(l.x,l.y),e.stroke())}e.restore()}}drawBorder(){}drawLabels(){const t=this,e=t.ctx,n=t.options,i=n.ticks;if(!i.display)return;const o=t.getIndexAngle(0);let a,s;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(o),e.textAlign="center",e.textBaseline="middle",t.ticks.forEach(((o,r)=>{if(0===r&&!n.reverse)return;const l=i.setContext(t.getContext(r)),c=rn(l.font);if(a=t.getDistanceFromCenterForValue(t.ticks[r].value),l.showLabelBackdrop){s=e.measureText(o.label).width,e.fillStyle=l.backdropColor;const t=sn(l.backdropPadding);e.fillRect(-s/2-t.left,-a-c.size/2-t.top,s+t.width,c.size+t.height)}Ze(e,o.label,0,-a,c,{color:l.color})})),e.restore()}drawTitle(){}}Ls.id="radialLinear",Ls.defaults={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:Co.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},Ls.defaultRoutes={"angleLines.color":"borderColor","pointLabels.color":"color","ticks.color":"color"},Ls.descriptors={angleLines:{_fallback:"grid"}};const Is={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Fs=Object.keys(Is);function Rs(t,e){return t-e}function zs(t,e){if(lt(e))return null;const n=t._adapter,{parser:i,round:o,isoWeekday:a}=t._parseOpts;let s=e;return"function"==typeof i&&(s=i(s)),ht(s)||(s="string"==typeof i?n.parse(s,i):n.parse(s)),null===s?null:(o&&(s="week"!==o||!Nt(a)&&!0!==a?n.startOf(s,o):n.startOf(s,"isoWeek",a)),+s)}function Vs(t,e,n,i){const o=Fs.length;for(let a=Fs.indexOf(t);a<o-1;++a){const t=Is[Fs[a]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((n-e)/(o*t.size))<=i)return Fs[a]}return Fs[o-1]}function Bs(t,e,n){if(n){if(n.length){const{lo:i,hi:o}=cn(n,e);t[n[i]>=e?n[i]:n[o]]=!0}}else t[e]=!0}function Ns(t,e,n){const i=[],o={},a=e.length;let s,r;for(s=0;s<a;++s)r=e[s],o[r]=s,i.push({value:r,major:!1});return 0!==a&&n?function(t,e,n,i){const o=t._adapter,a=+o.startOf(e[0].value,i),s=e[e.length-1].value;let r,l;for(r=a;r<=s;r=+o.add(r,1,i))l=n[r],l>=0&&(e[l].major=!0);return e}(t,i,o,n):i}class Ws extends Lo{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e){const n=t.time||(t.time={}),i=this._adapter=new Ni._date(t.adapters.date);Mt(n.displayFormats,i.formats()),this._parseOpts={parser:n.parser,round:n.round,isoWeekday:n.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:zs(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,n=t._adapter,i=e.time.unit||"day";let{min:o,max:a,minDefined:s,maxDefined:r}=t.getUserBounds();function l(t){s||isNaN(t.min)||(o=Math.min(o,t.min)),r||isNaN(t.max)||(a=Math.max(a,t.max))}s&&r||(l(t._getLabelBounds()),"ticks"===e.bounds&&"labels"===e.ticks.source||l(t.getMinMax(!1))),o=ht(o)&&!isNaN(o)?o:+n.startOf(Date.now(),i),a=ht(a)&&!isNaN(a)?a:+n.endOf(Date.now(),i)+1,t.min=Math.min(o,a-1),t.max=Math.max(o+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],n=t[t.length-1]),{min:e,max:n}}buildTicks(){const t=this,e=t.options,n=e.time,i=e.ticks,o="labels"===i.source?t.getLabelTimestamps():t._generate();"ticks"===e.bounds&&o.length&&(t.min=t._userMin||o[0],t.max=t._userMax||o[o.length-1]);const a=t.min,s=function(t,e,n){let i=0,o=t.length;for(;i<o&&t[i]<e;)i++;for(;o>i&&t[o-1]>n;)o--;return i>0||o<t.length?t.slice(i,o):t}(o,a,t.max);return t._unit=n.unit||(i.autoSkip?Vs(n.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,n,i,o){for(let a=Fs.length-1;a>=Fs.indexOf(n);a--){const n=Fs[a];if(Is[n].common&&t._adapter.diff(o,i,n)>=e-1)return n}return Fs[n?Fs.indexOf(n):0]}(t,s.length,n.minUnit,t.min,t.max)),t._majorUnit=i.major.enabled&&"year"!==t._unit?function(t){for(let e=Fs.indexOf(t)+1,n=Fs.length;e<n;++e)if(Is[Fs[e]].common)return Fs[e]}(t._unit):void 0,t.initOffsets(o),e.reverse&&s.reverse(),Ns(t,s,t._majorUnit)}initOffsets(t){const e=this;let n,i,o=0,a=0;e.options.offset&&t.length&&(n=e.getDecimalForValue(t[0]),o=1===t.length?1-n:(e.getDecimalForValue(t[1])-n)/2,i=e.getDecimalForValue(t[t.length-1]),a=1===t.length?i:(i-e.getDecimalForValue(t[t.length-2]))/2);const s=t.length<3?.5:.25;o=Gt(o,0,s),a=Gt(a,0,s),e._offsets={start:o,end:a,factor:1/(o+1+a)}}_generate(){const t=this,e=t._adapter,n=t.min,i=t.max,o=t.options,a=o.time,s=a.unit||Vs(a.minUnit,n,i,t._getLabelCapacity(n)),r=gt(a.stepSize,1),l="week"===s&&a.isoWeekday,c=Nt(l)||!0===l,d={};let h,u,g=n;if(c&&(g=+e.startOf(g,"isoWeek",l)),g=+e.startOf(g,c?"day":s),e.diff(i,n,s)>1e5*r)throw new Error(n+" and "+i+" are too far apart with stepSize of "+r+" "+s);const p="data"===o.ticks.source&&t.getDataTimestamps();for(h=g,u=0;h<i;h=+e.add(h,r,s),u++)Bs(d,h,p);return h!==i&&"ticks"!==o.bounds&&1!==u||Bs(d,h,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,n=this.options.time;return n.tooltipFormat?e.format(t,n.tooltipFormat):e.format(t,n.displayFormats.datetime)}_tickFormatFunction(t,e,n,i){const o=this,a=o.options,s=a.time.displayFormats,r=o._unit,l=o._majorUnit,c=r&&s[r],d=l&&s[l],h=n[e],u=l&&d&&h&&h.major,g=o._adapter.format(t,i||(u?d:c)),p=a.ticks.callback;return p?ft(p,[g,e,n],o):g}generateTickLabels(t){let e,n,i;for(e=0,n=t.length;e<n;++e)i=t[e],i.label=this._tickFormatFunction(i.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,n=e._offsets,i=e.getDecimalForValue(t);return e.getPixelForDecimal((n.start+i)*n.factor)}getValueForPixel(t){const e=this,n=e._offsets,i=e.getDecimalForPixel(t)/n.factor-n.end;return e.min+i*(e.max-e.min)}_getLabelSize(t){const e=this,n=e.options.ticks,i=e.ctx.measureText(t).width,o=Ht(e.isHorizontal()?n.maxRotation:n.minRotation),a=Math.cos(o),s=Math.sin(o),r=e._resolveTickFontOptions(0).size;return{w:i*a+r*s,h:i*s+r*a}}_getLabelCapacity(t){const e=this,n=e.options.time,i=n.displayFormats,o=i[n.unit]||i.millisecond,a=e._tickFormatFunction(t,0,Ns(e,[t],e._majorUnit),o),s=e._getLabelSize(a),r=Math.floor(e.isHorizontal()?e.width/s.w:e.height/s.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,n,i=t._cache.data||[];if(i.length)return i;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,n=o.length;e<n;++e)i=i.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(i)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let n,i;if(e.length)return e;const o=t.getLabels();for(n=0,i=o.length;n<i;++n)e.push(zs(t,o[n]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return pn(t.sort(Rs))}}function js(t,e,n){let i,o,a,s;if(n)i=Math.floor(e),o=Math.ceil(e),a=t[i],s=t[o];else{const n=cn(t,e);a=n.lo,s=n.hi,i=t[a],o=t[s]}const r=o-i;return r?a+(s-a)*(e-i)/r:a}Ws.id="time",Ws.defaults={bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",major:{enabled:!1}}};class Hs extends Ws{constructor(t){super(t),this._table=[],this._maxIndex=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable();t._table=t.buildLookupTable(e),t._maxIndex=t._table.length-1,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:n}=this;if(!t.length)return[{time:e,pos:0},{time:n,pos:1}];const i=[e];let o,a,s;for(o=0,a=t.length;o<a;++o)s=t[o],s>e&&s<n&&i.push(s);return i.push(n),i}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const n=t.getDataTimestamps(),i=t.getLabelTimestamps();return e=n.length&&i.length?t.normalize(n.concat(i)):n.length?n:i,e=t._cache.all=e,e}getPixelForValue(t,e){const n=this,i=n._offsets,o=n._normalized&&n._maxIndex>0&&!lt(e)?e/n._maxIndex:n.getDecimalForValue(t);return n.getPixelForDecimal((i.start+o)*i.factor)}getDecimalForValue(t){return js(this._table,t)/this._maxIndex}getValueForPixel(t){const e=this,n=e._offsets,i=e.getDecimalForPixel(t)/n.factor-n.end;return js(e._table,i*this._maxIndex,!0)}}Hs.id="timeseries",Hs.defaults=Ws.defaults;const $s=[zi,La,bs,Object.freeze({__proto__:null,CategoryScale:_s,LinearScale:Cs,LogarithmicScale:Ss,RadialLinearScale:Ls,TimeScale:Ws,TimeSeriesScale:Hs})];oa.register(...$s);class Us{platformId;el;zone;type;plugins=[];width;height;responsive=!0;ariaLabel;ariaLabelledBy;get data(){return this._data}set data(t){this._data=t,this.reinit()}get options(){return this._options}set options(t){this._options=t,this.reinit()}onDataSelect=new n;isBrowser=!1;initialized;_data;_options={};chart;constructor(t,e,n){this.platformId=t,this.el=e,this.zone=n}ngAfterViewInit(){this.initChart(),this.initialized=!0}onCanvasClick(t){if(this.chart){const e=this.chart.getElementsAtEventForMode(t,"nearest",{intersect:!0},!1),n=this.chart.getElementsAtEventForMode(t,"dataset",{intersect:!0},!1);e&&e[0]&&n&&this.onDataSelect.emit({originalEvent:t,element:e[0],dataset:n})}}initChart(){if(m(this.platformId)){let t=this.options||{};t.responsive=this.responsive,t.responsive&&(this.height||this.width)&&(t.maintainAspectRatio=!1),this.zone.runOutsideAngular((()=>{this.chart=new oa(this.el.nativeElement.children[0].children[0],{type:this.type,data:this.data,options:this.options,plugins:this.plugins})}))}}getCanvas(){return this.el.nativeElement.children[0].children[0]}getBase64Image(){return this.chart.toBase64Image()}generateLegend(){if(this.chart)return this.chart.generateLegend()}refresh(){this.chart&&this.chart.update()}reinit(){this.chart&&(this.chart.destroy(),this.initChart())}ngOnDestroy(){this.chart&&(this.chart.destroy(),this.initialized=!1,this.chart=null)}static"ɵfac"=e.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"18.0.1",ngImport:e,type:Us,deps:[{token:i},{token:e.ElementRef},{token:e.NgZone}],target:e.ɵɵFactoryTarget.Component});static"ɵcmp"=e.ɵɵngDeclareComponent({minVersion:"16.1.0",version:"18.0.1",type:Us,selector:"p-chart",inputs:{type:"type",plugins:"plugins",width:"width",height:"height",responsive:["responsive","responsive",o],ariaLabel:"ariaLabel",ariaLabelledBy:"ariaLabelledBy",data:"data",options:"options"},outputs:{onDataSelect:"onDataSelect"},host:{classAttribute:"p-element"},ngImport:e,template:'\n        <div\n            [ngStyle]="{\n                position: \'relative\',\n                width: responsive && !width ? null : width,\n                height: responsive && !height ? null : height\n            }"\n        >\n            <canvas\n                role="img"\n                [attr.aria-label]="ariaLabel"\n                [attr.aria-labelledby]="ariaLabelledBy"\n                [ngStyle]="{\n                    width: responsive && !width ? null : width,\n                    height: responsive && !height ? null : height\n                }"\n                (click)="onCanvasClick($event)"\n            ></canvas>\n        </div>\n    ',isInline:!0,dependencies:[{kind:"directive",type:x.NgStyle,selector:"[ngStyle]",inputs:["ngStyle"]}],changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None})}e.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"18.0.1",ngImport:e,type:Us,decorators:[{type:a,args:[{selector:"p-chart",template:'\n        <div\n            [ngStyle]="{\n                position: \'relative\',\n                width: responsive && !width ? null : width,\n                height: responsive && !height ? null : height\n            }"\n        >\n            <canvas\n                role="img"\n                [attr.aria-label]="ariaLabel"\n                [attr.aria-labelledby]="ariaLabelledBy"\n                [ngStyle]="{\n                    width: responsive && !width ? null : width,\n                    height: responsive && !height ? null : height\n                }"\n                (click)="onCanvasClick($event)"\n            ></canvas>\n        </div>\n    ',changeDetection:s.OnPush,encapsulation:r.None,host:{class:"p-element"}}]}],ctorParameters:()=>[{type:void 0,decorators:[{type:l,args:[i]}]},{type:e.ElementRef},{type:e.NgZone}],propDecorators:{type:[{type:c}],plugins:[{type:c}],width:[{type:c}],height:[{type:c}],responsive:[{type:c,args:[{transform:o}]}],ariaLabel:[{type:c}],ariaLabelledBy:[{type:c}],data:[{type:c}],options:[{type:c}],onDataSelect:[{type:d}]}});class Ys{static"ɵfac"=e.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"18.0.1",ngImport:e,type:Ys,deps:[],target:e.ɵɵFactoryTarget.NgModule});static"ɵmod"=e.ɵɵngDeclareNgModule({minVersion:"14.0.0",version:"18.0.1",ngImport:e,type:Ys,declarations:[Us],imports:[b],exports:[Us]});static"ɵinj"=e.ɵɵngDeclareInjector({minVersion:"12.0.0",version:"18.0.1",ngImport:e,type:Ys,imports:[b]})}function Ks(t,n){1&t&&e.ɵɵelement(0,"mat-progress-bar",33)}function qs(t,n){1&t&&e.ɵɵelement(0,"div",34)}function Xs(t,n){1&t&&(e.ɵɵelementStart(0,"mat-error"),e.ɵɵtext(1," Entity name is required. "),e.ɵɵelementEnd())}function Gs(t,n){if(1&t&&e.ɵɵelement(0,"tb-entity-subtype-autocomplete",35),2&t){const t=e.ɵɵnextContext();e.ɵɵproperty("required",!0)("entityType",t.entityType.ASSET)}}function Zs(t,n){if(1&t&&e.ɵɵelement(0,"tb-entity-subtype-autocomplete",35),2&t){const t=e.ɵɵnextContext();e.ɵɵproperty("required",!0)("entityType",t.entityType.DEVICE)}}function Js(t,n){1&t&&(e.ɵɵelementStart(0,"mat-error"),e.ɵɵtext(1," Invalid integer value. "),e.ɵɵelementEnd())}function Qs(t,n){if(1&t&&(e.ɵɵelementStart(0,"mat-option",47),e.ɵɵtext(1),e.ɵɵpipe(2,"translate"),e.ɵɵelementEnd()),2&t){const t=n.$implicit;e.ɵɵproperty("value",t.value),e.ɵɵadvance(),e.ɵɵtextInterpolate1(" ",e.ɵɵpipeBind1(2,2,"relation.search-direction."+t.value)," ")}}function tr(t,n){1&t&&(e.ɵɵelementStart(0,"mat-error"),e.ɵɵtext(1," Relation direction is required. "),e.ɵɵelementEnd())}function er(t,n){if(1&t){const t=e.ɵɵgetCurrentView();e.ɵɵelementStart(0,"div",36)(1,"div",37)(2,"div",38)(3,"div",9)(4,"mat-form-field",39)(5,"mat-label"),e.ɵɵtext(6,"Direction"),e.ɵɵelementEnd(),e.ɵɵelementStart(7,"mat-select",40),e.ɵɵtemplate(8,Qs,3,4,"mat-option",41),e.ɵɵpipe(9,"keyvalue"),e.ɵɵelementEnd(),e.ɵɵtemplate(10,tr,2,0,"mat-error",12),e.ɵɵelementEnd(),e.ɵɵelement(11,"tb-relation-type-autocomplete",42),e.ɵɵelementEnd(),e.ɵɵelementStart(12,"div",43),e.ɵɵelement(13,"tb-entity-select",44),e.ɵɵelementEnd()(),e.ɵɵelementStart(14,"div",45)(15,"button",46),e.ɵɵlistener("click",(function(){const n=e.ɵɵrestoreView(t).index,i=e.ɵɵnextContext();return e.ɵɵresetView(i.removeRelation(n))})),e.ɵɵelementStart(16,"mat-icon"),e.ɵɵtext(17,"close"),e.ɵɵelementEnd()()()()()}if(2&t){const t=n.$implicit,i=n.index,o=e.ɵɵnextContext();e.ɵɵadvance(),e.ɵɵproperty("formGroupName",i),e.ɵɵadvance(7),e.ɵɵproperty("ngForOf",e.ɵɵpipeBind1(9,5,o.entitySearchDirection)),e.ɵɵadvance(2),e.ɵɵproperty("ngIf",t.get("direction").hasError("required")),e.ɵɵadvance(),e.ɵɵproperty("required",!0),e.ɵɵadvance(2),e.ɵɵproperty("required",!0)}}e.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"18.0.1",ngImport:e,type:Ys,decorators:[{type:h,args:[{imports:[b],exports:[Us],declarations:[Us]}]}]});class nr extends y{constructor(t,e,n,i,o,a){super(t),this.store=t,this.fb=e,this.deviceService=n,this.assetService=i,this.attributeService=o,this.entityRelationService=a,this.destroy$=new $,this.allowedEntityTypes=[_.ASSET,_.DEVICE],this.entityType=_,this.entitySearchDirection=v}ngOnInit(){this.addEntityFormGroup=this.fb.group({entityName:["",[j.required]],entityType:[_.DEVICE],entityLabel:[null],type:["",[j.required]],attributes:this.fb.group({latitude:[null],longitude:[null],address:[null],owner:[null],number:[null,[j.pattern(/^-?[0-9]+$/)]],booleanValue:[null]}),relations:this.fb.array([])})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}relations(){return this.addEntityFormGroup.get("relations")}removeRelation(t){this.relations().removeAt(t),this.relations().markAsDirty()}addRelation(){this.relations().push(this.fb.group({relatedEntity:[null,[j.required]],relationType:[null,[j.required]],direction:[null,[j.required]]}))}saveEntityObservable(){const t=this.addEntityFormGroup.value,e={name:t.entityName,type:t.type,label:t.entityLabel};return t.entityType===_.ASSET?this.assetService.saveAsset(e):t.entityType===_.DEVICE?this.deviceService.saveDevice(e):void 0}saveAttributes(t){const e=this.addEntityFormGroup.get("attributes").value,n=[];for(const t in e)null!==e[t]&&n.push({key:t,value:e[t]});return n.length>0?this.attributeService.saveEntityAttributes(t,M.SERVER_SCOPE,n):U([])}saveRelations(t){const e=this.addEntityFormGroup.get("relations").value,n=[];for(const i of e){const e={type:i.relationType,typeGroup:w.COMMON,to:null,from:null};i.direction===v.FROM?(e.to=i.relatedEntity,e.from=t):(e.to=t,e.from=i.relatedEntity),n.push(this.entityRelationService.saveRelation(e))}return n.length>0?Y(n):U([])}save(){this.addEntityFormGroup.markAsPristine(),this.saveEntityObservable().pipe(K((t=>Y([this.saveAttributes(t.id),this.saveRelations(t.id)]))),q(this.destroy$)).subscribe((()=>{this.ctx.updateAliases(),this.dialogRef.close(null)}))}cancel(){this.dialogRef.close(null)}static{this.ɵfac=function(t){return new(t||nr)(e.ɵɵdirectiveInject(X.Store),e.ɵɵdirectiveInject(H.FormBuilder),e.ɵɵdirectiveInject(f.DeviceService),e.ɵɵdirectiveInject(f.AssetService),e.ɵɵdirectiveInject(f.AttributeService),e.ɵɵdirectiveInject(f.EntityRelationService))}}static{this.ɵcmp=e.ɵɵdefineComponent({type:nr,selectors:[["tb-add-entity-action"]],inputs:{ctx:"ctx",dialogRef:"dialogRef"},features:[e.ɵɵInheritDefinitionFeature],decls:74,vars:24,consts:[["addEntityForm","ngForm"],[1,"add-entity-form",3,"ngSubmit","formGroup"],["fxLayout","row","color","primary"],["fxFlex",""],["mat-icon-button","","type","button",3,"click"],[1,"material-icons"],["color","warn","mode","indeterminate",4,"ngIf"],["style","height: 4px;",4,"ngIf"],["mat-dialog-content","","fxLayout","column"],["fxLayout","row","fxLayoutGap","8px","fxLayout.xs","column","fxLayoutGap.xs","0"],["fxFlex","",1,"mat-block"],["matInput","","formControlName","entityName","required",""],[4,"ngIf"],["matInput","","formControlName","entityLabel"],["formControlName","entityType",1,"mat-block",3,"showLabel","allowedEntityTypes"],["fxFlex","","class","mat-block","formControlName","type",3,"required","entityType",4,"ngIf"],["formGroupName","attributes","fxLayout","column"],["type","number","step","any","matInput","","formControlName","latitude"],["type","number","step","any","matInput","","formControlName","longitude"],["matInput","","formControlName","address"],["matInput","","formControlName","owner"],["type","number","step","1","matInput","","formControlName","number"],["fxLayout","column","fxLayoutAlign","center start","fxFlex","",1,"boolean-value-input"],[1,"checkbox-label"],["formControlName","booleanValue",2,"margin-bottom","40px"],[1,"relations-list"],[1,"mat-body-1",2,"padding-bottom","10px","color","rgba(0,0,0,0.57)"],[1,"body",3,"fxShow"],["class","row","fxLayout","row","fxLayoutAlign","start center","formArrayName","relations",4,"ngFor","ngForOf"],["mat-raised-button","","color","primary","type","button","matTooltip","Add Relation","matTooltipPosition","above",3,"click"],["mat-dialog-actions","","fxLayout","row","fxLayoutAlign","end center"],["mat-button","","color","primary","type","button","cdkFocusInitial","",3,"click","disabled"],["mat-button","","mat-raised-button","","color","primary","type","submit",3,"disabled"],["color","warn","mode","indeterminate"],[2,"height","4px"],["fxFlex","","formControlName","type",1,"mat-block",3,"required","entityType"],["fxLayout","row","fxLayoutAlign","start center","formArrayName","relations",1,"row"],["fxFlex","","fxLayout","row",1,"mat-elevation-z2",2,"padding","5px 0 5px 5px",3,"formGroupName"],["fxFlex","","fxLayout","column"],[1,"mat-block",2,"min-width","100px"],["formControlName","direction","name","direction"],[3,"value",4,"ngFor","ngForOf"],["fxFlex","","formControlName","relationType",1,"mat-block",3,"required"],["fxLayout","row","fxLayout.xs","column"],["fxFlex","","formControlName","relatedEntity",1,"mat-block",3,"required"],["fxLayout","column","fxLayoutAlign","center center"],["mat-icon-button","","color","primary","aria-label","Remove","type","button","matTooltip","Remove relation","matTooltipPosition","above",3,"click"],[3,"value"]],template:function(t,n){if(1&t){const t=e.ɵɵgetCurrentView();e.ɵɵelementStart(0,"form",1,0),e.ɵɵlistener("ngSubmit",(function(){return e.ɵɵrestoreView(t),e.ɵɵresetView(n.save())})),e.ɵɵelementStart(2,"mat-toolbar",2)(3,"h2"),e.ɵɵtext(4,"Add entity"),e.ɵɵelementEnd(),e.ɵɵelement(5,"span",3),e.ɵɵelementStart(6,"button",4),e.ɵɵlistener("click",(function(){return e.ɵɵrestoreView(t),e.ɵɵresetView(n.cancel())})),e.ɵɵelementStart(7,"mat-icon",5),e.ɵɵtext(8,"close"),e.ɵɵelementEnd()()(),e.ɵɵtemplate(9,Ks,1,0,"mat-progress-bar",6),e.ɵɵpipe(10,"async"),e.ɵɵtemplate(11,qs,1,0,"div",7),e.ɵɵpipe(12,"async"),e.ɵɵelementStart(13,"div",8)(14,"div",9)(15,"mat-form-field",10)(16,"mat-label"),e.ɵɵtext(17,"Entity Name"),e.ɵɵelementEnd(),e.ɵɵelement(18,"input",11),e.ɵɵtemplate(19,Xs,2,0,"mat-error",12),e.ɵɵelementEnd(),e.ɵɵelementStart(20,"mat-form-field",10)(21,"mat-label"),e.ɵɵtext(22,"Entity Label"),e.ɵɵelementEnd(),e.ɵɵelement(23,"input",13),e.ɵɵelementEnd()(),e.ɵɵelementStart(24,"div",9),e.ɵɵelement(25,"tb-entity-type-select",14),e.ɵɵtemplate(26,Gs,1,2,"tb-entity-subtype-autocomplete",15)(27,Zs,1,2,"tb-entity-subtype-autocomplete",15),e.ɵɵelementEnd(),e.ɵɵelementStart(28,"div",16)(29,"div",9)(30,"mat-form-field",10)(31,"mat-label"),e.ɵɵtext(32,"Latitude"),e.ɵɵelementEnd(),e.ɵɵelement(33,"input",17),e.ɵɵelementEnd(),e.ɵɵelementStart(34,"mat-form-field",10)(35,"mat-label"),e.ɵɵtext(36,"Longitude"),e.ɵɵelementEnd(),e.ɵɵelement(37,"input",18),e.ɵɵelementEnd()(),e.ɵɵelementStart(38,"div",9)(39,"mat-form-field",10)(40,"mat-label"),e.ɵɵtext(41,"Address"),e.ɵɵelementEnd(),e.ɵɵelement(42,"input",19),e.ɵɵelementEnd(),e.ɵɵelementStart(43,"mat-form-field",10)(44,"mat-label"),e.ɵɵtext(45,"Owner"),e.ɵɵelementEnd(),e.ɵɵelement(46,"input",20),e.ɵɵelementEnd()(),e.ɵɵelementStart(47,"div",9)(48,"mat-form-field",10)(49,"mat-label"),e.ɵɵtext(50,"Integer Value"),e.ɵɵelementEnd(),e.ɵɵelement(51,"input",21),e.ɵɵtemplate(52,Js,2,0,"mat-error",12),e.ɵɵelementEnd(),e.ɵɵelementStart(53,"div",22)(54,"label",23),e.ɵɵtext(55,"Boolean Value"),e.ɵɵelementEnd(),e.ɵɵelementStart(56,"mat-checkbox",24),e.ɵɵtext(57),e.ɵɵpipe(58,"translate"),e.ɵɵelementEnd()()()(),e.ɵɵelementStart(59,"div",25)(60,"div",26),e.ɵɵtext(61,"Relations"),e.ɵɵelementEnd(),e.ɵɵelementStart(62,"div",27),e.ɵɵtemplate(63,er,18,7,"div",28),e.ɵɵelementEnd(),e.ɵɵelementStart(64,"div")(65,"button",29),e.ɵɵlistener("click",(function(){return e.ɵɵrestoreView(t),e.ɵɵresetView(n.addRelation())})),e.ɵɵtext(66," Add "),e.ɵɵelementEnd()()()(),e.ɵɵelementStart(67,"div",30)(68,"button",31),e.ɵɵpipe(69,"async"),e.ɵɵlistener("click",(function(){return e.ɵɵrestoreView(t),e.ɵɵresetView(n.cancel())})),e.ɵɵtext(70," Cancel "),e.ɵɵelementEnd(),e.ɵɵelementStart(71,"button",32),e.ɵɵpipe(72,"async"),e.ɵɵtext(73," Create "),e.ɵɵelementEnd()()()}if(2&t){const t=e.ɵɵreference(1);e.ɵɵproperty("formGroup",n.addEntityFormGroup),e.ɵɵadvance(9),e.ɵɵproperty("ngIf",e.ɵɵpipeBind1(10,14,n.isLoading$)),e.ɵɵadvance(2),e.ɵɵproperty("ngIf",!1===e.ɵɵpipeBind1(12,16,n.isLoading$)),e.ɵɵadvance(8),e.ɵɵproperty("ngIf",n.addEntityFormGroup.get("entityName").hasError("required")),e.ɵɵadvance(6),e.ɵɵproperty("showLabel",!0)("allowedEntityTypes",n.allowedEntityTypes),e.ɵɵadvance(),e.ɵɵproperty("ngIf",n.addEntityFormGroup.get("entityType").value===n.entityType.ASSET),e.ɵɵadvance(),e.ɵɵproperty("ngIf",n.addEntityFormGroup.get("entityType").value!==n.entityType.ASSET),e.ɵɵadvance(25),e.ɵɵproperty("ngIf",n.addEntityFormGroup.get("attributes.number").hasError("pattern")),e.ɵɵadvance(5),e.ɵɵtextInterpolate1(" ",e.ɵɵpipeBind1(58,18,n.addEntityFormGroup.get("attributes.booleanValue").value?"value.true":"value.false")," "),e.ɵɵadvance(5),e.ɵɵproperty("fxShow",n.relations().length),e.ɵɵadvance(),e.ɵɵproperty("ngForOf",n.relations().controls),e.ɵɵadvance(5),e.ɵɵproperty("disabled",e.ɵɵpipeBind1(69,20,n.isLoading$)),e.ɵɵadvance(3),e.ɵɵproperty("disabled",e.ɵɵpipeBind1(72,22,n.isLoading$)||t.invalid||!t.dirty)}},dependencies:e.ɵɵgetComponentDepsFactory(nr),styles:["[_nghost-%COMP%]   .add-entity-form[_ngcontent-%COMP%]   .boolean-value-input[_ngcontent-%COMP%]{padding-left:5px}[_nghost-%COMP%]   .add-entity-form[_ngcontent-%COMP%]   .boolean-value-input[_ngcontent-%COMP%]   .checkbox-label[_ngcontent-%COMP%]{color:#0000008a;font-size:12px}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding-right:5px;padding-bottom:5px;padding-left:5px}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%]{padding-right:5px;padding-left:5px;font-size:12px;font-weight:700;color:#0000008a;white-space:nowrap}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .mat-form-field-infix[_ngcontent-%COMP%]{width:auto!important}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]{padding-right:5px;padding-bottom:15px;padding-left:5px}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{padding-top:5px}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%]{padding-right:5px;padding-left:5px}[_nghost-%COMP%]   .relations-list[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .md-button[_ngcontent-%COMP%]{margin:0}"]})}}t("AddEntityComponent",nr);const ir=t=>({height:t});function or(t,n){if(1&t&&(e.ɵɵelementStart(0,"tb-icon"),e.ɵɵtext(1),e.ɵɵelementEnd()),2&t){const t=e.ɵɵnextContext().$implicit;e.ɵɵstyleMap(t.value.icon.iconStyles),e.ɵɵstyleProp("color",t.value.icon.iconColor.color),e.ɵɵadvance(),e.ɵɵtextInterpolate1(" ",t.value.icon.icon," ")}}function ar(t,n){if(1&t&&(e.ɵɵelementStart(0,"div",4)(1,"div",5),e.ɵɵtemplate(2,or,2,5,"tb-icon",6),e.ɵɵelementStart(3,"div",7),e.ɵɵtext(4),e.ɵɵelementEnd()(),e.ɵɵelementStart(5,"div"),e.ɵɵtext(6),e.ɵɵelementEnd()()),2&t){const t=n.$implicit,i=e.ɵɵnextContext();e.ɵɵproperty("ngStyle",e.ɵɵpureFunction1(12,ir,i.columnHeight+"px")),e.ɵɵadvance(2),e.ɵɵproperty("ngIf",t.value.icon.showIcon),e.ɵɵadvance(),e.ɵɵstyleMap(i.keyStyle),e.ɵɵstyleProp("color",i.keyColor.color),e.ɵɵadvance(),e.ɵɵtextInterpolate1(" ",t.key," "),e.ɵɵadvance(),e.ɵɵstyleMap(i.valueStyle),e.ɵɵstyleProp("color",i.valueColor.color),e.ɵɵadvance(),e.ɵɵtextInterpolate(t.value.data)}}const sr=t("valueDefaultSettings",{columnHeight:60,valueColor:C("#212121"),keyColor:C("#868686"),keyFont:{family:"Roboto",size:18,sizeUnit:"px",style:"normal",weight:"500",lineHeight:"100%"},valueFont:{family:"Roboto",size:30,sizeUnit:"px",style:"normal",weight:"500",lineHeight:"100%"}});var rr;!function(t){t.DECIMALS="decimals",t.UNITS="units"}(rr||(rr={}));class lr{constructor(){this.tableValues={},this.valueStyle={},this.keyStyle={}}ngOnInit(){this.settings=this.ctx.settings,this.ctx.$scope.exampleTableComponent=this,this.entityName=this.ctx.datasources[0].entityName,this.columnHeight=this.settings.columnHeight?this.settings.columnHeight:sr.columnHeight,this.valueColor=k.fromSettings(this.settings.valueColor?this.settings.valueColor:sr.valueColor),this.keyColor=k.fromSettings(this.settings.keyColor?this.settings.keyColor:sr.keyColor),this.valueStyle=S(this.settings.valueFont?this.settings.valueFont:sr.valueFont),this.keyStyle=S(this.settings.keyFont?this.settings.keyFont:sr.keyFont)}onDataUpdated(){for(const t of this.ctx.data)if(t.data.length){const e=t.dataKey.label,n=g(t.data[0][1],this.getFormatInfo(t.dataKey,rr.DECIMALS),this.getFormatInfo(t.dataKey,rr.UNITS),!1);this.tableValues[e]={data:n,icon:{showIcon:t.dataKey.settings.showIcon,iconStyles:P(t.dataKey.settings.iconSize,t.dataKey.settings.iconSizeUnit),iconColor:k.fromSettings(t.dataKey.settings.iconColor),icon:t.dataKey.settings.icon}}}this.ctx.detectChanges()}getFormatInfo(t,e){let n=this.ctx[e];return p(t[e])&&(n=t[e]),n}static{this.ɵfac=function(t){return new(t||lr)}}static{this.ɵcmp=e.ɵɵdefineComponent({type:lr,selectors:[["tb-example-table-custom-settings"]],inputs:{ctx:"ctx"},decls:6,vars:4,consts:[[1,"table"],[1,"header"],[1,"content"],["class","content-column",3,"ngStyle",4,"ngFor","ngForOf"],[1,"content-column",3,"ngStyle"],[1,"content-key"],[3,"style","color",4,"ngIf"],[1,"key"]],template:function(t,n){1&t&&(e.ɵɵelementStart(0,"div",0)(1,"div",1),e.ɵɵtext(2),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",2),e.ɵɵtemplate(4,ar,7,14,"div",3),e.ɵɵpipe(5,"keyvalue"),e.ɵɵelementEnd()()),2&t&&(e.ɵɵadvance(2),e.ɵɵtextInterpolate1(" ",n.entityName," "),e.ɵɵadvance(2),e.ɵɵproperty("ngForOf",e.ɵɵpipeBind1(5,2,n.tableValues)))},dependencies:e.ɵɵgetComponentDepsFactory(lr),styles:["[_nghost-%COMP%]{display:block;height:100%}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;gap:10px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-weight:500;font-size:30px;line-height:36px;color:#757575}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.1176470588);border-radius:4px;overflow:auto}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;padding:0 15px;align-items:center}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]   .content-key[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]   .content-key[_ngcontent-%COMP%]   .key[_ngcontent-%COMP%]{letter-spacing:.4px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]:not(:last-child){border-bottom:1px solid rgba(0,0,0,.1176470588)}"]})}}function cr(t,n){1&t&&(e.ɵɵelementStart(0,"mat-error"),e.ɵɵtext(1," Column height is required "),e.ɵɵelementEnd())}t("ExampleTableCustomSettingsComponent",lr);class dr extends O{constructor(t,e){super(t),this.store=t,this.fb=e,this.valuePreviewFn=this._valuePreviewFn.bind(this)}defaultSettings(){return sr}onSettingsSet(t){this.exampleTableConfigForm=this.fb.group({columnHeight:[t.columnHeight,[j.required]],valueColor:[t.valueColor,[]],keyColor:[t.keyColor,[]],keyFont:[t.keyFont,[]],valueFont:[t.valueFont,[]]})}_valuePreviewFn(){const t=this.widgetConfig.config.units,e=this.widgetConfig.config.decimals;return g(22,e,t,!0)}settingsForm(){return this.exampleTableConfigForm}static{this.ɵfac=function(t){return new(t||dr)(e.ɵɵdirectiveInject(X.Store),e.ɵɵdirectiveInject(H.FormBuilder))}}static{this.ɵcmp=e.ɵɵdefineComponent({type:dr,selectors:[["tb-example-table-advanced-config"]],features:[e.ɵɵInheritDefinitionFeature],decls:19,vars:4,consts:[[1,"advanced-config",3,"formGroup"],[1,"row"],[1,"flex-1"],["matInput","","type","number","formControlName","columnHeight"],[4,"ngIf"],[1,"tb-form-row","space-between","flex-1"],["fxLayout","row","fxLayoutAlign","start center","fxLayoutGap","8px"],["formControlName","keyFont",3,"previewText"],["formControlName","keyColor","settingsKey","Key"],["formControlName","valueFont",3,"previewText"],["formControlName","valueColor","settingsKey","Value"]],template:function(t,n){1&t&&(e.ɵɵelementStart(0,"div",0)(1,"div",1)(2,"mat-form-field",2)(3,"mat-label"),e.ɵɵtext(4,"Column height"),e.ɵɵelementEnd(),e.ɵɵelement(5,"input",3),e.ɵɵtemplate(6,cr,2,0,"mat-error",4),e.ɵɵelementEnd(),e.ɵɵelementStart(7,"div",5)(8,"div"),e.ɵɵtext(9,"Key"),e.ɵɵelementEnd(),e.ɵɵelementStart(10,"div",6),e.ɵɵelement(11,"tb-font-settings",7)(12,"tb-color-settings",8),e.ɵɵelementEnd()(),e.ɵɵelementStart(13,"div",5)(14,"div"),e.ɵɵtext(15,"Value"),e.ɵɵelementEnd(),e.ɵɵelementStart(16,"div",6),e.ɵɵelement(17,"tb-font-settings",9)(18,"tb-color-settings",10),e.ɵɵelementEnd()()()()),2&t&&(e.ɵɵproperty("formGroup",n.exampleTableConfigForm),e.ɵɵadvance(6),e.ɵɵproperty("ngIf",n.exampleTableConfigForm.get("columnHeight").hasError("required")),e.ɵɵadvance(5),e.ɵɵproperty("previewText",n.valuePreviewFn),e.ɵɵadvance(6),e.ɵɵproperty("previewText",n.valuePreviewFn))},dependencies:e.ɵɵgetComponentDepsFactory(dr),styles:["[_nghost-%COMP%]{display:block;height:100%}[_nghost-%COMP%]   .advanced-config[_ngcontent-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]   .advanced-config[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{flex-direction:row;display:flex;gap:16px}[_nghost-%COMP%]   .advanced-config[_ngcontent-%COMP%]   .flex-1[_ngcontent-%COMP%]{flex:1}"]})}}t("ExampleTableAdvancedConfigComponent",dr);class hr extends V{get datasource(){const t=this.exampleTableConfigForm.get("datasources").value;return t&&t.length?t[0]:null}constructor(t,e,n){super(t,e),this.store=t,this.widgetConfigComponent=e,this.fb=n,this.basicMode=this.basicMode}configForm(){return this.exampleTableConfigForm}onConfigSet(t){this.exampleTableConfigForm=this.fb.group({datasources:[t.config.datasources,[]],columns:[this.getColumns(t.config.datasources),[]],actions:[t.config.actions||{},[]]})}prepareOutputConfig(t){return this.widgetConfig.config.datasources=t.datasources,this.widgetConfig.config.actions=t.actions,this.setColumns(t.columns,this.widgetConfig.config.datasources),this.widgetConfig}getColumns(t){return t&&t.length&&t[0].dataKeys||[]}setColumns(t,e){e&&e.length&&(e[0].dataKeys=t)}static{this.ɵfac=function(t){return new(t||hr)(e.ɵɵdirectiveInject(X.Store),e.ɵɵdirectiveInject(G.WidgetConfigComponent),e.ɵɵdirectiveInject(H.FormBuilder))}}static{this.ɵcmp=e.ɵɵdefineComponent({type:hr,selectors:[["tb-example-table-basic-config"]],features:[e.ɵɵInheritDefinitionFeature],decls:4,vars:5,consts:[[3,"formGroup"],["hideDataKeys","","formControlName","datasources",3,"configMode"],["panelTitle","Columns","addKeyTitle","Add column","keySettingsTitle","Column settings","removeKeyTitle","Remove column","noKeysText","No columns configured","hideDataKeyColor","","formControlName","columns",3,"datasourceType","deviceId","entityAliasId"],["formControlName","actions"]],template:function(t,n){1&t&&(e.ɵɵelementStart(0,"div",0),e.ɵɵelement(1,"tb-datasources",1)(2,"tb-data-keys-panel",2)(3,"tb-widget-actions-panel",3),e.ɵɵelementEnd()),2&t&&(e.ɵɵproperty("formGroup",n.exampleTableConfigForm),e.ɵɵadvance(),e.ɵɵproperty("configMode",n.basicMode),e.ɵɵadvance(),e.ɵɵproperty("datasourceType",null==n.datasource?null:n.datasource.type)("deviceId",null==n.datasource?null:n.datasource.deviceId)("entityAliasId",null==n.datasource?null:n.datasource.entityAliasId))},dependencies:e.ɵɵgetComponentDepsFactory(hr),encapsulation:2})}}t("ExampleTableBasicConfigComponent",hr);class ur extends O{constructor(t,e){super(t),this.store=t,this.fb=e,this.defaultSettingsValue={showIcon:!1,iconSize:30,iconSizeUnit:"px",icon:"thermostat",iconColor:C("#5469FF")}}settingsForm(){return this.keySettingsForm}defaultSettings(){return this.defaultSettingsValue}onSettingsSet(t){this.keySettingsForm=this.fb.group({showIcon:[t.showIcon,[]],icon:[t.icon,[]],iconSize:[t.iconSize,[]],iconSizeUnit:[t.iconSizeUnit,[]],iconColor:[t.iconColor,[]]})}static{this.ɵfac=function(t){return new(t||ur)(e.ɵɵdirectiveInject(X.Store),e.ɵɵdirectiveInject(H.FormBuilder))}}static{this.ɵcmp=e.ɵɵdefineComponent({type:ur,selectors:[["tb-example-table-key-settings"]],features:[e.ɵɵInheritDefinitionFeature],decls:10,vars:2,consts:[[3,"formGroup"],[1,"tb-form-row"],["formControlName","showIcon",1,"mat-slide","fixed-title-width"],["fxFlex","","fxLayout","row","fxLayoutAlign","start center","fxLayoutGap","8px"],["appearance","outline","subscriptSizing","dynamic",1,"flex","number"],["matInput","","type","number","min","0","formControlName","iconSize","placeholder","Set"],["fxFlex","","formControlName","iconSizeUnit"],["asBoxInput","","iconClearButton","","formControlName","icon",3,"color"],["formControlName","iconColor","settingsKey","Icon"]],template:function(t,n){if(1&t&&(e.ɵɵelementStart(0,"div",0)(1,"div",1)(2,"mat-slide-toggle",2),e.ɵɵtext(3," Icon "),e.ɵɵelementEnd(),e.ɵɵelementStart(4,"div",3)(5,"mat-form-field",4),e.ɵɵelement(6,"input",5),e.ɵɵelementEnd(),e.ɵɵelement(7,"tb-css-unit-select",6)(8,"tb-material-icon-select",7)(9,"tb-color-settings",8),e.ɵɵelementEnd()()()),2&t){let t;e.ɵɵproperty("formGroup",n.keySettingsForm),e.ɵɵadvance(8),e.ɵɵproperty("color",null==(t=n.keySettingsForm.get("iconColor").value)?null:t.color)}},dependencies:e.ɵɵgetComponentDepsFactory(ur),encapsulation:2})}}function gr(t,n){if(1&t&&(e.ɵɵelementStart(0,"div",4)(1,"div",5),e.ɵɵtext(2),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",6),e.ɵɵtext(4),e.ɵɵelementEnd()()),2&t){const t=n.$implicit;e.ɵɵadvance(2),e.ɵɵtextInterpolate(t.key),e.ɵɵadvance(2),e.ɵɵtextInterpolate(t.value)}}t("DataKeySettingsComponent",ur);class pr{constructor(){this.tableValues={}}ngOnInit(){const t=[{type:D.entity,dataKeys:[{decimals:0,label:"Temperature",name:"temperature",settings:{},type:E.attribute}],entityFilter:{type:T.entityType,entityType:_.DEVICE},keyFilters:[{key:{key:"active",type:A.ATTRIBUTE},predicate:{operation:L.EQUAL,type:I.BOOLEAN,value:{defaultValue:!0}},valueType:F.BOOLEAN}]}],e={type:R.latest,datasources:t,callbacks:{onDataUpdated:()=>{this.onDataUpdated()}}};this.ctx.subscriptionApi.createSubscription(e,!0).subscribe((t=>{this.ctx.defaultSubscription=t,this.ctx.data=t.data,this.ctx.datasources=t.datasources}))}onDataUpdated(){for(const t of this.ctx.data)if(t.data.length){const e=t.datasource.entity.name,n=g(t.data[0][1],2,"°C",!1);this.tableValues[e]=n}this.ctx.detectChanges()}static{this.ɵfac=function(t){return new(t||pr)}}static{this.ɵcmp=e.ɵɵdefineComponent({type:pr,selectors:[["tb-example-table-custom-subscription"]],inputs:{ctx:"ctx"},decls:6,vars:3,consts:[[1,"table"],[1,"header"],[1,"content"],["class","content-column",4,"ngFor","ngForOf"],[1,"content-column"],[1,"content-key"],[1,"content-value"]],template:function(t,n){1&t&&(e.ɵɵelementStart(0,"div",0)(1,"div",1),e.ɵɵtext(2," Active devices "),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",2),e.ɵɵtemplate(4,gr,5,2,"div",3),e.ɵɵpipe(5,"keyvalue"),e.ɵɵelementEnd()()),2&t&&(e.ɵɵadvance(4),e.ɵɵproperty("ngForOf",e.ɵɵpipeBind1(5,1,n.tableValues)))},dependencies:e.ɵɵgetComponentDepsFactory(pr),styles:["[_nghost-%COMP%]{display:block;height:100%}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;gap:10px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-weight:500;font-size:30px;line-height:36px;color:#757575}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.1176470588);border-radius:4px;overflow:auto}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;padding:0 15px;align-items:center;height:60px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]   .content-value[_ngcontent-%COMP%]{font-weight:500;font-size:30px;line-height:36px}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]   .content-key[_ngcontent-%COMP%]{font-size:18px;line-height:24px;letter-spacing:.4px;color:#757575}[_nghost-%COMP%]   .table[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .content-column[_ngcontent-%COMP%]:not(:last-child){border-bottom:1px solid rgba(0,0,0,.1176470588)}"]})}}t("ExampleTableCustomSubscriptionComponent",pr);class fr{ngOnInit(){this.ctx.$scope.exampleTableComponent=this,this.options={animation:!1,plugins:{legend:{labels:{usePointStyle:!0}}}}}onDataUpdated(){const t={labels:[],datasets:[{data:[],backgroundColor:[]}]};for(const e of this.ctx.data)e.data.length&&(t.labels.push(e.dataKey.label),t.datasets[0].data.push(e.data[0][1]),t.datasets[0].backgroundColor.push(e.dataKey.color));this.data=t,this.ctx.detectChanges()}static{this.ɵfac=function(t){return new(t||fr)}}static{this.ɵcmp=e.ɵɵdefineComponent({type:fr,selectors:[["tb-example-of-using-third-party-library"]],inputs:{ctx:"ctx"},decls:1,vars:2,consts:[["type","pie",3,"data","options"]],template:function(t,n){1&t&&e.ɵɵelement(0,"p-chart",0),2&t&&e.ɵɵproperty("data",n.data)("options",n.options)},dependencies:e.ɵɵgetComponentDepsFactory(fr),encapsulation:2})}}t("ExampleOfUsingThirdPartyLibraryComponent",fr);class mr{static{this.ɵfac=function(t){return new(t||mr)}}static{this.ɵmod=e.ɵɵdefineNgModule({type:mr})}static{this.ɵinj=e.ɵɵdefineInjector({imports:[b,z,B,Ys,N,W,Z.withConfig({addFlexToParent:!1}),et,nr,lr,dr,hr,ur,pr,fr]})}}t("ExamplesModule",mr),("undefined"==typeof ngJitMode||ngJitMode)&&e.ɵɵsetNgModuleScope(mr,{declarations:[et,nr,lr,dr,hr,ur,pr,fr],imports:[b,z,B,Ys,N,W,Z.withConfig({addFlexToParent:!1})],exports:[et,nr,lr,dr,hr,ur,pr,fr]});class xr{constructor(){}static{this.ɵfac=function(t){return new(t||xr)}}static{this.ɵcmp=e.ɵɵdefineComponent({type:xr,selectors:[["tb-lib-styles-entry"]],standalone:!0,features:[e.ɵɵStandaloneFeature],decls:0,vars:0,template:function(t,e){},encapsulation:2})}}const br=(t,e)=>{const n=t[u];if(n.styles?.length){const t=n.styles[0];let i=document.getElementById(e);if(!i){i=document.createElement("style"),i.id=e;(document.head||document.getElementsByTagName("head")[0]).appendChild(i)}i.innerHTML=t}};class yr{constructor(t){!function(t){t.setTranslation("en_US",{tb:{translate:"translate"}},!0)}(t),br(xr,"tb-extension-css")}static{this.ɵfac=function(t){return new(t||yr)(e.ɵɵinject(J.TranslateService))}}static{this.ɵmod=e.ɵɵdefineNgModule({type:yr})}static{this.ɵinj=e.ɵɵdefineInjector({imports:[b,mr]})}}t("ThingsboardExtensionWidgetsModule",yr),("undefined"==typeof ngJitMode||ngJitMode)&&e.ɵɵsetNgModuleScope(yr,{declarations:[],imports:[b],exports:[mr]})}}}));//# sourceMappingURL=thingsboard-extension-widgets.js.map
",
    "descriptor" : null,
    "etag" : "e372544bd1a9a7dcb3013da0fce99bd7788cad1c77d42d66e8e9d0e084cb8323",
    "externalId" : null,
    "fileName" : "thingsboard-extension-widgets1.js",
    "id" : {
      "entityType" : "TB_RESOURCE",
      "id" : "60df9190-7757-11f0-98b6-276650a22f47"
    },
    "link" : "/api/resource/js_module/tenant/thingsboard-extension-widgets1.js",
    "name" : "Tenant extension",
    "preview" : null,
    "public" : false,
    "publicLink" : null,
    "publicResourceKey" : null,
    "resourceKey" : "thingsboard-extension-widgets1.js",
    "resourceSubType" : "EXTENSION",
    "resourceType" : "JS_MODULE",
    "title" : "Tenant extension"
  }
}